import React from 'react';
import ReactFocusLock from 'react-focus-lock';
import invariant from 'tiny-invariant';
// Thin wrapper over react-focus-lock. This wrapper only exists to ensure API compatibility.
// This component should be deleted during https://ecosystem.atlassian.net/browse/AK-5658
export default class FocusLock extends React.Component {
    componentDidMount() {
        const { isEnabled, autoFocus } = this.props;
        if (process.env.NODE_ENV !== 'production') {
            invariant(typeof autoFocus === 'boolean', '@atlaskit/modal-dialog: Passing a function as autoFocus is deprecated. Instead call focus on the element ref or use the autofocus property.');
        }
        if (typeof autoFocus === 'function' && isEnabled) {
            const elem = autoFocus();
            if (elem && elem.focus) {
                elem.focus();
            }
        }
    }
    render() {
        const { isEnabled, autoFocus, shouldReturnFocus } = this.props;
        return (React.createElement(ReactFocusLock, { disabled: !isEnabled, autoFocus: !!autoFocus, returnFocus: shouldReturnFocus }, this.props.children));
    }
}
FocusLock.defaultProps = {
    autoFocus: true,
    isEnabled: true,
    shouldReturnFocus: true,
};
//# sourceMappingURL=FocusLock.js.map