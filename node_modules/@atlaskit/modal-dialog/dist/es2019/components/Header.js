/** @jsx jsx */
import React from 'react';
import { jsx } from '@emotion/core';
import ErrorIcon from '@atlaskit/icon/glyph/error';
import WarningIcon from '@atlaskit/icon/glyph/warning';
import { Header, Title, titleIconWrapperStyles, TitleText, } from '../styled/Content';
const TitleIcon = ({ appearance }) => {
    if (!appearance) {
        return null;
    }
    const Icon = appearance === 'danger' ? ErrorIcon : WarningIcon;
    return (jsx("span", { css: titleIconWrapperStyles(appearance) },
        jsx(Icon, { label: `${appearance} icon` })));
};
export default class ModalHeader extends React.Component {
    render() {
        const { id, appearance, component, heading, onClose, showKeyline, isHeadingMultiline, testId, } = this.props;
        const warning = 'You can provide `component` OR `heading`, not both.';
        if (!component && !heading) {
            return null;
        }
        if (component && heading) {
            console.warn(warning); // eslint-disable-line no-console
            return null;
        }
        if (component) {
            return React.createElement(component, {
                id,
                testId,
                appearance,
                onClose,
                showKeyline,
                isHeadingMultiline,
            });
        }
        return (jsx(Header, { showKeyline: showKeyline },
            jsx(Title, null,
                jsx(TitleIcon, { appearance: appearance }),
                jsx(TitleText, { isHeadingMultiline: isHeadingMultiline, id: id, "data-testid": testId && `${testId}-heading` }, heading))));
    }
}
ModalHeader.defaultProps = {
    isHeadingMultiline: true,
};
//# sourceMappingURL=Header.js.map