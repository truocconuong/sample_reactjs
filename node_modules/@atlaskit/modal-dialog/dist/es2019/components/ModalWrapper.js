import React from 'react';
import Portal from '@atlaskit/portal';
import { layers } from '@atlaskit/theme/constants';
import Modal from './Modal';
import { ModalTransitionConsumer } from './ModalTransition';
import StackConsumer from './StackConsumer';
class ModalWrapper extends React.Component {
    constructor() {
        super(...arguments);
        this.onModalClosed = (onExited) => (e) => {
            if (onExited) {
                onExited();
            }
            if (this.props.onCloseComplete) {
                this.props.onCloseComplete(e);
            }
        };
    }
    render() {
        return (React.createElement(ModalTransitionConsumer, null, ({ isOpen, onExited }) => (React.createElement(Portal, { zIndex: layers.modal() },
            React.createElement(StackConsumer, { isOpen: isOpen }, naturalStackIndex => (React.createElement(Modal, Object.assign({}, this.props, { isOpen: isOpen, stackIndex: this.props.stackIndex || naturalStackIndex, onCloseComplete: this.onModalClosed(onExited) }), this.props.children)))))));
    }
}
ModalWrapper.defaultProps = {
    autoFocus: true,
    scrollBehavior: 'inside',
    shouldCloseOnEscapePress: true,
    shouldCloseOnOverlayClick: true,
    isChromeless: false,
    width: 'medium',
    isHeadingMultiline: true,
    onClose: () => { },
};
export default ModalWrapper;
//# sourceMappingURL=ModalWrapper.js.map