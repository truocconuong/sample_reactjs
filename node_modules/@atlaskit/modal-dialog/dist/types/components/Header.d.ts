/** @jsx jsx */
import React from 'react';
import { AppearanceType, KeyboardOrMouseEvent } from '../types';
export interface HeaderProps extends HeaderComponentProps {
    /**
      Boolean OR Function indicating which element to focus when the component mounts
      TRUE will automatically find the first "tabbable" element within the modal
      Providing a function should return the element you want to focus
    */
    /** Component to render the header of the modal. */
    component?: React.ElementType<HeaderComponentProps>;
}
export interface HeaderComponentProps {
    /**
     * Unique identifier for the heading.
     */
    id?: string;
    /**
     * Appearance of the modal that changes the color of the primary action and adds an icon to the heading.
     */
    appearance?: AppearanceType;
    /**
     * Callback function called when the modal dialog is requesting to be closed.
     */
    onClose: (e: KeyboardOrMouseEvent) => void;
    /**
     * Heading for the modal dialog.
     */
    heading?: React.ReactNode;
    /**
     * When set to `true` should be used to draw a line underneath the header signifying that there is overflowed content inside the modal dialog.
     */
    showKeyline?: boolean;
    /**
     * When `true` will allow the heading to span multiple lines.
     * Defaults to `false`.
     */
    isHeadingMultiline?: boolean;
    /**
     * A `testId` prop is provided for specified elements,
     * which is a unique string that appears as a data attribute `data-testid` in the rendered code,
     * serving as a hook for automated tests.
     */
    testId?: string;
}
export default class ModalHeader extends React.Component<HeaderProps, {}> {
    static defaultProps: {
        isHeadingMultiline: boolean;
    };
    render(): JSX.Element | null;
}
