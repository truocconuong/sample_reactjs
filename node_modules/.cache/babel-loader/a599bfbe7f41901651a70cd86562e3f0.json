{"ast":null,"code":"import axios from \"axios\";\nimport AuthService from \"./AuthService\";\nimport { domainServer } from \"../utils/config.js\";\nconst auth = new AuthService();\nvar self = null;\nvar domain = null;\nexport default class Networking {\n  constructor() {\n    this.post = this.post.bind(this);\n    this.upload = this.upload.bind(this);\n    this.patch = this.patch.bind(this);\n    this.get = this.get.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getHeaderUpload = this.getHeaderUpload.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.domain = domainServer;\n    self = this;\n  }\n\n  getHeader() {\n    const profile = auth.getProfile();\n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        authorization: `${profile}`,\n        tokenTimeStamp: localStorage.getItem(\"tokenTimeStamp\")\n      }\n    }; // console.log(axiosConfig);\n\n    return axiosConfig;\n  }\n\n  getHeaderUpload() {\n    const profile = auth.getProfile();\n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        authorization: `${profile}`,\n        tokenTimeStamp: localStorage.getItem(\"tokenTimeStamp\")\n      }\n    }; // console.log(axiosConfig);\n\n    return axiosConfig;\n  }\n\n  post(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios.post(this.domain + url, params, this.getHeader()).then(function (response) {\n        return resolve(response.data);\n      }).catch(function (error) {\n        // console.log(error.response);\n        self.handleError(error, rejected);\n      });\n    });\n  }\n\n  upload(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios.post(this.domain + url, params, this.getHeaderUpload()).then(function (response) {\n        return resolve(response.data);\n      }).catch(function (error) {\n        console.log(\"UploadError\", error);\n        self.handleError(error, rejected);\n      });\n    });\n  }\n\n  patch(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios.patch(this.domain + url, params, this.getHeader()).then(function (response) {\n        // console.log('lala');\n        return resolve(response.data);\n      }).catch(function (error) {\n        // console.log('1234');\n        console.log(error);\n        self.handleError(error, rejected);\n      });\n    });\n  }\n\n  put(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios.put(this.domain + url, params, this.getHeader()).then(function (response) {\n        // console.log('lala');\n        return resolve(response.data);\n      }).catch(function (error) {\n        // console.log('1234');\n        console.log(error);\n        self.handleError(error, rejected);\n      });\n    });\n  }\n\n  get(url) {\n    return new Promise((resolve, rejected) => {\n      axios.get(this.domain + url, this.getHeader()).then(function (response) {\n        return resolve(response.data);\n      }).catch(function (error) {\n        self.handleError(error, rejected); // return rejected(error)\n      });\n    });\n  }\n\n  delete(url) {\n    return new Promise((resolve, rejected) => {\n      axios.delete(this.domain + url, this.getHeader()).then(function (response) {\n        return resolve(response.data);\n      }).catch(function (error) {\n        console.log(error); // self.handleError(error, rejected);\n      });\n    });\n  }\n\n  handleError(error, rejected) {\n    if (error.response) {\n      if (error.response.status === 401) {\n        console.log(error.response, \"hihi\");\n\n        if (error.response.data.message == \"Logout\") {\n          window.location.reload();\n        } else {\n          auth.logout();\n        }\n      } else if (error.response.status === 404) {// window.location.href = '/error';\n      } else {\n        rejected(error);\n      }\n    } else {\n      console.log(\"ERROR---->\", error);\n      rejected(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Service/Network.js"],"names":["axios","AuthService","domainServer","auth","self","domain","Networking","constructor","post","bind","upload","patch","get","getHeader","getHeaderUpload","handleError","profile","getProfile","axiosConfig","headers","authorization","tokenTimeStamp","localStorage","getItem","url","params","Promise","resolve","rejected","then","response","data","catch","error","console","log","put","delete","status","message","window","location","reload","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport AuthService from \"./AuthService\";\nimport { domainServer } from \"../utils/config.js\";\n\nconst auth = new AuthService();\nvar self = null;\nvar domain = null;\n\nexport default class Networking {\n  constructor() {\n    this.post = this.post.bind(this);\n    this.upload = this.upload.bind(this);\n    this.patch = this.patch.bind(this);\n    this.get = this.get.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getHeaderUpload = this.getHeaderUpload.bind(this);\n    this.handleError = this.handleError.bind(this);\n\n    this.domain = domainServer;\n\n    self = this;\n  }\n\n  getHeader() {\n    const profile = auth.getProfile();\n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        authorization: `${profile}`,\n        tokenTimeStamp: localStorage.getItem(\"tokenTimeStamp\"),\n      },\n    };\n    // console.log(axiosConfig);\n    return axiosConfig;\n  }\n  getHeaderUpload() {\n    const profile = auth.getProfile();\n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        authorization: `${profile}`,\n        tokenTimeStamp: localStorage.getItem(\"tokenTimeStamp\"),\n      },\n    };\n    // console.log(axiosConfig);\n    return axiosConfig;\n  }\n\n  post(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .post(this.domain + url, params, this.getHeader())\n        .then(function (response) {\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          // console.log(error.response);\n          self.handleError(error, rejected);\n        });\n    });\n  }\n  upload(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .post(this.domain + url, params, this.getHeaderUpload())\n        .then(function (response) {\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          console.log(\"UploadError\", error);\n          self.handleError(error, rejected);\n        });\n    });\n  }\n\n  patch(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .patch(this.domain + url, params, this.getHeader())\n        .then(function (response) {\n          // console.log('lala');\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          // console.log('1234');\n          console.log(error);\n          self.handleError(error, rejected);\n        });\n    });\n  }\n\n  put(url, params) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .put(this.domain + url, params, this.getHeader())\n        .then(function (response) {\n          // console.log('lala');\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          // console.log('1234');\n          console.log(error);\n          self.handleError(error, rejected);\n        });\n    });\n  }\n\n  get(url) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .get(this.domain + url, this.getHeader())\n        .then(function (response) {\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          self.handleError(error, rejected);\n          // return rejected(error)\n        });\n    });\n  }\n  delete(url) {\n    return new Promise((resolve, rejected) => {\n      axios\n        .delete(this.domain + url, this.getHeader())\n        .then(function (response) {\n          return resolve(response.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n          // self.handleError(error, rejected);\n        });\n    });\n  }\n\n  handleError(error, rejected) {\n    if (error.response) {\n      if (error.response.status === 401) {\n        console.log(error.response, \"hihi\");\n        if (error.response.data.message == \"Logout\") {\n          window.location.reload();\n        } else {\n          auth.logout();\n        }\n      } else if (error.response.status === 404) {\n        // window.location.href = '/error';\n      } else {\n        rejected(error);\n      }\n    } else {\n      console.log(\"ERROR---->\", error);\n      rejected(error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}