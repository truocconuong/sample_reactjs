{"ast":null,"code":"import axios from \"axios\";\nimport { domainServer } from \"../utils/config.js\";\nvar self = null;\nexport default class AuthService {\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n    this.setProfile = this.setProfile.bind(this);\n    this.domain = domainServer;\n    self = this;\n  }\n\n  login(email, password, callback) {\n    let setProfile = this.setProfile;\n    axios.post(`${this.domain}/api/sigin`, {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(response.data.data);\n      setProfile(response.data.data.token);\n      localStorage.setItem(\"tokenTimeStamp\", response.data.data.tokenTimeStamp);\n      localStorage.removeItem(\"forceLogout\");\n      callback(true);\n    }).catch(function (error) {\n      console.log(error);\n      callback(false);\n    });\n  }\n\n  handleError(error, rejected) {\n    if (error.response) {\n      if (error.response.status === 401) {\n        this.forceLogout();\n      } else if (error.response.status === 404) {// window.location.href = '/error';\n      } else {\n        rejected(error);\n      }\n    } else {\n      console.log(\"ERROR---->\", error);\n      rejected(error);\n    }\n  }\n\n  loggedIn() {\n    return new Promise((resolved, rejected) => {\n      // const profile = this.getProfile();\n      // if (!profile) {\n      let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n\n      if (!tokenTimeStamp) {\n        resolved(null);\n      } else {\n        let setProfile = this.setProfile;\n        axios.post(`${this.domain}/api/checklogin/browser`, {\n          tokenTimeStamp: tokenTimeStamp\n        }).then(function (response) {\n          setProfile(response.data.data.tokenAuth);\n          resolved(response.data.data.role);\n        }).catch(function (error) {\n          self.handleError(error, rejected);\n          console.log(error);\n        });\n      } // } else {\n      //   let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n      //   if (!tokenTimeStamp) {\n      //     resolved(null);\n      //   } else {\n      //     axios\n      //       .post(`${this.domain}/api/checklogin/browser`, {\n      //         tokenTimeStamp: tokenTimeStamp,\n      //       })\n      //       .then(function (response) {\n      //         resolved(response.data.data.role);\n      //       })\n      //       .catch(function (error) {\n      //         self.handleError(error, rejected);\n      //         console.log(error);\n      //       });\n      //   }\n      // }\n\n    });\n  }\n\n  setProfile(profile) {\n    sessionStorage.setItem(\"token\", profile);\n  }\n\n  getProfile() {\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n\n    if (tokenTimeStamp) {\n      const profile = sessionStorage.getItem(\"token\");\n      return profile ? profile : null;\n    } else {\n      return null;\n    }\n  }\n\n  logout() {\n    // console.log('LogOut');\n    sessionStorage.removeItem(\"token\");\n    localStorage.removeItem(\"tokenTimeStamp\");\n    window.location.replace(\"/\");\n  }\n\n  forceLogout() {\n    // console.log('LogOut');\n    sessionStorage.removeItem(\"token\");\n    localStorage.removeItem(\"tokenTimeStamp\");\n    localStorage.setItem(\"forceLogout\", \"true\");\n    window.location.replace(\"/\");\n  }\n\n  _checkStatus(response) {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Service/AuthService.js"],"names":["axios","domainServer","self","AuthService","constructor","login","bind","logout","getProfile","setProfile","domain","email","password","callback","post","then","response","console","log","data","token","localStorage","setItem","tokenTimeStamp","removeItem","catch","error","handleError","rejected","status","forceLogout","loggedIn","Promise","resolved","getItem","tokenAuth","role","profile","sessionStorage","window","location","replace","_checkStatus","Error","statusText"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { domainServer } from \"../utils/config.js\";\n\nvar self = null;\nexport default class AuthService {\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n    this.setProfile = this.setProfile.bind(this);\n\n    this.domain = domainServer;\n\n    self = this;\n  }\n\n  login(email, password, callback) {\n    let setProfile = this.setProfile;\n    axios\n      .post(`${this.domain}/api/sigin`, {\n        email: email,\n        password: password,\n      })\n      .then(function (response) {\n        console.log(response.data.data);\n        setProfile(response.data.data.token);\n        localStorage.setItem(\n          \"tokenTimeStamp\",\n          response.data.data.tokenTimeStamp\n        );\n        localStorage.removeItem(\"forceLogout\");\n        callback(true);\n      })\n      .catch(function (error) {\n        console.log(error);\n        callback(false);\n      });\n  }\n  handleError(error, rejected) {\n    if (error.response) {\n      if (error.response.status === 401) {\n        this.forceLogout();\n      } else if (error.response.status === 404) {\n        // window.location.href = '/error';\n      } else {\n        rejected(error);\n      }\n    } else {\n      console.log(\"ERROR---->\", error);\n      rejected(error);\n    }\n  }\n  loggedIn() {\n    return new Promise((resolved, rejected) => {\n      // const profile = this.getProfile();\n      // if (!profile) {\n      let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n      if (!tokenTimeStamp) {\n        resolved(null);\n      } else {\n        let setProfile = this.setProfile;\n        axios\n          .post(`${this.domain}/api/checklogin/browser`, {\n            tokenTimeStamp: tokenTimeStamp,\n          })\n          .then(function (response) {\n            setProfile(response.data.data.tokenAuth);\n            resolved(response.data.data.role);\n          })\n          .catch(function (error) {\n            self.handleError(error, rejected);\n            console.log(error);\n          });\n      }\n      // } else {\n      //   let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n      //   if (!tokenTimeStamp) {\n      //     resolved(null);\n      //   } else {\n      //     axios\n      //       .post(`${this.domain}/api/checklogin/browser`, {\n      //         tokenTimeStamp: tokenTimeStamp,\n      //       })\n      //       .then(function (response) {\n      //         resolved(response.data.data.role);\n      //       })\n      //       .catch(function (error) {\n      //         self.handleError(error, rejected);\n      //         console.log(error);\n      //       });\n      //   }\n      // }\n    });\n  }\n\n  setProfile(profile) {\n    sessionStorage.setItem(\"token\", profile);\n  }\n  getProfile() {\n    let tokenTimeStamp = localStorage.getItem(\"tokenTimeStamp\");\n    if (tokenTimeStamp) {\n      const profile = sessionStorage.getItem(\"token\");\n      return profile ? profile : null;\n    } else {\n      return null;\n    }\n  }\n\n  logout() {\n    // console.log('LogOut');\n    sessionStorage.removeItem(\"token\");\n    localStorage.removeItem(\"tokenTimeStamp\");\n    window.location.replace(\"/\");\n  }\n  forceLogout() {\n    // console.log('LogOut');\n    sessionStorage.removeItem(\"token\");\n    localStorage.removeItem(\"tokenTimeStamp\");\n    localStorage.setItem(\"forceLogout\", \"true\");\n    window.location.replace(\"/\");\n  }\n\n  _checkStatus(response) {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}