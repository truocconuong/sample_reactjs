{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Modal/Interview/Create.js\";\nimport Modal, { ModalTransition } from \"@atlaskit/modal-dialog\";\nimport React, { Component } from 'react';\nimport Select from \"react-select\";\nimport { rulesCreateInterview } from \"../../../utils/rule\";\nimport Validator from \"../../../utils/validator\";\nimport moment from 'moment';\nimport { DatetimePickerTrigger } from \"../../libs/rc-datetime-picker\";\n\nclass Create extends Component {\n  constructor() {\n    super();\n\n    this.toggleEyes = () => {\n      const {\n        typePassword\n      } = this.state;\n      let typePasswordNew = '';\n\n      if (typePassword === 'password') {\n        typePasswordNew = 'text';\n      } else {\n        typePasswordNew = 'password';\n      }\n\n      this.setState({\n        typePassword: typePasswordNew\n      });\n    };\n\n    this.removeError = key => {\n      const {\n        errors\n      } = this.state;\n      delete errors[key];\n      this.setState({\n        errors: errors\n      });\n    };\n\n    this.state = {\n      jobSelected: {\n        key: '',\n        value: ''\n      },\n      candidateSelected: {\n        key: '',\n        value: ''\n      },\n      typeSelected: {\n        key: '',\n        value: ''\n      },\n      jobName: '',\n      jobId: '',\n      location: '',\n      typePassword: 'password',\n      timeInterview: moment(),\n      timeInterviewEnd: moment(),\n      type: '',\n      candidateId: '',\n      password: 'fetchtech',\n      scrollBehaviour: \"inside\",\n      errors: {}\n    };\n    this.types = [{\n      value: 'offline',\n      label: 'Offline'\n    }, {\n      value: 'online',\n      label: 'Online'\n    }];\n    this.handleOnChangeJob = this.handleOnChangeJob.bind(this);\n    this.handleCreateInterview = this.handleCreateInterview.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleOnChangeCandidate = this.handleOnChangeCandidate.bind(this);\n    this.defaultState = this.defaultState.bind(this);\n    this.handleOnChangeType = this.handleOnChangeType.bind(this);\n    this.handleChangeDatePicker = this.handleChangeDatePicker.bind(this);\n    this.validator = new Validator(rulesCreateInterview);\n  }\n\n  handleChangeDatePicker(_moment, fields) {\n    this.setState({\n      [fields]: moment(_moment)\n    });\n  }\n\n  defaultState() {\n    this.setState({\n      jobSelected: {\n        key: '',\n        value: ''\n      },\n      candidateSelected: {\n        key: '',\n        value: ''\n      },\n      typeSelected: {\n        key: '',\n        value: ''\n      },\n      jobName: '',\n      location: '',\n      timeInterview: moment(),\n      timeInterviewEnd: moment(),\n      candidateId: '',\n      scrollBehaviour: \"inside\",\n      errors: {}\n    });\n  }\n\n  handleOnChangeJob(e) {\n    const {\n      value,\n      label\n    } = e;\n    this.props.getDataCandidateById(value);\n    this.setState({\n      jobName: label,\n      jobId: value,\n      jobSelected: e,\n      candidateSelected: {\n        key: '',\n        value: ''\n      },\n      candidateId: ''\n    });\n    this.removeError('jobName');\n  }\n\n  handleOnChangeCandidate(e) {\n    this.setState({\n      candidateSelected: e,\n      candidateId: e.id,\n      location: e.location\n    });\n    this.removeError('candidateId');\n  }\n\n  handleOnChangeType(e) {\n    this.setState({\n      typeSelected: e,\n      type: e.value\n    });\n    this.removeError('type');\n  }\n\n  handleInputChange(e) {\n    console.log(e);\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n    this.removeError(name);\n  }\n\n  isEmpty(obj) {\n    // check obj empty\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  handleCreateInterview(e) {\n    e.preventDefault();\n    const data = this.state;\n    const errors = this.validator.validate(this.state);\n    this.setState({\n      errors: errors\n    });\n\n    if (this.isEmpty(errors)) {\n      const item = {\n        jobName: data.jobName,\n        location: data.location,\n        jobId: data.jobId,\n        timeInterview: data.timeInterview.format('MM/DD/YYYY HH:mm'),\n        timeInterviewEnd: `${data.timeInterview.format('MM/DD/YYYY HH:mm').substring(0, 11)}${data.timeInterviewEnd.format('HH:mm')}`,\n        candidateId: data.candidateId,\n        type: data.type,\n        password: data.password\n      };\n      this.defaultState();\n      this.props.createInterview(item);\n    }\n  }\n\n  render() {\n    const self = this;\n    const {\n      jobs,\n      candidates\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ModalTransition, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, this.props.show && /*#__PURE__*/React.createElement(Modal, {\n      onClose: self.props.onHide,\n      scrollBehavior: this.state.scrollBehaviour,\n      height: \"auto\",\n      width: 800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleCreateInterview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, \"Name job:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      className: errors.jobName ? 'invalid-selected' : '',\n      options: jobs,\n      value: this.state.jobSelected,\n      onChange: this.handleOnChangeJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, \"Candidate:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      options: candidates,\n      className: errors.candidateId ? 'invalid-selected' : '',\n      value: this.state.candidateSelected,\n      onChange: this.handleOnChangeCandidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 45\n      }\n    }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      type: \"text\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.handleInputChange,\n      className: errors.location ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Please enter location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 45\n      }\n    }, \"Type:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      options: this.types,\n      className: errors.type ? 'invalid-selected' : '',\n      value: this.state.typeSelected,\n      onChange: this.handleOnChangeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    })))), this.state.type === 'online' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 53\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: this.state.typePassword,\n      name: \"password\",\n      onChange: this.handleInputChange,\n      defaultValue: this.state.password,\n      className: errors.password ? \"form-control is-invalid\" : \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.toggleEyes,\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.typePassword === 'password' ? 'far fa-eye' : 'far fa-eye-slash',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 154\n      }\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }, \"Password zoom need have a maximum of 10 characters.\")))) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 45\n      }\n    }, \" Time Interview:\"), /*#__PURE__*/React.createElement(DatetimePickerTrigger, {\n      moment: this.state.timeInterview,\n      onChange: _moment => this.handleChangeDatePicker(_moment, \"timeInterview\"),\n      showTimePicker: true,\n      className: \"custom-date-picker-interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-date-picker-interview__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      readOnly: true,\n      name: \"timeInterview\",\n      value: this.state.timeInterview.format('DD/MM/YYYY HH:ss'),\n      className: 'form-control',\n      placeholder: \"Enter Time Interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-calendar icon-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 45\n      }\n    }, \" Time Interview End:\"), /*#__PURE__*/React.createElement(DatetimePickerTrigger, {\n      moment: this.state.timeInterviewEnd,\n      onChange: _moment => this.handleChangeDatePicker(_moment, \"timeInterviewEnd\"),\n      showCalendarPicker: false,\n      showTimePicker: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-date-picker-interview__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      readOnly: true,\n      name: \"timeInterviewEnd\",\n      value: this.state.timeInterviewEnd.format('HH:ss'),\n      className: errors.timeInterviewEnd ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter Time Interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-calendar icon-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 61\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-cus__right text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-secondary\",\n      onClick: this.props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 37\n      }\n    }, \"Cancel\"))))));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Modal/Interview/Create.js"],"names":["Modal","ModalTransition","React","Component","Select","rulesCreateInterview","Validator","moment","DatetimePickerTrigger","Create","constructor","toggleEyes","typePassword","state","typePasswordNew","setState","removeError","key","errors","jobSelected","value","candidateSelected","typeSelected","jobName","jobId","location","timeInterview","timeInterviewEnd","type","candidateId","password","scrollBehaviour","types","label","handleOnChangeJob","bind","handleCreateInterview","handleInputChange","handleOnChangeCandidate","defaultState","handleOnChangeType","handleChangeDatePicker","validator","_moment","fields","e","props","getDataCandidateById","id","console","log","name","target","isEmpty","obj","Object","keys","length","preventDefault","data","validate","item","format","substring","createInterview","render","self","jobs","candidates","show","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,wBAAvC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;;AACA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC3BO,EAAAA,WAAW,GAAG;AACV;;AADU,SA+CdC,UA/Cc,GA+CD,MAAM;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,UAAIF,YAAY,KAAK,UAArB,EAAiC;AAC7BE,QAAAA,eAAe,GAAG,MAAlB;AACH,OAFD,MAEO;AACHA,QAAAA,eAAe,GAAG,UAAlB;AACH;;AACD,WAAKC,QAAL,CAAc;AACVH,QAAAA,YAAY,EAAEE;AADJ,OAAd;AAIH,KA3Da;;AAAA,SAwIdE,WAxIc,GAwICC,GAAD,IAAS;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKL,KAAxB;AACA,aAAOK,MAAM,CAACD,GAAD,CAAb;AACA,WAAKF,QAAL,CAAc;AACVG,QAAAA,MAAM,EAAEA;AADE,OAAd;AAGH,KA9Ia;;AAEV,SAAKL,KAAL,GAAa;AACTM,MAAAA,WAAW,EAAE;AACTF,QAAAA,GAAG,EAAE,EADI;AAETG,QAAAA,KAAK,EAAE;AAFE,OADJ;AAKTC,MAAAA,iBAAiB,EAAE;AACfJ,QAAAA,GAAG,EAAE,EADU;AAEfG,QAAAA,KAAK,EAAE;AAFQ,OALV;AASTE,MAAAA,YAAY,EAAE;AACVL,QAAAA,GAAG,EAAE,EADK;AAEVG,QAAAA,KAAK,EAAE;AAFG,OATL;AAaTG,MAAAA,OAAO,EAAE,EAbA;AAcTC,MAAAA,KAAK,EAAE,EAdE;AAeTC,MAAAA,QAAQ,EAAE,EAfD;AAgBTb,MAAAA,YAAY,EAAE,UAhBL;AAiBTc,MAAAA,aAAa,EAAEnB,MAAM,EAjBZ;AAkBToB,MAAAA,gBAAgB,EAAEpB,MAAM,EAlBf;AAmBTqB,MAAAA,IAAI,EAAE,EAnBG;AAoBTC,MAAAA,WAAW,EAAE,EApBJ;AAqBTC,MAAAA,QAAQ,EAAE,WArBD;AAsBTC,MAAAA,eAAe,EAAE,QAtBR;AAuBTb,MAAAA,MAAM,EAAE;AAvBC,KAAb;AAyBA,SAAKc,KAAL,GAAa,CACT;AACIZ,MAAAA,KAAK,EAAE,SADX;AAEIa,MAAAA,KAAK,EAAE;AAFX,KADS,EAKT;AACIb,MAAAA,KAAK,EAAE,QADX;AAEIa,MAAAA,KAAK,EAAE;AAFX,KALS,CAAb;AAUA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BH,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKK,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKM,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BN,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKO,SAAL,GAAiB,IAAIpC,SAAJ,CAAcD,oBAAd,CAAjB;AACH;;AAgBDoC,EAAAA,sBAAsB,CAACE,OAAD,EAAUC,MAAV,EAAkB;AACpC,SAAK7B,QAAL,CAAc;AACV,OAAC6B,MAAD,GAAUrC,MAAM,CAACoC,OAAD;AADN,KAAd;AAGH;;AAEDJ,EAAAA,YAAY,GAAG;AACX,SAAKxB,QAAL,CAAc;AACVI,MAAAA,WAAW,EAAE;AACTF,QAAAA,GAAG,EAAE,EADI;AAETG,QAAAA,KAAK,EAAE;AAFE,OADH;AAKVC,MAAAA,iBAAiB,EAAE;AACfJ,QAAAA,GAAG,EAAE,EADU;AAEfG,QAAAA,KAAK,EAAE;AAFQ,OALT;AASVE,MAAAA,YAAY,EAAE;AACVL,QAAAA,GAAG,EAAE,EADK;AAEVG,QAAAA,KAAK,EAAE;AAFG,OATJ;AAaVG,MAAAA,OAAO,EAAE,EAbC;AAcVE,MAAAA,QAAQ,EAAE,EAdA;AAeVC,MAAAA,aAAa,EAAEnB,MAAM,EAfX;AAgBVoB,MAAAA,gBAAgB,EAAEpB,MAAM,EAhBd;AAiBVsB,MAAAA,WAAW,EAAE,EAjBH;AAkBVE,MAAAA,eAAe,EAAE,QAlBP;AAmBVb,MAAAA,MAAM,EAAE;AAnBE,KAAd;AAqBH;;AAGDgB,EAAAA,iBAAiB,CAACW,CAAD,EAAI;AACjB,UAAM;AAAEzB,MAAAA,KAAF;AAASa,MAAAA;AAAT,QAAmBY,CAAzB;AACA,SAAKC,KAAL,CAAWC,oBAAX,CAAgC3B,KAAhC;AACA,SAAKL,QAAL,CAAc;AACVQ,MAAAA,OAAO,EAAEU,KADC;AAEVT,MAAAA,KAAK,EAAEJ,KAFG;AAGVD,MAAAA,WAAW,EAAE0B,CAHH;AAIVxB,MAAAA,iBAAiB,EAAE;AACfJ,QAAAA,GAAG,EAAE,EADU;AAEfG,QAAAA,KAAK,EAAE;AAFQ,OAJT;AAQVS,MAAAA,WAAW,EAAE;AARH,KAAd;AAUA,SAAKb,WAAL,CAAiB,SAAjB;AACH;;AAEDsB,EAAAA,uBAAuB,CAACO,CAAD,EAAI;AACvB,SAAK9B,QAAL,CAAc;AACVM,MAAAA,iBAAiB,EAAEwB,CADT;AAEVhB,MAAAA,WAAW,EAAEgB,CAAC,CAACG,EAFL;AAGVvB,MAAAA,QAAQ,EAAEoB,CAAC,CAACpB;AAHF,KAAd;AAKA,SAAKT,WAAL,CAAiB,aAAjB;AACH;;AAEDwB,EAAAA,kBAAkB,CAACK,CAAD,EAAI;AAClB,SAAK9B,QAAL,CAAc;AACVO,MAAAA,YAAY,EAAEuB,CADJ;AAEVjB,MAAAA,IAAI,EAAEiB,CAAC,CAACzB;AAFE,KAAd;AAIA,SAAKJ,WAAL,CAAiB,MAAjB;AACH;;AAEDqB,EAAAA,iBAAiB,CAACQ,CAAD,EAAI;AACjBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACA,QAAIM,IAAI,GAAGN,CAAC,CAACO,MAAF,CAASD,IAApB;AACA,QAAI/B,KAAK,GAAGyB,CAAC,CAACO,MAAF,CAAShC,KAArB;AAEA,SAAKL,QAAL,CAAc;AACV,OAACoC,IAAD,GAAQ/B;AADE,KAAd;AAGA,SAAKJ,WAAL,CAAiBmC,IAAjB;AACH;;AAUDE,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAA5B,IAAiCH,GAAG,CAAC5C,WAAJ,KAAoB6C,MAA5D;AACH;;AAEDnB,EAAAA,qBAAqB,CAACS,CAAD,EAAI;AACrBA,IAAAA,CAAC,CAACa,cAAF;AACA,UAAMC,IAAI,GAAG,KAAK9C,KAAlB;AACA,UAAMK,MAAM,GAAG,KAAKwB,SAAL,CAAekB,QAAf,CAAwB,KAAK/C,KAA7B,CAAf;AACA,SAAKE,QAAL,CAAc;AACVG,MAAAA,MAAM,EAAEA;AADE,KAAd;;AAGA,QAAI,KAAKmC,OAAL,CAAanC,MAAb,CAAJ,EAA0B;AACtB,YAAM2C,IAAI,GAAG;AACTtC,QAAAA,OAAO,EAAEoC,IAAI,CAACpC,OADL;AAETE,QAAAA,QAAQ,EAAEkC,IAAI,CAAClC,QAFN;AAGTD,QAAAA,KAAK,EAAEmC,IAAI,CAACnC,KAHH;AAITE,QAAAA,aAAa,EAAEiC,IAAI,CAACjC,aAAL,CAAmBoC,MAAnB,CAA0B,kBAA1B,CAJN;AAKTnC,QAAAA,gBAAgB,EAAG,GAAEgC,IAAI,CAACjC,aAAL,CAAmBoC,MAAnB,CAA0B,kBAA1B,EAA8CC,SAA9C,CAAwD,CAAxD,EAA2D,EAA3D,CAA+D,GAAEJ,IAAI,CAAChC,gBAAL,CAAsBmC,MAAtB,CAA6B,OAA7B,CAAsC,EALnH;AAMTjC,QAAAA,WAAW,EAAE8B,IAAI,CAAC9B,WANT;AAOTD,QAAAA,IAAI,EAAE+B,IAAI,CAAC/B,IAPF;AAQTE,QAAAA,QAAQ,EAAE6B,IAAI,CAAC7B;AARN,OAAb;AAUA,WAAKS,YAAL;AACA,WAAKO,KAAL,CAAWkB,eAAX,CAA2BH,IAA3B;AACH;AACJ;;AAGDI,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,IAAb;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAuB,KAAKtB,KAAlC;AACA,UAAM;AAAE5B,MAAAA;AAAF,QAAa,KAAKL,KAAxB;AACA,wBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKiC,KAAL,CAAWuB,IAAX,iBACG,oBAAC,KAAD;AACI,MAAA,OAAO,EAAEH,IAAI,CAACpB,KAAL,CAAWwB,MADxB;AAEI,MAAA,cAAc,EAAE,KAAKzD,KAAL,CAAWkB,eAF/B;AAGI,MAAA,MAAM,EAAE,MAHZ;AAII,MAAA,KAAK,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKK,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAElB,MAAM,CAACK,OAAP,GAAiB,kBAAjB,GAAsC,EAFrD;AAGI,MAAA,OAAO,EAAE4C,IAHb;AAII,MAAA,KAAK,EAAE,KAAKtD,KAAL,CAAWM,WAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKe,iBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAYI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAEkC,UAFb;AAGI,MAAA,SAAS,EAAElD,MAAM,CAACW,WAAP,GAAqB,kBAArB,GAA0C,EAHzD;AAII,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWQ,iBAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKiB,uBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,eAuBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAC,MAArB;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWY,QAA9D;AAAwE,MAAA,QAAQ,EAAE,KAAKY,iBAAvF;AAA0G,MAAA,SAAS,EAC/GnB,MAAM,CAACO,QAAP,GACM,yBADN,GAEM,cAHV;AAKI,MAAA,WAAW,EAAC,uBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAE,KAAKO,KAFlB;AAGI,MAAA,SAAS,EAAEd,MAAM,CAACU,IAAP,GAAc,kBAAd,GAAmC,EAHlD;AAII,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWS,YAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKkB,kBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,CADJ,CAvBJ,EA+CQ,KAAK3B,KAAL,CAAWe,IAAX,KAAoB,QAApB,gBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAE,KAAKf,KAAL,CAAWD,YAAxB;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAsD,MAAA,QAAQ,EAAE,KAAKyB,iBAArE;AAAwF,MAAA,YAAY,EAAE,KAAKxB,KAAL,CAAWiB,QAAjH;AAA2H,MAAA,SAAS,EAChIZ,MAAM,CAACY,QAAP,GACM,yBADN,GAEM,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC;AAAM,MAAA,OAAO,EAAE,KAAKnB,UAApB;AAAgC,MAAA,SAAS,EAAC,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6D;AAAG,MAAA,SAAS,EAAE,KAAKE,KAAL,CAAWD,YAAX,KAA4B,UAA5B,GAAyC,YAAzC,GAAwD,kBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7D,CAApC,CANJ,CAFJ,eAUI;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAVJ,CADJ,CADJ,CADJ,GAiBI,EAhEZ,eAkEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,qBAAD;AACI,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWa,aADvB;AAEI,MAAA,QAAQ,EAAGiB,OAAD,IACN,KAAKF,sBAAL,CAA4BE,OAA5B,EAAqC,eAArC,CAHR;AAKI,MAAA,cAAc,EAAE,IALpB;AAMI,MAAA,SAAS,EAAC,8BANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAC,eAArB;AAAqC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWa,aAAX,CAAyBoC,MAAzB,CAAgC,kBAAhC,CAA5C;AAAiG,MAAA,SAAS,EAAE,cAA5G;AACI,MAAA,WAAW,EAAC,sBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAHJ,CARJ,CAFJ,CADJ,eAsBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,oBAAC,qBAAD;AACI,MAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWc,gBADvB;AAEI,MAAA,QAAQ,EAAGgB,OAAD,IACN,KAAKF,sBAAL,CAA4BE,OAA5B,EAAqC,kBAArC,CAHR;AAKI,MAAA,kBAAkB,EAAE,KALxB;AAMI,MAAA,cAAc,EAAE,IANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAC,kBAArB;AAAwC,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWc,gBAAX,CAA4BmC,MAA5B,CAAmC,OAAnC,CAA/C;AAA4F,MAAA,SAAS,EACjG5C,MAAM,CAACS,gBAAP,GACM,yBADN,GAEM,cAHV;AAKI,MAAA,WAAW,EAAC,sBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAPJ,CARJ,CAFJ,CAtBJ,CADJ,CAlEJ,eAoHI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAmD,MAAA,OAAO,EAAE,KAAKmB,KAAL,CAAWwB,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CApHJ,CADJ,CANJ,CAFR,CADJ;AAyIH;;AA3T0B;;AA+T/B,eAAe7D,MAAf","sourcesContent":["import Modal, { ModalTransition } from \"@atlaskit/modal-dialog\";\nimport React, { Component } from 'react';\nimport Select from \"react-select\";\nimport { rulesCreateInterview } from \"../../../utils/rule\";\nimport Validator from \"../../../utils/validator\";\nimport moment from 'moment'\nimport { DatetimePickerTrigger } from \"../../libs/rc-datetime-picker\";\nclass Create extends Component {\n    constructor() {\n        super();\n        this.state = {\n            jobSelected: {\n                key: '',\n                value: ''\n            },\n            candidateSelected: {\n                key: '',\n                value: ''\n            },\n            typeSelected: {\n                key: '',\n                value: ''\n            },\n            jobName: '',\n            jobId: '',\n            location: '',\n            typePassword: 'password',\n            timeInterview: moment(),\n            timeInterviewEnd: moment(),\n            type: '',\n            candidateId: '',\n            password: 'fetchtech',\n            scrollBehaviour: \"inside\",\n            errors: {}\n        }\n        this.types = [\n            {\n                value: 'offline',\n                label: 'Offline'\n            },\n            {\n                value: 'online',\n                label: 'Online'\n            }\n        ]\n        this.handleOnChangeJob = this.handleOnChangeJob.bind(this);\n        this.handleCreateInterview = this.handleCreateInterview.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleOnChangeCandidate = this.handleOnChangeCandidate.bind(this)\n        this.defaultState = this.defaultState.bind(this)\n        this.handleOnChangeType = this.handleOnChangeType.bind(this)\n        this.handleChangeDatePicker = this.handleChangeDatePicker.bind(this)\n        this.validator = new Validator(rulesCreateInterview);\n    }\n\n    toggleEyes = () => {\n        const { typePassword } = this.state;\n        let typePasswordNew = ''\n        if (typePassword === 'password') {\n            typePasswordNew = 'text';\n        } else {\n            typePasswordNew = 'password';\n        }\n        this.setState({\n            typePassword: typePasswordNew\n        })\n\n    }\n\n    handleChangeDatePicker(_moment, fields) {\n        this.setState({\n            [fields]: moment(_moment),\n        });\n    }\n\n    defaultState() {\n        this.setState({\n            jobSelected: {\n                key: '',\n                value: ''\n            },\n            candidateSelected: {\n                key: '',\n                value: ''\n            },\n            typeSelected: {\n                key: '',\n                value: ''\n            },\n            jobName: '',\n            location: '',\n            timeInterview: moment(),\n            timeInterviewEnd: moment(),\n            candidateId: '',\n            scrollBehaviour: \"inside\",\n            errors: {}\n        })\n    }\n\n\n    handleOnChangeJob(e) {\n        const { value, label } = e\n        this.props.getDataCandidateById(value)\n        this.setState({\n            jobName: label,\n            jobId: value,\n            jobSelected: e,\n            candidateSelected: {\n                key: '',\n                value: ''\n            },\n            candidateId: ''\n        });\n        this.removeError('jobName')\n    }\n\n    handleOnChangeCandidate(e) {\n        this.setState({\n            candidateSelected: e,\n            candidateId: e.id,\n            location: e.location\n        })\n        this.removeError('candidateId')\n    }\n\n    handleOnChangeType(e) {\n        this.setState({\n            typeSelected: e,\n            type: e.value,\n        })\n        this.removeError('type')\n    }\n\n    handleInputChange(e) {\n        console.log(e)\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value,\n        });\n        this.removeError(name);\n    }\n\n    removeError = (key) => {\n        const { errors } = this.state;\n        delete errors[key];\n        this.setState({\n            errors: errors\n        })\n    }\n\n    isEmpty(obj) {\n        // check obj empty\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n\n    handleCreateInterview(e) {\n        e.preventDefault();\n        const data = this.state;\n        const errors = this.validator.validate(this.state);\n        this.setState({\n            errors: errors,\n        });\n        if (this.isEmpty(errors)) {\n            const item = {\n                jobName: data.jobName,\n                location: data.location,\n                jobId: data.jobId,\n                timeInterview: data.timeInterview.format('MM/DD/YYYY HH:mm'),\n                timeInterviewEnd: `${data.timeInterview.format('MM/DD/YYYY HH:mm').substring(0, 11)}${data.timeInterviewEnd.format('HH:mm')}`,\n                candidateId: data.candidateId,\n                type: data.type,\n                password: data.password\n            }\n            this.defaultState();\n            this.props.createInterview(item);\n        }\n    }\n\n\n    render() {\n        const self = this;\n        const { jobs, candidates } = this.props;\n        const { errors } = this.state;\n        return (\n            <ModalTransition>\n                {this.props.show && (\n                    <Modal\n                        onClose={self.props.onHide}\n                        scrollBehavior={this.state.scrollBehaviour}\n                        height={\"auto\"}\n                        width={800}\n                    >\n                        <form className=\"form\" onSubmit={this.handleCreateInterview}>\n                            <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                    <label>Name job:</label>\n                                    <Select\n                                        name=\"option\"\n                                        className={errors.jobName ? 'invalid-selected' : ''}\n                                        options={jobs}\n                                        value={this.state.jobSelected}\n                                        onChange={this.handleOnChangeJob}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Candidate:</label>\n                                    <Select\n                                        name=\"option\"\n                                        options={candidates}\n                                        className={errors.candidateId ? 'invalid-selected' : ''}\n                                        value={this.state.candidateSelected}\n                                        onChange={this.handleOnChangeCandidate}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <label>Location:</label>\n                                            <input disabled type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleInputChange} className={\n                                                errors.location\n                                                    ? \"form-control is-invalid\"\n                                                    : \"form-control\"\n                                            }\n                                                placeholder=\"Please enter location\" />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label>Type:</label>\n                                            <Select\n                                                name=\"option\"\n                                                options={this.types}\n                                                className={errors.type ? 'invalid-selected' : ''}\n                                                value={this.state.typeSelected}\n                                                onChange={this.handleOnChangeType}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    this.state.type === 'online' ? (\n                                        <div className=\"form-group\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <label>Password</label>\n                                                    <div className=\"input-group\">\n                                                        <input type={this.state.typePassword} name=\"password\" onChange={this.handleInputChange} defaultValue={this.state.password} className={\n                                                            errors.password\n                                                                ? \"form-control is-invalid\"\n                                                                : \"form-control\"\n                                                        } />\n                                                        <div className=\"input-group-append\"><span onClick={this.toggleEyes} className=\"input-group-text\"><i className={this.state.typePassword === 'password' ? 'far fa-eye' : 'far fa-eye-slash'} /></span></div>\n                                                    </div>\n                                                    <span className=\"form-text text-muted\">Password zoom need have a maximum of 10 characters.</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : ''\n                                }\n                                <div className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <label> Time Interview:</label>\n                                            <DatetimePickerTrigger\n                                                moment={this.state.timeInterview}\n                                                onChange={(_moment) =>\n                                                    this.handleChangeDatePicker(_moment, \"timeInterview\")\n                                                }\n                                                showTimePicker={true}\n                                                className=\"custom-date-picker-interview\"\n                                            >\n                                                <div className=\"custom-date-picker-interview__wrap\">\n                                                    <input readOnly name=\"timeInterview\" value={this.state.timeInterview.format('DD/MM/YYYY HH:ss')} className={'form-control'}\n                                                        placeholder=\"Enter Time Interview\" />\n                                                    <div className=\"input-group-append\">\n                                                        <span className=\"input-group-text\">\n                                                            <i className=\"la la-calendar icon-lg\"></i>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </DatetimePickerTrigger>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label> Time Interview End:</label>\n                                            <DatetimePickerTrigger\n                                                moment={this.state.timeInterviewEnd}\n                                                onChange={(_moment) =>\n                                                    this.handleChangeDatePicker(_moment, \"timeInterviewEnd\")\n                                                }\n                                                showCalendarPicker={false}\n                                                showTimePicker={true}\n                                            >\n                                                <div className=\"custom-date-picker-interview__wrap\">\n                                                    <input readOnly name=\"timeInterviewEnd\" value={this.state.timeInterviewEnd.format('HH:ss')} className={\n                                                        errors.timeInterviewEnd\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control\"\n                                                    }\n                                                        placeholder=\"Enter Time Interview\" />\n                                                    <div className=\"input-group-append\">\n                                                        <span className=\"input-group-text\">\n                                                            <i className=\"la la-calendar icon-lg\"></i>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </DatetimePickerTrigger>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"modal-cus__right text-right\">\n                                    <button type=\"submit\" className=\"btn btn-primary mr-2\">Save</button>\n                                    <button type=\"reset\" className=\"btn btn-secondary\" onClick={this.props.onHide}>Cancel</button>\n                                </div>\n                            </div>\n                        </form>\n                    </Modal>\n                )\n                }\n            </ModalTransition>\n        );\n    }\n}\n\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}