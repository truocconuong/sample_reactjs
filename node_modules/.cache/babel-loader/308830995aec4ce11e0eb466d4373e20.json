{"ast":null,"code":"import { __extends } from \"tslib\";\nimport React from 'react';\nimport { canUseDOM } from 'exenv';\nimport ReactDOM from 'react-dom';\nimport invariant from 'tiny-invariant';\nimport { layers } from '@atlaskit/theme/constants';\nimport { PORTAL_MOUNT_EVENT, PORTAL_UNMOUNT_EVENT } from '../constants';\n\nvar createContainer = function (zIndex) {\n  var container = document.createElement('div');\n  container.setAttribute('class', 'atlaskit-portal');\n  container.setAttribute('style', \"z-index: \" + zIndex + \";\");\n  return container;\n};\n\nvar getBody = function () {\n  invariant(document && document.body, 'cannot find document.body');\n  return document.body;\n};\n/**\n * Reverses the name: zIndex object so we can quickly access it using the zIndex value as the key.\n */\n\n\nvar zIndexToName = Object.keys(layers).reduce(function (acc, name) {\n  var layerName = name;\n  var value = layers[layerName]();\n  acc[value] = layerName;\n  return acc;\n}, {});\n\nvar getLayerName = function (zIndex) {\n  return Object.prototype.hasOwnProperty.call(zIndexToName, zIndex) ? zIndexToName[zIndex] : null;\n};\n\nvar getEvent = function (eventName, zIndex) {\n  var detail = {\n    layer: getLayerName(Number(zIndex)),\n    zIndex: zIndex\n  }; // In ie11 the CustomEvent object exists, but it cannot be used as a constructor\n\n  if (typeof CustomEvent === 'function') {\n    return new CustomEvent(eventName, {\n      detail: detail\n    });\n  } // CustomEvent constructor API not supported (ie11)\n  // Using `new Event` or `new CustomEvent` does not work in ie11\n\n\n  var event = document.createEvent('CustomEvent');\n  var params = {\n    bubbles: true,\n    cancellable: true,\n    detail: detail\n  };\n  event.initCustomEvent(eventName, params.bubbles, params.cancellable, params.detail);\n  return event;\n};\n\nvar firePortalEvent = function (eventName, zIndex) {\n  var event = getEvent(eventName, zIndex);\n  window.dispatchEvent(event);\n};\n\nvar getPortalParent = function () {\n  var parentElement = document.querySelector('body > .atlaskit-portal-container');\n\n  if (!parentElement) {\n    var parent_1 = document.createElement('div');\n    parent_1.setAttribute('class', 'atlaskit-portal-container');\n    parent_1.setAttribute('style', \"display: flex;\");\n    getBody().appendChild(parent_1);\n    return parent_1;\n  }\n\n  return parentElement;\n}; // This is a generic component does two things:\n// 1. Portals it's children using React.createPortal\n// 2. Creates the DOM node container for the portal based on props\n// 3. Ensures DOM the container creates it's own stacking context\n\n\nvar Portal =\n/** @class */\nfunction (_super) {\n  __extends(Portal, _super);\n\n  function Portal() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      container: canUseDOM ? createContainer(_this.props.zIndex) : undefined,\n      portalIsMounted: false\n    };\n    return _this;\n  }\n\n  Portal.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var container = this.state.container;\n    var zIndex = this.props.zIndex;\n\n    if (container && prevProps.zIndex !== zIndex) {\n      var newContainer = createContainer(zIndex);\n      getPortalParent().replaceChild(container, newContainer); // eslint-disable-next-line react/no-did-update-set-state\n\n      this.setState({\n        container: newContainer\n      });\n    } else if (!prevState.container && container) {\n      // SSR path\n      getPortalParent().appendChild(container);\n    }\n  };\n\n  Portal.prototype.componentDidMount = function () {\n    var container = this.state.container;\n    var zIndex = this.props.zIndex;\n\n    if (container) {\n      getPortalParent().appendChild(container);\n    } else {\n      // SSR path\n      var newContainer = createContainer(zIndex); // eslint-disable-next-line react/no-did-mount-set-state\n\n      this.setState({\n        container: newContainer\n      });\n    } // eslint-disable-next-line react/no-did-mount-set-state\n\n\n    this.setState({\n      portalIsMounted: true\n    });\n    firePortalEvent(PORTAL_MOUNT_EVENT, Number(zIndex));\n  };\n\n  Portal.prototype.componentWillUnmount = function () {\n    var container = this.state.container;\n    var zIndex = this.props.zIndex;\n\n    if (container) {\n      getPortalParent().removeChild(container); // clean up parent element if there are no more portals\n\n      var portals = !!document.querySelector('body > .atlaskit-portal-container > .atlaskit-portal');\n\n      if (!portals) {\n        getBody().removeChild(getPortalParent());\n      }\n    }\n\n    firePortalEvent(PORTAL_UNMOUNT_EVENT, Number(zIndex));\n  };\n\n  Portal.prototype.render = function () {\n    var _a = this.state,\n        container = _a.container,\n        portalIsMounted = _a.portalIsMounted;\n    return container && portalIsMounted ? ReactDOM.createPortal(this.props.children, container) : null;\n  };\n\n  Portal.defaultProps = {\n    zIndex: 0\n  };\n  return Portal;\n}(React.Component);\n\nexport default Portal;","map":{"version":3,"sources":["../../../src/components/Portal.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport React from 'react';\nimport { canUseDOM } from 'exenv';\nimport ReactDOM from 'react-dom';\nimport invariant from 'tiny-invariant';\nimport { layers } from '@atlaskit/theme/constants';\nimport { PORTAL_MOUNT_EVENT, PORTAL_UNMOUNT_EVENT } from '../constants';\nvar createContainer = function (zIndex) {\n    var container = document.createElement('div');\n    container.setAttribute('class', 'atlaskit-portal');\n    container.setAttribute('style', \"z-index: \" + zIndex + \";\");\n    return container;\n};\nvar getBody = function () {\n    invariant(document && document.body, 'cannot find document.body');\n    return document.body;\n};\n/**\n * Reverses the name: zIndex object so we can quickly access it using the zIndex value as the key.\n */\nvar zIndexToName = Object.keys(layers).reduce(function (acc, name) {\n    var layerName = name;\n    var value = layers[layerName]();\n    acc[value] = layerName;\n    return acc;\n}, {});\nvar getLayerName = function (zIndex) {\n    return Object.prototype.hasOwnProperty.call(zIndexToName, zIndex)\n        ? zIndexToName[zIndex]\n        : null;\n};\nvar getEvent = function (eventName, zIndex) {\n    var detail = {\n        layer: getLayerName(Number(zIndex)),\n        zIndex: zIndex,\n    };\n    // In ie11 the CustomEvent object exists, but it cannot be used as a constructor\n    if (typeof CustomEvent === 'function') {\n        return new CustomEvent(eventName, {\n            detail: detail,\n        });\n    }\n    // CustomEvent constructor API not supported (ie11)\n    // Using `new Event` or `new CustomEvent` does not work in ie11\n    var event = document.createEvent('CustomEvent');\n    var params = {\n        bubbles: true,\n        cancellable: true,\n        detail: detail,\n    };\n    event.initCustomEvent(eventName, params.bubbles, params.cancellable, params.detail);\n    return event;\n};\nvar firePortalEvent = function (eventName, zIndex) {\n    var event = getEvent(eventName, zIndex);\n    window.dispatchEvent(event);\n};\nvar getPortalParent = function () {\n    var parentElement = document.querySelector('body > .atlaskit-portal-container');\n    if (!parentElement) {\n        var parent_1 = document.createElement('div');\n        parent_1.setAttribute('class', 'atlaskit-portal-container');\n        parent_1.setAttribute('style', \"display: flex;\");\n        getBody().appendChild(parent_1);\n        return parent_1;\n    }\n    return parentElement;\n};\n// This is a generic component does two things:\n// 1. Portals it's children using React.createPortal\n// 2. Creates the DOM node container for the portal based on props\n// 3. Ensures DOM the container creates it's own stacking context\nvar Portal = /** @class */ (function (_super) {\n    __extends(Portal, _super);\n    function Portal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            container: canUseDOM ? createContainer(_this.props.zIndex) : undefined,\n            portalIsMounted: false,\n        };\n        return _this;\n    }\n    Portal.prototype.componentDidUpdate = function (prevProps, prevState) {\n        var container = this.state.container;\n        var zIndex = this.props.zIndex;\n        if (container && prevProps.zIndex !== zIndex) {\n            var newContainer = createContainer(zIndex);\n            getPortalParent().replaceChild(container, newContainer);\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ container: newContainer });\n        }\n        else if (!prevState.container && container) {\n            // SSR path\n            getPortalParent().appendChild(container);\n        }\n    };\n    Portal.prototype.componentDidMount = function () {\n        var container = this.state.container;\n        var zIndex = this.props.zIndex;\n        if (container) {\n            getPortalParent().appendChild(container);\n        }\n        else {\n            // SSR path\n            var newContainer = createContainer(zIndex);\n            // eslint-disable-next-line react/no-did-mount-set-state\n            this.setState({ container: newContainer });\n        }\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({\n            portalIsMounted: true,\n        });\n        firePortalEvent(PORTAL_MOUNT_EVENT, Number(zIndex));\n    };\n    Portal.prototype.componentWillUnmount = function () {\n        var container = this.state.container;\n        var zIndex = this.props.zIndex;\n        if (container) {\n            getPortalParent().removeChild(container);\n            // clean up parent element if there are no more portals\n            var portals = !!document.querySelector('body > .atlaskit-portal-container > .atlaskit-portal');\n            if (!portals) {\n                getBody().removeChild(getPortalParent());\n            }\n        }\n        firePortalEvent(PORTAL_UNMOUNT_EVENT, Number(zIndex));\n    };\n    Portal.prototype.render = function () {\n        var _a = this.state, container = _a.container, portalIsMounted = _a.portalIsMounted;\n        return container && portalIsMounted\n            ? ReactDOM.createPortal(this.props.children, container)\n            : null;\n    };\n    Portal.defaultProps = {\n        zIndex: 0,\n    };\n    return Portal;\n}(React.Component));\nexport default Portal;\n//# sourceMappingURL=Portal.js.map"]},"metadata":{},"sourceType":"module"}