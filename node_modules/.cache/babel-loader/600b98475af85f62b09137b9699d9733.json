{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/Dashboard/Calendar.js\";\nimport React, { Component } from \"react\";\nimport dateFns from \"date-fns\";\nimport Network from \"../../../Service/Network\";\nimport moment from \"moment\";\nimport Interviews from \"../../Modal/Dashboard/Interviews.js\";\nimport DetailInterviewCard from \"../../Modal/Dashboard/DetailInterviewCard.js\";\nimport \"./style.css\";\nconst colors = [\"#ee5253\", \"#27ae60\", \"#5f27cd\", \"#f368e0\", \"#ff6348\"];\nconst api = new Network();\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDateClick = (day, data) => {\n      this.setState({\n        selectedDate: day,\n        data: data ? data.interviews : []\n      }, function () {\n        if (data) {\n          this.showInterviews(true);\n        }\n      });\n    };\n\n    this.nextMonth = () => {\n      // startDateSchedule: moment().startOf(\"month\"),\n      //   endDateSchedule: moment().endOf(\"month\"),\n      this.setState({\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1),\n        startDateSchedule: moment(dateFns.addMonths(this.state.currentMonth, 1)).startOf(\"month\"),\n        endDateSchedule: moment(dateFns.addMonths(this.state.currentMonth, 1)).endOf(\"month\")\n      }, function () {\n        this.getDataSchedule();\n      });\n    };\n\n    this.prevMonth = () => {\n      this.setState({\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1),\n        startDateSchedule: moment(dateFns.subMonths(this.state.currentMonth, 1)).startOf(\"month\"),\n        endDateSchedule: moment(dateFns.subMonths(this.state.currentMonth, 1)).endOf(\"month\")\n      }, function () {\n        this.getDataSchedule();\n      });\n    };\n\n    this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      startDateSchedule: moment().startOf(\"month\"),\n      endDateSchedule: moment().endOf(\"month\"),\n      calendar: {},\n      listColor: new Array(10).fill(),\n      showInterviews: false,\n      data: [],\n      show_form_detail_interview: false,\n      interviewDetail: {}\n    };\n    this.getDataSchedule = this.getDataSchedule.bind(this);\n    this.showInterviews = this.showInterviews.bind(this);\n    this.toggleDetailInterview = this.toggleDetailInterview.bind(this);\n  }\n\n  toggleDetailInterview(isShow, data) {\n    // console.log(data);\n    this.setState({\n      show_form_detail_interview: isShow,\n      interviewDetail: isShow ? data : {},\n      showInterviews: isShow ? false : true\n    });\n  }\n\n  async getDataSchedule() {\n    try {\n      const response = await api.get(`/api/admin/calendar/interview?start=${moment(this.state.startDateSchedule).format(\"MM/DD/YYYY\")}&end=${moment(this.state.endDateSchedule).format(\"MM/DD/YYYY\")}`);\n\n      if (response) {\n        this.setState({\n          calendar: response.data.calendar\n        }); // console.log(response.data.calendar);\n      }\n    } catch (error) {\n      console.log(\"err while fetch data schedule: \", error);\n    }\n  }\n\n  renderHeader() {\n    const dateFormat = \"MMMM, YYYY\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header row_calendar flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: this.prevMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"chevron_left\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-center col_flg_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, dateFns.format(this.state.currentMonth, dateFormat))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-end\",\n      onClick: this.nextMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"chevron_right\")));\n  }\n\n  renderDays() {\n    const dateFormat = \"ddd\";\n    const days = [];\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col col-center date_in_week\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"days row_calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    }, days);\n  }\n\n  renderCells() {\n    const {\n      currentMonth,\n      selectedDate,\n      calendar\n    } = this.state;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    const dateFormat = \"D\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat);\n        const cloneDay = day;\n        days.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: `col cell cell_cs ${!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"}`,\n          key: day,\n          onClick: () => this.onDateClick(dateFns.parse(cloneDay), calendar[moment(cloneDay).format(\"DD/MM/YYYY\")]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        }, !dateFns.isSameMonth(day, monthStart) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"number\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, formattedDate), calendar[moment(day).format(\"DD/MM/YYYY\")] ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrap_dot_interview\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }\n        }, calendar[moment(day).format(\"DD/MM/YYYY\")].interviews.map((interview, index) => {\n          if (index < 3) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: index,\n              className: \"label  label-dot cs_dot\",\n              style: {\n                backgroundColor: colors[index]\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }\n            });\n          } else if (index == calendar[moment(day).format(\"DD/MM/YYYY\")].interviews.length - 1) {\n            return /*#__PURE__*/React.createElement(\"img\", {\n              key: index,\n              className: \"icon_more\",\n              src: \"/img/more.png\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }\n            });\n          } else {\n            return null;\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrap_dot_interview\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }\n        }))));\n        day = dateFns.addDays(day, 1);\n      }\n\n      rows.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row_calendar\",\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, days));\n      days = [];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 12\n      }\n    }, rows);\n  }\n\n  showInterviews(isShow) {\n    this.setState({\n      showInterviews: isShow\n    });\n  }\n\n  componentDidMount() {\n    this.getDataSchedule();\n  }\n\n  render() {\n    const data = this.props.data;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-4 plm_0 prm_0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DetailInterviewCard, {\n      show: this.state.show_form_detail_interview,\n      data: this.state.interviewDetail,\n      onHide: this.toggleDetailInterview.bind(this, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Interviews, {\n      show: this.state.showInterviews,\n      data: this.state.data,\n      onHide: this.showInterviews.bind(this, false),\n      toggleDetailInterview: this.toggleDetailInterview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-custom card-stretch gutter-b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header card-header-mobile border-0 pt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-title align-items-start flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-label font-weight-bolder text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, \"Interview Schedule\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body calendar-body-card  pt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, this.renderHeader(), this.renderDays(), this.renderCells()))))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/Dashboard/Calendar.js"],"names":["React","Component","dateFns","Network","moment","Interviews","DetailInterviewCard","colors","api","Calendar","constructor","props","onDateClick","day","data","setState","selectedDate","interviews","showInterviews","nextMonth","currentMonth","addMonths","state","startDateSchedule","startOf","endDateSchedule","endOf","getDataSchedule","prevMonth","subMonths","Date","calendar","listColor","Array","fill","show_form_detail_interview","interviewDetail","bind","toggleDetailInterview","isShow","response","get","format","error","console","log","renderHeader","dateFormat","renderDays","days","startDate","startOfWeek","i","push","addDays","renderCells","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","isSameMonth","isSameDay","parse","map","interview","index","backgroundColor","length","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport dateFns from \"date-fns\";\nimport Network from \"../../../Service/Network\";\nimport moment from \"moment\";\nimport Interviews from \"../../Modal/Dashboard/Interviews.js\";\nimport DetailInterviewCard from \"../../Modal/Dashboard/DetailInterviewCard.js\";\n\nimport \"./style.css\";\n\nconst colors = [\"#ee5253\", \"#27ae60\", \"#5f27cd\", \"#f368e0\", \"#ff6348\"];\nconst api = new Network();\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      startDateSchedule: moment().startOf(\"month\"),\n      endDateSchedule: moment().endOf(\"month\"),\n      calendar: {},\n      listColor: new Array(10).fill(),\n      showInterviews: false,\n      data: [],\n      show_form_detail_interview: false,\n      interviewDetail: {},\n    };\n    this.getDataSchedule = this.getDataSchedule.bind(this);\n    this.showInterviews = this.showInterviews.bind(this);\n    this.toggleDetailInterview = this.toggleDetailInterview.bind(this);\n  }\n  toggleDetailInterview(isShow, data) {\n    // console.log(data);\n    this.setState({\n      show_form_detail_interview: isShow,\n      interviewDetail: isShow ? data : {},\n      showInterviews: isShow ? false : true,\n    });\n  }\n  async getDataSchedule() {\n    try {\n      const response = await api.get(\n        `/api/admin/calendar/interview?start=${moment(\n          this.state.startDateSchedule\n        ).format(\"MM/DD/YYYY\")}&end=${moment(this.state.endDateSchedule).format(\n          \"MM/DD/YYYY\"\n        )}`\n      );\n      if (response) {\n        this.setState({\n          calendar: response.data.calendar,\n        });\n        // console.log(response.data.calendar);\n      }\n    } catch (error) {\n      console.log(\"err while fetch data schedule: \", error);\n    }\n  }\n\n  renderHeader() {\n    const dateFormat = \"MMMM, YYYY\";\n\n    return (\n      <div className=\"header row_calendar flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={this.prevMonth}>\n            chevron_left\n          </div>\n        </div>\n        <div className=\"col col-center col_flg_2\">\n          <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\n        </div>\n        <div className=\"col col-end\" onClick={this.nextMonth}>\n          <div className=\"icon\">chevron_right</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"ddd\";\n    const days = [];\n\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center date_in_week\" key={i}>\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n\n    return <div className=\"days row_calendar\">{days}</div>;\n  }\n\n  renderCells() {\n    const { currentMonth, selectedDate, calendar } = this.state;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n\n    const dateFormat = \"D\";\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell cell_cs ${\n              !dateFns.isSameMonth(day, monthStart)\n                ? \"disabled\"\n                : dateFns.isSameDay(day, selectedDate)\n                ? \"selected\"\n                : \"\"\n            }`}\n            key={day}\n            onClick={() =>\n              this.onDateClick(\n                dateFns.parse(cloneDay),\n                calendar[moment(cloneDay).format(\"DD/MM/YYYY\")]\n              )\n            }\n          >\n            {!dateFns.isSameMonth(day, monthStart) ? null : (\n              <>\n                <div className=\"number\">{formattedDate}</div>\n                {calendar[moment(day).format(\"DD/MM/YYYY\")] ? (\n                  <div className=\"wrap_dot_interview\">\n                   \n\n                    {calendar[moment(day).format(\"DD/MM/YYYY\")].interviews.map(\n                      (interview, index) => {\n                        if (index < 3) {\n                          return (\n                            <div\n                              key={index}\n                              className=\"label  label-dot cs_dot\"\n                              style={{ backgroundColor: colors[index] }}\n                            ></div>\n                          );\n                        } else if (\n                          index ==\n                          calendar[moment(day).format(\"DD/MM/YYYY\")].interviews\n                            .length -\n                            1\n                        ) {\n                          return (\n                            <img  key={index} className=\"icon_more\" src=\"/img/more.png\" />\n                          );\n                        } else {\n                          return null;\n                        }\n                      }\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"wrap_dot_interview\"></div>\n                )}\n              </>\n            )}\n          </div>\n        );\n        day = dateFns.addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"row_calendar\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  }\n\n  onDateClick = (day, data) => {\n    this.setState(\n      {\n        selectedDate: day,\n        data: data ? data.interviews : [],\n      },\n      function () {\n        if (data) {\n          this.showInterviews(true);\n        }\n      }\n    );\n  };\n\n  nextMonth = () => {\n    // startDateSchedule: moment().startOf(\"month\"),\n    //   endDateSchedule: moment().endOf(\"month\"),\n    this.setState(\n      {\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1),\n        startDateSchedule: moment(\n          dateFns.addMonths(this.state.currentMonth, 1)\n        ).startOf(\"month\"),\n        endDateSchedule: moment(\n          dateFns.addMonths(this.state.currentMonth, 1)\n        ).endOf(\"month\"),\n      },\n      function () {\n        this.getDataSchedule();\n      }\n    );\n  };\n\n  prevMonth = () => {\n    this.setState(\n      {\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1),\n        startDateSchedule: moment(\n          dateFns.subMonths(this.state.currentMonth, 1)\n        ).startOf(\"month\"),\n        endDateSchedule: moment(\n          dateFns.subMonths(this.state.currentMonth, 1)\n        ).endOf(\"month\"),\n      },\n      function () {\n        this.getDataSchedule();\n      }\n    );\n  };\n  showInterviews(isShow) {\n    this.setState({\n      showInterviews: isShow,\n    });\n  }\n  componentDidMount() {\n    this.getDataSchedule();\n  }\n  render() {\n    const data = this.props.data;\n    return (\n      <div className=\"col-xl-4 plm_0 prm_0\">\n        <DetailInterviewCard\n          show={this.state.show_form_detail_interview}\n          data={this.state.interviewDetail}\n          onHide={this.toggleDetailInterview.bind(this, false)}\n        />\n        <Interviews\n          show={this.state.showInterviews}\n          data={this.state.data}\n          onHide={this.showInterviews.bind(this, false)}\n          toggleDetailInterview={this.toggleDetailInterview}\n        />\n        <div className=\"card card-custom card-stretch gutter-b\">\n          <div className=\"card-header card-header-mobile border-0 pt-5\">\n           \n            <h3 className=\"card-title align-items-start flex-column\">\n              <span className=\"card-label font-weight-bolder text-dark\">\n                Interview Schedule\n              </span>\n             \n            </h3>\n          </div>\n          \n          <div className=\"card-body calendar-body-card  pt-0\">\n            <div>\n              <div className=\"\">\n                <div className=\"calendar\">\n                  {this.renderHeader()}\n                  {this.renderDays()}\n                  {this.renderCells()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}