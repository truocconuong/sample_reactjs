{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/RefinedPdf.js\";\nimport React, { Component } from \"react\";\nimport \"rc-pagination/assets/index.css\";\nimport \"./style.css\";\nimport Fbloader from \"../libs/PageLoader/fbloader.js\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport Network from \"../../Service/Network\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from \"draft-js\";\nimport FormEditorPdf from \"./FormEditorPdf\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast\";\nconst api = new Network();\n\nclass RefinedPdf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setNameEditorWrite = name => {\n      this.setState({\n        editorWrite: name\n      });\n    };\n\n    this.handleScroll = () => {\n      let lengthScroll = window.pageYOffset;\n\n      if (lengthScroll > 220) {\n        this.setState({\n          styleHeader: \"card-header style-header-job\"\n        });\n      } else {\n        this.setState({\n          styleHeader: \"card-header\"\n        });\n      }\n    };\n\n    this.defaultState = () => {\n      this.setState({\n        isLoading: false,\n        candidateJob: {},\n        isOpen: false,\n        data: {\n          address: \"\",\n          objective: \"\",\n          summary: \"\",\n          technology: \"\",\n          experience: \"\",\n          education: \"\",\n          skills: \"\",\n          language: \"\",\n          courses: \"\",\n          projects: \"\",\n          contacts: \"\",\n          positions: \"\"\n        },\n        showEditPdf: false,\n        setIsOpen: false,\n        numPages: 1,\n        pageNumber: 1\n      });\n    };\n\n    this.onEditorStateChange = editorState => {\n      const editorWrite = this.state.editorWrite;\n      const data = this.state.data;\n      data[editorWrite] = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      this.setState({\n        [`${this.generateNameEditor(editorWrite)}`]: editorState,\n        data: data\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      styleHeader: \"card-header\",\n      data: {\n        name: \"\",\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\"\n      },\n      base64: \"\",\n      editorWrite: \"\",\n      showEditPdf: false,\n      setIsOpen: false,\n      isOpenPreviewPdf: false,\n      numPages: 1,\n      pageNumber: 1 //   objectiveEditor: EditorState.createEmpty(),\n\n    };\n    this.makePdf = this.makePdf.bind(this);\n    this.getCandidateJob = this.getCandidateJob.bind(this);\n    this.handleInputDataChange = this.handleInputDataChange.bind(this);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleInputDataChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    const dataNow = this.state.data;\n    dataNow[name] = value;\n    this.setState({\n      data: dataNow\n    });\n  }\n\n  async getCandidateJob() {\n    const response = await api.get(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`);\n\n    if (response) {\n      const data = response.data.candidateJob;\n      const dataUpdateState = {\n        candidateJob: data\n      };\n\n      if (data.dataParserPdf) {\n        const dataState = { ...this.state.data,\n          ...data.dataParserPdf\n        };\n        dataUpdateState.data = dataState;\n      }\n\n      this.setState(dataUpdateState, () => {\n        const data = this.state.data;\n\n        for (const key in data) {\n          const blocksFromHTML = convertFromHTML(data[key]);\n          const contentState = ContentState.createFromBlockArray(blocksFromHTML.contentBlocks, blocksFromHTML.entityMap);\n          this.setState({\n            [`${this.generateNameEditor(key)}`]: EditorState.createWithContent(contentState)\n          });\n        }\n      });\n    }\n  }\n\n  generateNameEditor(key) {\n    return `${key}Editor`;\n  }\n\n  async makePdf() {\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      const data = {\n        candidateId: this.props.candidateId,\n        jobId: this.props.jobId,\n        ...this.state.data\n      };\n      const response = await api.post(`/api/v1/candidate/make/pdf`, data);\n\n      if (response) {\n        toast( /*#__PURE__*/React.createElement(CustomToast, {\n          title: \"Refine cv successed !\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }\n        }), {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n          className: \"toast_login\",\n          closeButton: false,\n          hideProgressBar: true,\n          newestOnTop: true,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        });\n        this.props.history.push(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`); // this.defaultState();\n        // this.getCandidateJob();\n      }\n\n      this.setState({\n        isLoading: false\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.getCandidateJob();\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const errors = {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `d-flex flex-column flex-row-fluid wrapper ${this.props.className_wrap_broad}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content d-flex flex-column flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), this.state.isLoading ? /*#__PURE__*/React.createElement(Fbloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 35\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subheader py-3 py-lg-8 subheader-transparent\",\n      id: \"kt_subheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-baseline flex-wrap mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }\n    }, \"Refine Pdf\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-custom card-sticky\",\n      id: \"kt_page_sticky_card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.styleHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, \"Form Refine CV\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.props.history.push(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`),\n      className: \"btn btn-light-primary font-weight-bolder mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.makePdf,\n      type: \"submit\",\n      className: this.state.isLoading ? \"btn btn-primary font-weight-bolder style-btn-kitin spinner spinner-white spinner-right\" : \"btn btn-primary font-weight-bolder style-btn-kitin \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, \"Save\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body card-body-refine-pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, \"Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: data.name,\n      onChange: e => this.handleInputDataChange(e),\n      name: \"name\",\n      className: errors.name ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Address \"), /*#__PURE__*/React.createElement(\"input\", {\n      value: data.address,\n      type: \"text\",\n      onChange: e => this.handleInputDataChange(e),\n      name: \"address\",\n      className: errors.name ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"objective\",\n      nameEditor: this.state.objectiveEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"summary\",\n      nameEditor: this.state.summaryEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"technology\",\n      nameEditor: this.state.technologyEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"experience\",\n      nameEditor: this.state.experienceEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"education\",\n      nameEditor: this.state.educationEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"skills\",\n      nameEditor: this.state.skillsEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"language\",\n      nameEditor: this.state.languageEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"courses\",\n      nameEditor: this.state.coursesEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"projects\",\n      nameEditor: this.state.projectsEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"contacts\",\n      nameEditor: this.state.contactsEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormEditorPdf, {\n      title: \"positions\",\n      nameEditor: this.state.positionsEditor,\n      onEditorStateChange: this.onEditorStateChange,\n      setNameEditorWrite: this.setNameEditorWrite,\n      editorWrite: this.state.editorWrite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    className_wrap_broad: state.ui.className_wrap_broad,\n    candidateId: ownProps.match.params.candidateId,\n    jobId: ownProps.match.params.jobId\n  };\n};\n\nexport default connect(mapStateToProps)(RefinedPdf);","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/RefinedPdf.js"],"names":["React","Component","Fbloader","connect","Link","Network","draftToHtml","EditorState","convertToRaw","convertFromHTML","ContentState","FormEditorPdf","ToastContainer","toast","CustomToast","api","RefinedPdf","constructor","props","setNameEditorWrite","name","setState","editorWrite","handleScroll","lengthScroll","window","pageYOffset","styleHeader","defaultState","isLoading","candidateJob","isOpen","data","address","objective","summary","technology","experience","education","skills","language","courses","projects","contacts","positions","showEditPdf","setIsOpen","numPages","pageNumber","onEditorStateChange","editorState","state","getCurrentContent","generateNameEditor","base64","isOpenPreviewPdf","makePdf","bind","getCandidateJob","handleInputDataChange","componentWillUnmount","removeEventListener","e","target","value","dataNow","response","get","candidateId","jobId","dataUpdateState","dataParserPdf","dataState","key","blocksFromHTML","contentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","post","position","POSITION","BOTTOM_RIGHT","autoClose","className","closeButton","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","history","push","error","componentDidMount","addEventListener","render","errors","className_wrap_broad","objectiveEditor","summaryEditor","technologyEditor","experienceEditor","educationEditor","skillsEditor","languageEditor","coursesEditor","projectsEditor","contactsEditor","positionsEditor","mapDispatchToProps","dispatch","mapStateToProps","ownProps","ui","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,gCAAP;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iDAAP,C,CAA0D;;AAC1D,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,YAJF,QAKO,UALP;AAMA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,MAAMC,GAAG,GAAG,IAAIV,OAAJ,EAAZ;;AAEA,MAAMW,UAAN,SAAyBf,SAAzB,CAAmC;AACjCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuCnBC,kBAvCmB,GAuCGC,IAAD,IAAU;AAC7B,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;AAGD,KA3CkB;;AAAA,SA6CnBG,YA7CmB,GA6CJ,MAAM;AACnB,UAAIC,YAAY,GAAGC,MAAM,CAACC,WAA1B;;AACA,UAAIF,YAAY,GAAG,GAAnB,EAAwB;AACtB,aAAKH,QAAL,CAAc;AACZM,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD,OAJD,MAIO;AACL,aAAKN,QAAL,CAAc;AACZM,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD;AACF,KAxDkB;;AAAA,SAwGnBC,YAxGmB,GAwGJ,MAAM;AACnB,WAAKP,QAAL,CAAc;AACZQ,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,YAAY,EAAE,EAFF;AAGZC,QAAAA,MAAM,EAAE,KAHI;AAIZC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE,EADL;AAEJC,UAAAA,SAAS,EAAE,EAFP;AAGJC,UAAAA,OAAO,EAAE,EAHL;AAIJC,UAAAA,UAAU,EAAE,EAJR;AAKJC,UAAAA,UAAU,EAAE,EALR;AAMJC,UAAAA,SAAS,EAAE,EANP;AAOJC,UAAAA,MAAM,EAAE,EAPJ;AAQJC,UAAAA,QAAQ,EAAE,EARN;AASJC,UAAAA,OAAO,EAAE,EATL;AAUJC,UAAAA,QAAQ,EAAE,EAVN;AAWJC,UAAAA,QAAQ,EAAE,EAXN;AAYJC,UAAAA,SAAS,EAAE;AAZP,SAJM;AAkBZC,QAAAA,WAAW,EAAE,KAlBD;AAmBZC,QAAAA,SAAS,EAAE,KAnBC;AAoBZC,QAAAA,QAAQ,EAAE,CApBE;AAqBZC,QAAAA,UAAU,EAAE;AArBA,OAAd;AAuBD,KAhIkB;;AAAA,SAyKnBC,mBAzKmB,GAyKIC,WAAD,IAAiB;AACrC,YAAM5B,WAAW,GAAG,KAAK6B,KAAL,CAAW7B,WAA/B;AACA,YAAMU,IAAI,GAAG,KAAKmB,KAAL,CAAWnB,IAAxB;AACAA,MAAAA,IAAI,CAACV,WAAD,CAAJ,GAAoBhB,WAAW,CAC7BE,YAAY,CAAC0C,WAAW,CAACE,iBAAZ,EAAD,CADiB,CAA/B;AAGA,WAAK/B,QAAL,CAAc;AACZ,SAAE,GAAE,KAAKgC,kBAAL,CAAwB/B,WAAxB,CAAqC,EAAzC,GAA6C4B,WADjC;AAEZlB,QAAAA,IAAI,EAAEA;AAFM,OAAd;AAID,KAnLkB;;AAEjB,SAAKmB,KAAL,GAAa;AACXtB,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,MAAM,EAAE,KAHG;AAIXJ,MAAAA,WAAW,EAAE,aAJF;AAKXK,MAAAA,IAAI,EAAE;AACJZ,QAAAA,IAAI,EAAE,EADF;AAEJa,QAAAA,OAAO,EAAE,EAFL;AAGJC,QAAAA,SAAS,EAAE,EAHP;AAIJC,QAAAA,OAAO,EAAE,EAJL;AAKJC,QAAAA,UAAU,EAAE,EALR;AAMJC,QAAAA,UAAU,EAAE,EANR;AAOJC,QAAAA,SAAS,EAAE,EAPP;AAQJC,QAAAA,MAAM,EAAE,EARJ;AASJC,QAAAA,QAAQ,EAAE,EATN;AAUJC,QAAAA,OAAO,EAAE,EAVL;AAWJC,QAAAA,QAAQ,EAAE,EAXN;AAYJC,QAAAA,QAAQ,EAAE,EAZN;AAaJC,QAAAA,SAAS,EAAE;AAbP,OALK;AAoBXU,MAAAA,MAAM,EAAE,EApBG;AAqBXhC,MAAAA,WAAW,EAAE,EArBF;AAsBXuB,MAAAA,WAAW,EAAE,KAtBF;AAuBXC,MAAAA,SAAS,EAAE,KAvBA;AAwBXS,MAAAA,gBAAgB,EAAE,KAxBP;AAyBXR,MAAAA,QAAQ,EAAE,CAzBC;AA0BXC,MAAAA,UAAU,EAAE,CA1BD,CA2BX;;AA3BW,KAAb;AA6BA,SAAKQ,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAA7B;AACD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBnC,IAAAA,MAAM,CAACoC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtC,YAA1C;AACD;;AAmBDoC,EAAAA,qBAAqB,CAACG,CAAD,EAAI;AACvB,QAAI1C,IAAI,GAAG0C,CAAC,CAACC,MAAF,CAAS3C,IAApB;AACA,QAAI4C,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAArB;AACA,UAAMC,OAAO,GAAG,KAAKd,KAAL,CAAWnB,IAA3B;AACAiC,IAAAA,OAAO,CAAC7C,IAAD,CAAP,GAAgB4C,KAAhB;AACA,SAAK3C,QAAL,CAAc;AACZW,MAAAA,IAAI,EAAEiC;AADM,KAAd;AAGD;;AAED,QAAMP,eAAN,GAAwB;AACtB,UAAMQ,QAAQ,GAAG,MAAMnD,GAAG,CAACoD,GAAJ,CACpB,sBAAqB,KAAKjD,KAAL,CAAWkD,WAAY,QAAO,KAAKlD,KAAL,CAAWmD,KAAM,EADhD,CAAvB;;AAGA,QAAIH,QAAJ,EAAc;AACZ,YAAMlC,IAAI,GAAGkC,QAAQ,CAAClC,IAAT,CAAcF,YAA3B;AACA,YAAMwC,eAAe,GAAG;AACtBxC,QAAAA,YAAY,EAAEE;AADQ,OAAxB;;AAIA,UAAIA,IAAI,CAACuC,aAAT,EAAwB;AACtB,cAAMC,SAAS,GAAG,EAAE,GAAG,KAAKrB,KAAL,CAAWnB,IAAhB;AAAsB,aAAGA,IAAI,CAACuC;AAA9B,SAAlB;AACAD,QAAAA,eAAe,CAACtC,IAAhB,GAAuBwC,SAAvB;AACD;;AACD,WAAKnD,QAAL,CAAciD,eAAd,EAA+B,MAAM;AACnC,cAAMtC,IAAI,GAAG,KAAKmB,KAAL,CAAWnB,IAAxB;;AAEA,aAAK,MAAMyC,GAAX,IAAkBzC,IAAlB,EAAwB;AACtB,gBAAM0C,cAAc,GAAGjE,eAAe,CAACuB,IAAI,CAACyC,GAAD,CAAL,CAAtC;AACA,gBAAME,YAAY,GAAGjE,YAAY,CAACkE,oBAAb,CACnBF,cAAc,CAACG,aADI,EAEnBH,cAAc,CAACI,SAFI,CAArB;AAIA,eAAKzD,QAAL,CAAc;AACZ,aAAE,GAAE,KAAKgC,kBAAL,CAAwBoB,GAAxB,CAA6B,EAAjC,GAAqClE,WAAW,CAACwE,iBAAZ,CACnCJ,YADmC;AADzB,WAAd;AAKD;AACF,OAfD;AAgBD;AACF;;AAEDtB,EAAAA,kBAAkB,CAACoB,GAAD,EAAM;AACtB,WAAQ,GAAEA,GAAI,QAAd;AACD;;AA4BD,QAAMjB,OAAN,GAAgB;AACd,SAAKnC,QAAL,CAAc;AACZQ,MAAAA,SAAS,EAAE;AADC,KAAd;;AAGA,QAAI;AACF,YAAMG,IAAI,GAAG;AACXoC,QAAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWkD,WADb;AAEXC,QAAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWmD,KAFP;AAGX,WAAG,KAAKlB,KAAL,CAAWnB;AAHH,OAAb;AAKA,YAAMkC,QAAQ,GAAG,MAAMnD,GAAG,CAACiE,IAAJ,CAAU,4BAAV,EAAuChD,IAAvC,CAAvB;;AACA,UAAIkC,QAAJ,EAAc;AACZrD,QAAAA,KAAK,eAAC,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAE,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,EAAkD;AACrDoE,UAAAA,QAAQ,EAAEpE,KAAK,CAACqE,QAAN,CAAeC,YAD4B;AAErDC,UAAAA,SAAS,EAAE,IAF0C;AAGrDC,UAAAA,SAAS,EAAE,aAH0C;AAIrDC,UAAAA,WAAW,EAAE,KAJwC;AAKrDC,UAAAA,eAAe,EAAE,IALoC;AAMrDC,UAAAA,WAAW,EAAE,IANwC;AAOrDC,UAAAA,YAAY,EAAE,IAPuC;AAQrDC,UAAAA,GAAG,EAAE,KARgD;AASrDC,UAAAA,gBAAgB,EAAE,IATmC;AAUrDC,UAAAA,SAAS,EAAE,IAV0C;AAWrDC,UAAAA,YAAY,EAAE;AAXuC,SAAlD,CAAL;AAaA,aAAK3E,KAAL,CAAW4E,OAAX,CAAmBC,IAAnB,CAAyB,sBAAqB,KAAK7E,KAAL,CAAWkD,WAAY,QAAO,KAAKlD,KAAL,CAAWmD,KAAM,EAA7F,EAdY,CAeZ;AACA;AACD;;AACD,WAAKhD,QAAL,CAAc;AACZQ,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KA5BD,CA4BE,OAAOmE,KAAP,EAAc;AACd,WAAK3E,QAAL,CAAc;AACZQ,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD;AACF;;AAcDoE,EAAAA,iBAAiB,GAAG;AAClBxE,IAAAA,MAAM,CAACyE,gBAAP,CAAwB,QAAxB,EAAkC,KAAK3E,YAAvC;AACA,SAAKmC,eAAL;AACD;;AAEDyC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnE,MAAAA;AAAF,QAAW,KAAKmB,KAAtB;AACA,UAAMiD,MAAM,GAAG,EAAf;AACA,wBACE;AACE,MAAA,SAAS,EAAG,6CAA4C,KAAKlF,KAAL,CAAWmF,oBAAqB,EAD1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKlD,KAAL,CAAWtB,SAAX,gBAAuB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAsC,IAFzC,eAGE;AACE,MAAA,SAAS,EAAC,8CADZ;AAEE,MAAA,EAAE,EAAC,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAC,sFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,4EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAME;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,CADF,CADF,CADF,eAgBE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAJF,CAHF,eA0BE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,EAAE,EAAC,qBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAE,KAAKsB,KAAL,CAAWxB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKT,KAAL,CAAW4E,OAAX,CAAmBC,IAAnB,CAAyB,sBAAqB,KAAK7E,KAAL,CAAWkD,WAAY,QAAO,KAAKlD,KAAL,CAAWmD,KAAM,EAA7F,CADjB;AAEE,MAAA,SAAS,EAAC,+CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKb,OADhB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EACP,KAAKL,KAAL,CAAWtB,SAAX,GACI,wFADJ,GAEI,qDANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAPF,CAPF,CAJF,eAiCE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEG,IAAI,CAACZ,IAFd;AAGE,MAAA,QAAQ,EAAG0C,CAAD,IAAO,KAAKH,qBAAL,CAA2BG,CAA3B,CAHnB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,SAAS,EACPsC,MAAM,CAAChF,IAAP,GACI,yBADJ,GAEI,cARR;AAUE,MAAA,WAAW,EAAC,YAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAgBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,KAAK,EAAEY,IAAI,CAACC,OADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG6B,CAAD,IAAO,KAAKH,qBAAL,CAA2BG,CAA3B,CAHnB;AAIE,MAAA,IAAI,EAAC,SAJP;AAKE,MAAA,SAAS,EACPsC,MAAM,CAAChF,IAAP,GACI,yBADJ,GAEI,cARR;AAUE,MAAA,WAAW,EAAC,eAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,CADF,CADF,eAoCE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,UAAU,EAAE,KAAK+B,KAAL,CAAWmD,eAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAKrD,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,eA2CE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWoD,aAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAKtD,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,eAkDE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWqD,gBAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAKvD,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,eAyDE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWsD,gBAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAKxD,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDF,eAgEE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWuD,eAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAKzD,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhEF,eAuEE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWwD,YAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK1D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvEF,eA8EE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAWyD,cAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK3D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9EF,eAqFE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAW0D,aAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK5D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArFF,eA4FE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAW2D,cAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK7D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5FF,eAmGE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAW4D,cAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK9D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnGF,eA0GE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,UAAU,EAAE,KAAK6B,KAAL,CAAW6D,eAFzB;AAGE,MAAA,mBAAmB,EAAE,KAAK/D,mBAH5B;AAIE,MAAA,kBAAkB,EAAE,KAAK9B,kBAJ3B;AAKE,MAAA,WAAW,EAAI,KAAKgC,KAAL,CAAW7B,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1GF,CAjCF,CADF,CADF,CA1BF,CAHF,CADF;AAyLD;;AAvXgC;;AAyXnC,MAAM2F,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAGA,MAAMC,eAAe,GAAG,CAAChE,KAAD,EAAQiE,QAAR,KAAqB;AAC3C,SAAO;AACLf,IAAAA,oBAAoB,EAAElD,KAAK,CAACkE,EAAN,CAAShB,oBAD1B;AAELjC,IAAAA,WAAW,EAAEgD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBnD,WAF9B;AAGLC,IAAAA,KAAK,EAAE+C,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBlD;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAelE,OAAO,CAACgH,eAAD,CAAP,CAAyBnG,UAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"rc-pagination/assets/index.css\";\nimport \"./style.css\";\nimport Fbloader from \"../libs/PageLoader/fbloader.js\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport Network from \"../../Service/Network\";\nimport draftToHtml from \"draftjs-to-html\";\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromHTML,\n  ContentState,\n} from \"draft-js\";\nimport FormEditorPdf from \"./FormEditorPdf\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast\";\nconst api = new Network();\n\nclass RefinedPdf extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      styleHeader: \"card-header\",\n      data: {\n        name: \"\",\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\",\n      },\n      base64: \"\",\n      editorWrite: \"\",\n      showEditPdf: false,\n      setIsOpen: false,\n      isOpenPreviewPdf: false,\n      numPages: 1,\n      pageNumber: 1,\n      //   objectiveEditor: EditorState.createEmpty(),\n    };\n    this.makePdf = this.makePdf.bind(this);\n    this.getCandidateJob = this.getCandidateJob.bind(this);\n    this.handleInputDataChange = this.handleInputDataChange.bind(this);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n  setNameEditorWrite = (name) => {\n    this.setState({\n      editorWrite: name,\n    });\n  };\n\n  handleScroll = () => {\n    let lengthScroll = window.pageYOffset;\n    if (lengthScroll > 220) {\n      this.setState({\n        styleHeader: \"card-header style-header-job\",\n      });\n    } else {\n      this.setState({\n        styleHeader: \"card-header\",\n      });\n    }\n  };\n  handleInputDataChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    const dataNow = this.state.data;\n    dataNow[name] = value;\n    this.setState({\n      data: dataNow,\n    });\n  }\n\n  async getCandidateJob() {\n    const response = await api.get(\n      `/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`\n    );\n    if (response) {\n      const data = response.data.candidateJob;\n      const dataUpdateState = {\n        candidateJob: data,\n      };\n\n      if (data.dataParserPdf) {\n        const dataState = { ...this.state.data, ...data.dataParserPdf };\n        dataUpdateState.data = dataState;\n      }\n      this.setState(dataUpdateState, () => {\n        const data = this.state.data;\n\n        for (const key in data) {\n          const blocksFromHTML = convertFromHTML(data[key]);\n          const contentState = ContentState.createFromBlockArray(\n            blocksFromHTML.contentBlocks,\n            blocksFromHTML.entityMap\n          );\n          this.setState({\n            [`${this.generateNameEditor(key)}`]: EditorState.createWithContent(\n              contentState\n            ),\n          });\n        }\n      });\n    }\n  }\n\n  generateNameEditor(key) {\n    return `${key}Editor`;\n  }\n\n  defaultState = () => {\n    this.setState({\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      data: {\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\",\n      },\n      showEditPdf: false,\n      setIsOpen: false,\n      numPages: 1,\n      pageNumber: 1,\n    });\n  };\n\n  async makePdf() {\n    this.setState({\n      isLoading: true,\n    });\n    try {\n      const data = {\n        candidateId: this.props.candidateId,\n        jobId: this.props.jobId,\n        ...this.state.data,\n      };\n      const response = await api.post(`/api/v1/candidate/make/pdf`, data);\n      if (response) {\n        toast(<CustomToast title={\"Refine cv successed !\"} />, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 3000,\n          className: \"toast_login\",\n          closeButton: false,\n          hideProgressBar: true,\n          newestOnTop: true,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        });\n        this.props.history.push(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`)\n        // this.defaultState();\n        // this.getCandidateJob();\n      }\n      this.setState({\n        isLoading: false,\n      });\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  onEditorStateChange = (editorState) => {\n    const editorWrite = this.state.editorWrite;\n    const data = this.state.data;\n    data[editorWrite] = draftToHtml(\n      convertToRaw(editorState.getCurrentContent())\n    );\n    this.setState({\n      [`${this.generateNameEditor(editorWrite)}`]: editorState,\n      data: data,\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.getCandidateJob();\n  }\n\n  render() {\n    const { data } = this.state;\n    const errors = {};\n    return (\n      <div\n        className={`d-flex flex-column flex-row-fluid wrapper ${this.props.className_wrap_broad}`}\n      >\n        <div className=\"content d-flex flex-column flex-column-fluid\">\n          <ToastContainer></ToastContainer>\n          {this.state.isLoading ? <Fbloader /> : null}\n          <div\n            className=\"subheader py-3 py-lg-8 subheader-transparent\"\n            id=\"kt_subheader\"\n          >\n            <div className=\"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\n              <div className=\"d-flex align-items-center mr-1\">\n                <div className=\"d-flex align-items-baseline flex-wrap mr-5\">\n                  <ul className=\"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to=\"/\" className=\"text-dark\">\n                        Dashboard\n                      </Link>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <div className=\"text-dark\">Refine Pdf</div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"d-flex align-items-center flex-wrap\"></div>\n            </div>\n          </div>\n          <div className=\"d-flex flex-column-fluid\">\n            <div className=\"container\">\n              <div\n                className=\"card card-custom card-sticky\"\n                id=\"kt_page_sticky_card\"\n              >\n                <div className={this.state.styleHeader}>\n                  <div className=\"card-title\">\n                    <h3 className=\"card-label\">\n                      Form Refine CV\n                      <i className=\"mr-2\" />\n                    </h3>\n                  </div>\n                  <div className=\"card-toolbar\">\n                    <span\n                      onClick={() => this.props.history.push(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`)}\n                      className=\"btn btn-light-primary font-weight-bolder mr-2\"\n                    >\n                      Back\n                    </span>\n                    <div className=\"btn-group\">\n                      <button\n                        onClick={this.makePdf}\n                        type=\"submit\"\n                        className={\n                          this.state.isLoading\n                            ? \"btn btn-primary font-weight-bolder style-btn-kitin spinner spinner-white spinner-right\"\n                            : \"btn btn-primary font-weight-bolder style-btn-kitin \"\n                        }\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card-body card-body-refine-pdf\">\n                  <div className=\"form-group\">\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <label>Name </label>\n                        <input\n                          type=\"text\"\n                          value={data.name}\n                          onChange={(e) => this.handleInputDataChange(e)}\n                          name=\"name\"\n                          className={\n                            errors.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"Enter name\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label>Address </label>\n                        <input\n                          value={data.address}\n                          type=\"text\"\n                          onChange={(e) => this.handleInputDataChange(e)}\n                          name=\"address\"\n                          className={\n                            errors.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"Enter address\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <FormEditorPdf\n                    title=\"objective\"\n                    nameEditor={this.state.objectiveEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"summary\"\n                    nameEditor={this.state.summaryEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"technology\"\n                    nameEditor={this.state.technologyEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"experience\"\n                    nameEditor={this.state.experienceEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"education\"\n                    nameEditor={this.state.educationEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"skills\"\n                    nameEditor={this.state.skillsEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"language\"\n                    nameEditor={this.state.languageEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"courses\"\n                    nameEditor={this.state.coursesEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"projects\"\n                    nameEditor={this.state.projectsEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"contacts\"\n                    nameEditor={this.state.contactsEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                  <FormEditorPdf\n                    title=\"positions\"\n                    nameEditor={this.state.positionsEditor}\n                    onEditorStateChange={this.onEditorStateChange}\n                    setNameEditorWrite={this.setNameEditorWrite}\n                    editorWrite = {this.state.editorWrite}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    className_wrap_broad: state.ui.className_wrap_broad,\n    candidateId: ownProps.match.params.candidateId,\n    jobId: ownProps.match.params.jobId,\n  };\n};\n\nexport default connect(mapStateToProps)(RefinedPdf);\n"]},"metadata":{},"sourceType":"module"}