{"ast":null,"code":"const rulesAddUser = [{\n  field: \"emailUser\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Email is required.\"\n}, {\n  field: \"emailUser\",\n  method: \"isEmail\",\n  validWhen: true,\n  message: \"Email is not valid.\"\n}, {\n  field: \"password\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Password is required.\"\n}, {\n  field: \"password\",\n  method: \"isLength\",\n  validWhen: true,\n  option: {\n    min: 8,\n    max: 16\n  },\n  message: \"Password is not valid.\"\n}, {\n  field: \"name\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"roleId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Role is required.\"\n}];\nconst rulesAddUserNotDirector = [{\n  field: \"emailUser\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Email is required.\"\n}, {\n  field: \"emailUser\",\n  method: \"isEmail\",\n  validWhen: true,\n  message: \"Email is not valid.\"\n}, {\n  field: \"password\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Password is required.\"\n}, {\n  field: \"password\",\n  method: \"isLength\",\n  validWhen: true,\n  option: {\n    min: 8,\n    max: 16\n  },\n  message: \"Password is not valid.\"\n}, {\n  field: \"name\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"teamId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Team is required.\"\n}, {\n  field: \"roleId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Role is required.\"\n}];\nconst rulesAddTeam = [{\n  field: \"name\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"idLeader\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}];\nconst rulesEditUser = [{\n  field: \"emailUserEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Email is required.\"\n}, {\n  field: \"emailUserEdit\",\n  method: \"isEmail\",\n  validWhen: true,\n  message: \"Email is not valid.\"\n}, // {\n//   field: \"passwordEdit\",\n//   method: \"isEmpty\",\n//   validWhen: false,\n//   message: \"Password is required.\",\n// },\n// {\n//   field: \"passwordEdit\",\n//   method: \"isLength\",\n//   validWhen: true,\n//   option: { min: 8, max: 16 },\n//   message: \"Password is not valid.\",\n// },\n{\n  field: \"nameEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"roleIdEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Role is required.\"\n}];\nconst rulesEditUserNotDirector = [{\n  field: \"emailUserEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Email is required.\"\n}, {\n  field: \"emailUserEdit\",\n  method: \"isEmail\",\n  validWhen: true,\n  message: \"Email is not valid.\"\n}, {\n  field: \"nameEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"roleIdEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Role is required.\"\n}, {\n  field: \"teamIdEdit\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Team is required.\"\n}];\nconst rulesAddAndUpdateClient = [{\n  field: \"name\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, {\n  field: \"website\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Website is required.\"\n}];\nconst rulesCreateNewTask = [{\n  field: \"teamMemberId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n} // {\n//   field: \"contentTask\",\n//   method: \"isEmpty\",\n//   validWhen: false,\n//   message: \"Task is required.\",\n// },\n];\nconst rulesEditTask = [{\n  field: \"userId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n} // {\n//   field: \"content\",\n//   method: \"isEmpty\",\n//   validWhen: false,\n//   message: \"Task is required.\",\n// },\n];\nconst rulesCreateNewCard = [{\n  field: \"name\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Name is required.\"\n}, // {\n//   field: \"position\",\n//   method: \"isEmpty\",\n//   validWhen: false,\n//   message: \"Position is required.\",\n// },\n{\n  field: \"phone\",\n  method: \"isEmpty\",\n  validWhen: false,\n  option: {\n    min: 8,\n    max: 11\n  },\n  message: \"phone is required.\"\n}, {\n  field: \"email\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"email is required.\"\n}, {\n  field: \"approachDate\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"approachDate is required.\"\n}, {\n  field: \"noteApproach\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"linkCv is required.\"\n}, {\n  field: \"nameJob\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"nameJob is required.\"\n}, {\n  field: \"laneId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"laneId is required.\"\n}];\nconst rulesCreateInterview = [{\n  field: \"jobName\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Job name is required.\"\n}, {\n  field: \"type\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Type is required.\"\n}, {\n  field: \"candidateId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"candidate name is required.\"\n}, {\n  field: \"password\",\n  method: \"isLength\",\n  option: {\n    max: 10\n  },\n  validWhen: true,\n  message: \"candidate name is required.\"\n}];\nconst rulesUpdateInterview = [{\n  field: \"jobName\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"Job name is required.\"\n}, {\n  field: \"candidateId\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"candidate name is required.\"\n}, {\n  field: \"location\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"location is required.\"\n}, {\n  field: \"password\",\n  method: \"isLength\",\n  option: {\n    max: 10\n  },\n  validWhen: true,\n  message: \"candidate name is required.\"\n}];\nconst rulesCreateCardInterview = [{\n  field: \"type\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"type is required.\"\n}];\nconst rulesUpdateConfig = [{\n  field: \"APPID\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"APPID is required.\"\n}, {\n  field: \"APP_SECRET_KEY_BITLY\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"APP_SECRET_KEY_BITLY is required.\"\n}, {\n  field: \"CLUSTER\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"CLUSTER is required.\"\n}, {\n  field: \"DRIVER_ACCOUNT\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"DRIVER_ACCOUNT is required.\"\n}, {\n  field: \"DRIVER_FOLDER_CV\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"DRIVER_FOLDER_CV is required.\"\n}, {\n  field: \"DRIVER_TOKEN\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"DRIVER_TOKEN is required.\"\n}, {\n  field: \"KEY\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"KEY is required.\"\n}, {\n  field: \"SECRET\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"SECRET is required.\"\n}, {\n  field: \"ZOOM_ID\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"ZOOM_ID is required.\"\n}, {\n  field: \"ZOOM_TOKEN\",\n  method: \"isEmpty\",\n  validWhen: false,\n  message: \"ZOOM_TOKEN is required.\"\n}];\nexport { rulesAddUser, rulesEditUser, rulesAddTeam, rulesAddAndUpdateClient, rulesCreateNewTask, rulesEditTask, rulesCreateNewCard, rulesAddUserNotDirector, rulesCreateInterview, rulesUpdateInterview, rulesCreateCardInterview, rulesEditUserNotDirector, rulesUpdateConfig };","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/utils/rule.js"],"names":["rulesAddUser","field","method","validWhen","message","option","min","max","rulesAddUserNotDirector","rulesAddTeam","rulesEditUser","rulesEditUserNotDirector","rulesAddAndUpdateClient","rulesCreateNewTask","rulesEditTask","rulesCreateNewCard","rulesCreateInterview","rulesUpdateInterview","rulesCreateCardInterview","rulesUpdateConfig"],"mappings":"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","sourcesContent":["const rulesAddUser = [\n  {\n    field: \"emailUser\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Email is required.\",\n  },\n  {\n    field: \"emailUser\",\n    method: \"isEmail\",\n    validWhen: true,\n    message: \"Email is not valid.\",\n  },\n  {\n    field: \"password\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Password is required.\",\n  },\n  {\n    field: \"password\",\n    method: \"isLength\",\n    validWhen: true,\n    option: { min: 8, max: 16 },\n    message: \"Password is not valid.\",\n  },\n  {\n    field: \"name\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n\n  {\n    field: \"roleId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Role is required.\",\n  },\n];\n\nconst rulesAddUserNotDirector = [\n  {\n    field: \"emailUser\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Email is required.\",\n  },\n  {\n    field: \"emailUser\",\n    method: \"isEmail\",\n    validWhen: true,\n    message: \"Email is not valid.\",\n  },\n  {\n    field: \"password\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Password is required.\",\n  },\n  {\n    field: \"password\",\n    method: \"isLength\",\n    validWhen: true,\n    option: { min: 8, max: 16 },\n    message: \"Password is not valid.\",\n  },\n  {\n    field: \"name\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  {\n    field: \"teamId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Team is required.\",\n  },\n  {\n    field: \"roleId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Role is required.\",\n  },\n];\n\nconst rulesAddTeam = [\n  {\n    field: \"name\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  {\n    field: \"idLeader\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n];\nconst rulesEditUser = [\n  {\n    field: \"emailUserEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Email is required.\",\n  },\n  {\n    field: \"emailUserEdit\",\n    method: \"isEmail\",\n    validWhen: true,\n    message: \"Email is not valid.\",\n  },\n  // {\n  //   field: \"passwordEdit\",\n  //   method: \"isEmpty\",\n  //   validWhen: false,\n  //   message: \"Password is required.\",\n  // },\n  // {\n  //   field: \"passwordEdit\",\n  //   method: \"isLength\",\n  //   validWhen: true,\n  //   option: { min: 8, max: 16 },\n  //   message: \"Password is not valid.\",\n  // },\n  {\n    field: \"nameEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  {\n    field: \"roleIdEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Role is required.\",\n  },\n];\nconst rulesEditUserNotDirector = [\n  {\n    field: \"emailUserEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Email is required.\",\n  },\n  {\n    field: \"emailUserEdit\",\n    method: \"isEmail\",\n    validWhen: true,\n    message: \"Email is not valid.\",\n  },\n  {\n    field: \"nameEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  {\n    field: \"roleIdEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Role is required.\",\n  },\n  {\n    field: \"teamIdEdit\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Team is required.\",\n  },\n];\n\nconst rulesAddAndUpdateClient = [\n  {\n    field: \"name\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  {\n    field: \"website\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Website is required.\",\n  },\n];\n\nconst rulesCreateNewTask = [\n  {\n    field: \"teamMemberId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  // {\n  //   field: \"contentTask\",\n  //   method: \"isEmpty\",\n  //   validWhen: false,\n  //   message: \"Task is required.\",\n  // },\n];\nconst rulesEditTask = [\n  {\n    field: \"userId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  // {\n  //   field: \"content\",\n  //   method: \"isEmpty\",\n  //   validWhen: false,\n  //   message: \"Task is required.\",\n  // },\n];\nconst rulesCreateNewCard = [\n  {\n    field: \"name\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Name is required.\",\n  },\n  // {\n  //   field: \"position\",\n  //   method: \"isEmpty\",\n  //   validWhen: false,\n  //   message: \"Position is required.\",\n  // },\n  {\n    field: \"phone\",\n    method: \"isEmpty\",\n    validWhen: false,\n    option: { min: 8, max: 11 },\n    message: \"phone is required.\",\n  },\n  {\n    field: \"email\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"email is required.\",\n  },\n  {\n    field: \"approachDate\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"approachDate is required.\",\n  },\n  {\n    field: \"noteApproach\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"linkCv is required.\",\n  },\n  {\n    field: \"nameJob\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"nameJob is required.\",\n  },\n  {\n    field: \"laneId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"laneId is required.\",\n  },\n]\n\nconst rulesCreateInterview = [\n  {\n    field: \"jobName\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Job name is required.\",\n  },\n  {\n    field: \"type\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Type is required.\",\n  },\n  {\n    field: \"candidateId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"candidate name is required.\",\n  },\n  {\n    field: \"password\",\n    method: \"isLength\",\n    option: { max: 10 },\n    validWhen: true,\n    message: \"candidate name is required.\",\n  }\n];\n\nconst rulesUpdateInterview = [\n  {\n    field: \"jobName\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"Job name is required.\",\n  },\n  {\n    field: \"candidateId\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"candidate name is required.\",\n  },\n  {\n    field: \"location\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"location is required.\",\n  },\n  {\n    field: \"password\",\n    method: \"isLength\",\n    option: { max: 10 },\n    validWhen: true,\n    message: \"candidate name is required.\",\n  }\n];\n\nconst rulesCreateCardInterview = [\n  {\n    field: \"type\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"type is required.\",\n  },\n];\n\nconst rulesUpdateConfig = [\n  {\n    field: \"APPID\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"APPID is required.\",\n  },\n  {\n    field: \"APP_SECRET_KEY_BITLY\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"APP_SECRET_KEY_BITLY is required.\",\n  },\n  {\n    field: \"CLUSTER\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"CLUSTER is required.\",\n  },\n  {\n    field: \"DRIVER_ACCOUNT\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"DRIVER_ACCOUNT is required.\",\n  },\n  {\n    field: \"DRIVER_FOLDER_CV\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"DRIVER_FOLDER_CV is required.\",\n  },\n  {\n    field: \"DRIVER_TOKEN\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"DRIVER_TOKEN is required.\",\n  },\n  {\n    field: \"KEY\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"KEY is required.\",\n  },\n  {\n    field: \"SECRET\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"SECRET is required.\",\n  },\n  {\n    field: \"ZOOM_ID\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"ZOOM_ID is required.\",\n  },\n  {\n    field: \"ZOOM_TOKEN\",\n    method: \"isEmpty\",\n    validWhen: false,\n    message: \"ZOOM_TOKEN is required.\",\n  },\n\n];\n\nexport {\n  rulesAddUser,\n  rulesEditUser,\n  rulesAddTeam,\n  rulesAddAndUpdateClient,\n  rulesCreateNewTask,\n  rulesEditTask,\n  rulesCreateNewCard,\n  rulesAddUserNotDirector,\n  rulesCreateInterview,\n  rulesUpdateInterview,\n  rulesCreateCardInterview,\n  rulesEditUserNotDirector,\n  rulesUpdateConfig\n};\n"]},"metadata":{},"sourceType":"module"}