{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { borderRadius as getBorderRadius, fontSize as getFontSize, gridSize as getGridSize } from '@atlaskit/theme/constants';\nimport colors from './colors';\nvar borderRadius = getBorderRadius();\nvar gridSize = getGridSize();\nvar fontSize = getFontSize(); // ## Button layout\n//\n// /------------------------------------------------------------------------------------------------------------------\\\n// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |\n// |  10px →  |  ← 2px  |   icon   |  2px →  |  ← 2px  |           |  2px →  |  ← 2px  |  icon   |  2px →  |  ← 10px  |\n// |  padding |  margin |  before  |  margin |  margin |  content  |  margin |  margin |  after  |  margin |  padding |\n// |    (12px total)    |          |    (4px total)    |           |    (4px total)    |         |    (12px total)    |\n// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |\n// \\------------------------------------------------------------------------------------------------------------------/\n//                                           ↑                               ↑\n//                                        Margins don't collapse with inline-flex\n//\n\nvar heights = {\n  default: gridSize * 4 / fontSize + \"em\",\n  compact: gridSize * 3 / fontSize + \"em\",\n  none: 'auto'\n};\nvar lineHeights = {\n  default: heights.default,\n  compact: heights.compact,\n  none: 'inherit'\n};\nvar padding = {\n  // 10px gutter\n  default: \"0 \" + (gridSize + gridSize / 4) + \"px\",\n  compact: \"0 \" + (gridSize + gridSize / 4) + \"px\",\n  none: '0'\n};\nvar singleIconPadding = {\n  // 2px gutter\n  compact: \"0 \" + gridSize / 4 + \"px\",\n  default: \"0 \" + gridSize / 4 + \"px\",\n  none: '0'\n};\nvar verticalAlign = {\n  default: 'middle',\n  compact: 'middle',\n  none: 'baseline'\n};\nvar innerMargin = {\n  content: \"0 \" + gridSize / 4 + \"px\",\n  icon: \"0 \" + gridSize / 4 + \"px\"\n};\n\nfunction getColor(_a) {\n  var group = _a.group,\n      key = _a.key,\n      mode = _a.mode;\n  var rule = group[key] || group.default;\n  return rule[mode];\n}\n\nfunction getColors(_a) {\n  var appearance = _a.appearance,\n      key = _a.key,\n      mode = _a.mode;\n  return {\n    background: getColor({\n      group: colors.background[appearance],\n      key: key,\n      mode: mode\n    }),\n    // Needing to add !important to overcome specificity issue caused by deprecated AtlaskitThemeProvider\n    color: getColor({\n      group: colors.color[appearance],\n      key: key,\n      mode: mode\n    }) + \" !important\"\n  };\n}\n\nexport function getCss(_a) {\n  var appearance = _a.appearance,\n      spacing = _a.spacing,\n      mode = _a.mode,\n      isSelected = _a.isSelected,\n      shouldFitContainer = _a.shouldFitContainer,\n      isOnlySingleIcon = _a.isOnlySingleIcon;\n  var baseColors = getColors({\n    appearance: appearance,\n    key: isSelected ? 'selected' : 'default',\n    mode: mode\n  });\n  return __assign(__assign({\n    alignItems: 'baseline',\n    borderWidth: 0,\n    borderRadius: borderRadius,\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    fontSize: 'inherit',\n    fontStyle: 'normal',\n    // Chrome recently changed button so that they use 'arial' as the font family\n    fontFamily: 'inherit',\n    fontWeight: 500,\n    maxWidth: '100%',\n    // Needed to position overlay\n    position: 'relative',\n    textAlign: 'center',\n    textDecoration: 'none',\n    transition: 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)',\n    whiteSpace: 'nowrap'\n  }, baseColors), {\n    cursor: 'pointer',\n    height: heights[spacing],\n    lineHeight: lineHeights[spacing],\n    padding: isOnlySingleIcon ? singleIconPadding[spacing] : padding[spacing],\n    verticalAlign: verticalAlign[spacing],\n    width: shouldFitContainer ? '100%' : 'auto',\n    // justifyContent required for shouldFitContainer buttons with an icon inside\n    justifyContent: 'center',\n    // Note: we cannot disable pointer events when there is an overlay.\n    // That would be easy for styling, but it would start letting events through on disabled buttons\n    // Disabling visited styles (just using the base colors)\n    '&:visited': __assign({}, baseColors),\n    '&:hover': __assign(__assign({}, getColors({\n      appearance: appearance,\n      key: isSelected ? 'selected' : 'hover',\n      mode: mode\n    })), {\n      textDecoration: !isSelected && (appearance === 'link' || appearance === 'subtle-link') ? 'underline' : 'inherit',\n      // background, box-shadow\n      transitionDuration: '0s, 0.15s'\n    }),\n    '&:focus': __assign(__assign({}, getColors({\n      appearance: appearance,\n      key: isSelected ? 'focusSelected' : 'focus',\n      mode: mode\n    })), {\n      boxShadow: \"0 0 0 2px \" + colors.boxShadowColor[appearance].focus[mode],\n      // background, box-shadow\n      transitionDuration: '0s, 0.2s',\n      // disabling browser focus outline\n      outline: 'none'\n    }),\n    // giving active styles preference by listing them after focus\n    '&:active': __assign(__assign({}, getColors({\n      appearance: appearance,\n      key: isSelected ? 'selected' : 'active',\n      mode: mode\n    })), {\n      // background, box-shadow\n      transitionDuration: '0s, 0s'\n    }),\n    // preventDefault prevents regular active styles from applying in Firefox\n    '&[data-firefox-is-active=\"true\"]': __assign(__assign({}, getColors({\n      appearance: appearance,\n      key: isSelected ? 'selected' : 'active',\n      mode: mode\n    })), {\n      // background, box-shadow\n      transitionDuration: '0s, 0s'\n    }),\n    // Giving disabled styles preference over active by listing them after.\n    // Not using '&:disabled' because :disabled is not a valid state for all element types\n    // so we are targeting the attribute\n    // Attributes have the same specificity a pesudo classes so we are overriding :disabled here\n    '&[disabled]': __assign(__assign({}, getColors({\n      appearance: appearance,\n      key: 'disabled',\n      mode: mode\n    })), {\n      cursor: 'not-allowed',\n      textDecoration: 'none'\n    }),\n    '&[data-has-overlay=\"true\"]': {\n      cursor: 'default',\n      textDecoration: 'none'\n    },\n    // disabling hover and active color changes when there is an overlay, but the button is not disabled\n    '&[data-has-overlay=\"true\"]:not([disabled]):hover, &[data-has-overlay=\"true\"]:not([disabled]):active': __assign({}, getColors({\n      appearance: appearance,\n      key: isSelected ? 'selected' : 'default',\n      mode: mode\n    })),\n    '&::-moz-focus-inner': {\n      border: 0,\n      margin: 0,\n      padding: 0\n    }\n  });\n} // inline-flex child\n\nexport function getIconStyle(_a) {\n  var spacing = _a.spacing;\n  return {\n    alignSelf: 'center',\n    display: 'flex',\n    // icon size cannot grow and shrink\n    flexGrow: 0,\n    flexShrink: 0,\n    lineHeight: 0,\n    fontSize: 0,\n    userSelect: 'none',\n    margin: spacing === 'none' ? 0 : innerMargin.icon\n  };\n} // inline-flex child\n\nexport function getContentStyle(_a) {\n  var spacing = _a.spacing;\n  return {\n    margin: spacing === 'none' ? 0 : innerMargin.content,\n    // content can grow and shrink\n    flexGrow: 1,\n    flexShrink: 1,\n    // ellipsis for overflow text\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  };\n}\nexport function getFadingCss(_a) {\n  var hasOverlay = _a.hasOverlay;\n  return {\n    transition: 'opacity 0.3s',\n    opacity: hasOverlay ? 0 : 1\n  };\n}\nexport var overlayCss = {\n  // stretching to full width / height of button\n  // this is important as we need it to still block\n  // event if clicking in the button's own padding\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  // Putting all children in the center\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};","map":{"version":3,"sources":["../../../src/shared/css.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { borderRadius as getBorderRadius, fontSize as getFontSize, gridSize as getGridSize, } from '@atlaskit/theme/constants';\nimport colors from './colors';\nvar borderRadius = getBorderRadius();\nvar gridSize = getGridSize();\nvar fontSize = getFontSize();\n// ## Button layout\n//\n// /------------------------------------------------------------------------------------------------------------------\\\n// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |\n// |  10px →  |  ← 2px  |   icon   |  2px →  |  ← 2px  |           |  2px →  |  ← 2px  |  icon   |  2px →  |  ← 10px  |\n// |  padding |  margin |  before  |  margin |  margin |  content  |  margin |  margin |  after  |  margin |  padding |\n// |    (12px total)    |          |    (4px total)    |           |    (4px total)    |         |    (12px total)    |\n// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |\n// \\------------------------------------------------------------------------------------------------------------------/\n//                                           ↑                               ↑\n//                                        Margins don't collapse with inline-flex\n//\nvar heights = {\n    default: (gridSize * 4) / fontSize + \"em\",\n    compact: (gridSize * 3) / fontSize + \"em\",\n    none: 'auto',\n};\nvar lineHeights = {\n    default: heights.default,\n    compact: heights.compact,\n    none: 'inherit',\n};\nvar padding = {\n    // 10px gutter\n    default: \"0 \" + (gridSize + gridSize / 4) + \"px\",\n    compact: \"0 \" + (gridSize + gridSize / 4) + \"px\",\n    none: '0',\n};\nvar singleIconPadding = {\n    // 2px gutter\n    compact: \"0 \" + gridSize / 4 + \"px\",\n    default: \"0 \" + gridSize / 4 + \"px\",\n    none: '0',\n};\nvar verticalAlign = {\n    default: 'middle',\n    compact: 'middle',\n    none: 'baseline',\n};\nvar innerMargin = {\n    content: \"0 \" + gridSize / 4 + \"px\",\n    icon: \"0 \" + gridSize / 4 + \"px\",\n};\nfunction getColor(_a) {\n    var group = _a.group, key = _a.key, mode = _a.mode;\n    var rule = group[key] || group.default;\n    return rule[mode];\n}\nfunction getColors(_a) {\n    var appearance = _a.appearance, key = _a.key, mode = _a.mode;\n    return {\n        background: getColor({\n            group: colors.background[appearance],\n            key: key,\n            mode: mode,\n        }),\n        // Needing to add !important to overcome specificity issue caused by deprecated AtlaskitThemeProvider\n        color: getColor({\n            group: colors.color[appearance],\n            key: key,\n            mode: mode,\n        }) + \" !important\",\n    };\n}\nexport function getCss(_a) {\n    var appearance = _a.appearance, spacing = _a.spacing, mode = _a.mode, isSelected = _a.isSelected, shouldFitContainer = _a.shouldFitContainer, isOnlySingleIcon = _a.isOnlySingleIcon;\n    var baseColors = getColors({\n        appearance: appearance,\n        key: isSelected ? 'selected' : 'default',\n        mode: mode,\n    });\n    return __assign(__assign({ alignItems: 'baseline', borderWidth: 0, borderRadius: borderRadius, boxSizing: 'border-box', display: 'inline-flex', fontSize: 'inherit', fontStyle: 'normal', \n        // Chrome recently changed button so that they use 'arial' as the font family\n        fontFamily: 'inherit', fontWeight: 500, maxWidth: '100%', \n        // Needed to position overlay\n        position: 'relative', textAlign: 'center', textDecoration: 'none', transition: 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)', whiteSpace: 'nowrap' }, baseColors), { cursor: 'pointer', height: heights[spacing], lineHeight: lineHeights[spacing], padding: isOnlySingleIcon ? singleIconPadding[spacing] : padding[spacing], verticalAlign: verticalAlign[spacing], width: shouldFitContainer ? '100%' : 'auto', \n        // justifyContent required for shouldFitContainer buttons with an icon inside\n        justifyContent: 'center', \n        // Note: we cannot disable pointer events when there is an overlay.\n        // That would be easy for styling, but it would start letting events through on disabled buttons\n        // Disabling visited styles (just using the base colors)\n        '&:visited': __assign({}, baseColors), '&:hover': __assign(__assign({}, getColors({\n            appearance: appearance,\n            key: isSelected ? 'selected' : 'hover',\n            mode: mode,\n        })), { textDecoration: !isSelected && (appearance === 'link' || appearance === 'subtle-link')\n                ? 'underline'\n                : 'inherit', \n            // background, box-shadow\n            transitionDuration: '0s, 0.15s' }), '&:focus': __assign(__assign({}, getColors({\n            appearance: appearance,\n            key: isSelected ? 'focusSelected' : 'focus',\n            mode: mode,\n        })), { boxShadow: \"0 0 0 2px \" + colors.boxShadowColor[appearance].focus[mode], \n            // background, box-shadow\n            transitionDuration: '0s, 0.2s', \n            // disabling browser focus outline\n            outline: 'none' }), \n        // giving active styles preference by listing them after focus\n        '&:active': __assign(__assign({}, getColors({\n            appearance: appearance,\n            key: isSelected ? 'selected' : 'active',\n            mode: mode,\n        })), { \n            // background, box-shadow\n            transitionDuration: '0s, 0s' }), \n        // preventDefault prevents regular active styles from applying in Firefox\n        '&[data-firefox-is-active=\"true\"]': __assign(__assign({}, getColors({\n            appearance: appearance,\n            key: isSelected ? 'selected' : 'active',\n            mode: mode,\n        })), { \n            // background, box-shadow\n            transitionDuration: '0s, 0s' }), \n        // Giving disabled styles preference over active by listing them after.\n        // Not using '&:disabled' because :disabled is not a valid state for all element types\n        // so we are targeting the attribute\n        // Attributes have the same specificity a pesudo classes so we are overriding :disabled here\n        '&[disabled]': __assign(__assign({}, getColors({ appearance: appearance, key: 'disabled', mode: mode })), { cursor: 'not-allowed', textDecoration: 'none' }), '&[data-has-overlay=\"true\"]': {\n            cursor: 'default',\n            textDecoration: 'none',\n        }, \n        // disabling hover and active color changes when there is an overlay, but the button is not disabled\n        '&[data-has-overlay=\"true\"]:not([disabled]):hover, &[data-has-overlay=\"true\"]:not([disabled]):active': __assign({}, getColors({\n            appearance: appearance,\n            key: isSelected ? 'selected' : 'default',\n            mode: mode,\n        })), '&::-moz-focus-inner': {\n            border: 0,\n            margin: 0,\n            padding: 0,\n        } });\n}\n// inline-flex child\nexport function getIconStyle(_a) {\n    var spacing = _a.spacing;\n    return {\n        alignSelf: 'center',\n        display: 'flex',\n        // icon size cannot grow and shrink\n        flexGrow: 0,\n        flexShrink: 0,\n        lineHeight: 0,\n        fontSize: 0,\n        userSelect: 'none',\n        margin: spacing === 'none' ? 0 : innerMargin.icon,\n    };\n}\n// inline-flex child\nexport function getContentStyle(_a) {\n    var spacing = _a.spacing;\n    return {\n        margin: spacing === 'none' ? 0 : innerMargin.content,\n        // content can grow and shrink\n        flexGrow: 1,\n        flexShrink: 1,\n        // ellipsis for overflow text\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    };\n}\nexport function getFadingCss(_a) {\n    var hasOverlay = _a.hasOverlay;\n    return {\n        transition: 'opacity 0.3s',\n        opacity: hasOverlay ? 0 : 1,\n    };\n}\nexport var overlayCss = {\n    // stretching to full width / height of button\n    // this is important as we need it to still block\n    // event if clicking in the button's own padding\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    // Putting all children in the center\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n};\n//# sourceMappingURL=css.js.map"]},"metadata":{},"sourceType":"module"}