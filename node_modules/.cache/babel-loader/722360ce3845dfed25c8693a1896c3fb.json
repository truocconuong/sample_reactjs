{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/Interview/UpdateInterview.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, Redirect } from 'react-router-dom';\nimport Network from '../../../Service/Network';\nimport Fbloader from '../../libs/PageLoader/fbloader';\nimport Select from \"react-select\";\nimport _ from 'lodash';\nimport Validator from '../../../utils/validator';\nimport { rulesUpdateInterview } from '../../../utils/rule';\nimport { DatetimePickerTrigger } from \"../../libs/rc-datetime-picker\";\nimport moment from 'moment';\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport CustomToast from \"../../common/CustomToast\";\nconst api = new Network();\n\nclass UpdateInterview extends Component {\n  constructor() {\n    super();\n\n    this.toggleEyes = () => {\n      const {\n        typePassword\n      } = this.state;\n      let typePasswordNew = '';\n\n      if (typePassword === 'password') {\n        typePasswordNew = 'text';\n      } else {\n        typePasswordNew = 'password';\n      }\n\n      this.setState({\n        typePassword: typePasswordNew\n      });\n    };\n\n    this.removeError = key => {\n      const {\n        errors\n      } = this.state;\n      delete errors[key];\n      this.setState({\n        errors: errors\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      jobSelected: {\n        key: '',\n        value: ''\n      },\n      candidateSelected: {\n        key: '',\n        value: ''\n      },\n      typeSelected: {\n        key: '',\n        value: ''\n      },\n      jobName: '',\n      location: '',\n      timeInterview: moment(),\n      timeInterviewEnd: moment(),\n      candidateId: '',\n      linkZoom: '',\n      type: '',\n      typePassword: 'password',\n      password: 'fetchtech',\n      scrollBehaviour: \"inside\",\n      jobs: [],\n      candidates: [],\n      errors: {}\n    };\n    this.types = [{\n      value: 'offline',\n      label: 'Offline'\n    }, {\n      value: 'online',\n      label: 'Online'\n    }];\n    this.getInterviewDetail = this.getInterviewDetail.bind(this); // this.initData = this.initData.bind(this);\n\n    this.getDataJob = this.getDataJob.bind(this);\n    this.handleOnChangeJob = this.handleOnChangeJob.bind(this);\n    this.getDataCandidateById = this.getDataCandidateById.bind(this);\n    this.handleOnChangeCandidate = this.handleOnChangeCandidate.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleUpdateInterview = this.handleUpdateInterview.bind(this);\n    this.handleOnChangeType = this.handleOnChangeType.bind(this);\n    this.handleChangeDatePicker = this.handleChangeDatePicker.bind(this);\n    this.validator = new Validator(rulesUpdateInterview);\n  }\n\n  handleChangeDatePicker(_moment, fields) {\n    this.setState({\n      [fields]: moment(_moment)\n    });\n  }\n\n  isEmpty(obj) {\n    // check obj empty\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  async getInterviewDetail() {\n    const {\n      id\n    } = this.props;\n    let self = this;\n    self.setState({\n      isLoading: true\n    });\n    const response = await api.get(`/api/admin/interview/${id}`);\n\n    if (response) {\n      const interview = response.data.interview;\n      const data = {\n        isLoading: false,\n        location: interview.CandidateJob.Job.Location.name,\n        timeInterview: moment(interview.timeInterview).subtract('7', 'hours'),\n        timeInterviewEnd: moment(interview.timeInterviewEnd).subtract('7', 'hours'),\n        linkZoom: interview.linkZoom,\n        jobName: interview.CandidateJob.Job.title,\n        candidateId: interview.CandidateJob.Candidate.id,\n        type: interview.type,\n        typeSelected: {\n          value: interview.type,\n          label: interview.type\n        }\n      };\n      data.jobSelected = {\n        value: interview.CandidateJob.Job.id,\n        label: interview.CandidateJob.Job.title\n      };\n\n      if (data.jobSelected) {\n        await this.getDataCandidateById(data.jobSelected.value);\n\n        const fillDataSelectedCandidate = _.find(this.state.candidates, candidate => candidate.value === interview.CandidateJob.Candidate.id);\n\n        if (fillDataSelectedCandidate) {\n          data.candidateSelected = fillDataSelectedCandidate;\n        }\n      }\n\n      self.setState(data);\n    }\n  }\n\n  handleOnChangeCandidate(e) {\n    this.setState({\n      candidateSelected: e,\n      candidateId: e.id,\n      location: e.location\n    });\n  }\n\n  handleOnChangeType(e) {\n    this.setState({\n      typeSelected: e,\n      type: e.value\n    });\n  }\n\n  handleInputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n    this.removeError(name);\n  }\n\n  handleOnChangeJob(e) {\n    const {\n      value,\n      label\n    } = e;\n    this.getDataCandidateById(value);\n    this.setState({\n      jobName: label,\n      jobSelected: e,\n      candidateSelected: {\n        key: '',\n        value: ''\n      },\n      candidateId: ''\n    });\n    this.removeError('jobName');\n  }\n\n  componentDidMount() {\n    this.getDataJob();\n    this.getInterviewDetail();\n  }\n\n  async handleUpdateInterview(e) {\n    e.preventDefault();\n    const data = this.state;\n    console.log(data);\n    const errors = this.validator.validate(this.state);\n    this.setState({\n      errors: errors\n    });\n\n    if (this.isEmpty(errors)) {\n      const item = {\n        jobName: data.jobName,\n        location: data.location,\n        timeInterview: data.timeInterview.format('MM/DD/YYYY HH:mm'),\n        timeInterviewEnd: `${data.timeInterview.format('MM/DD/YYYY HH:mm').substring(0, 11)}${data.timeInterviewEnd.format('HH:mm')}`,\n        candidateId: data.candidateId,\n        linkZoom: data.linkZoom,\n        type: data.type,\n        password: data.password\n      };\n\n      try {\n        const response = await api.patch(`/api/admin/interview/${this.props.id}`, item);\n\n        if (response) {\n          toast( /*#__PURE__*/React.createElement(CustomToast, {\n            title: \"Update Success!\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 27\n            }\n          }), {\n            position: toast.POSITION.TOP_CENTER,\n            autoClose: 3000,\n            className: \"toast_login\",\n            closeButton: false,\n            hideProgressBar: true,\n            newestOnTop: true,\n            closeOnClick: true,\n            rtl: false,\n            pauseOnFocusLoss: true,\n            draggable: true,\n            pauseOnHover: true,\n            transition: Zoom\n          });\n          this.getInterviewDetail();\n        }\n      } catch (error) {\n        toast( /*#__PURE__*/React.createElement(CustomToast, {\n          title: \"Update error some times!\",\n          type: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }\n        }), {\n          position: toast.POSITION.TOP_CENTER,\n          autoClose: 3000,\n          className: \"toast_login\",\n          closeButton: false,\n          hideProgressBar: true,\n          newestOnTop: true,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true,\n          transition: Zoom\n        });\n      }\n    }\n  }\n\n  async getDataCandidateById(id) {\n    const response = await api.get(`/api/candidate/interview/${id}`);\n\n    if (response) {\n      const candidates = _.map(response.data.candidate, candidate => {\n        return { ...candidate,\n          value: candidate.id,\n          label: `${candidate.email} (${candidate.phone}) `\n        };\n      });\n\n      this.setState({\n        candidates: candidates\n      });\n    }\n  }\n\n  async getDataJob() {\n    try {\n      const response = await api.get(`/api/jobs`);\n\n      if (response) {\n        this.setState({\n          jobs: _.map(response.data.list, job => {\n            return {\n              value: job.id,\n              label: job.title\n            };\n          })\n        });\n      }\n    } catch (error) {}\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `d-flex flex-column flex-row-fluid wrapper  ${this.props.className_wrap_broad}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      closeOnClick: true,\n      autoClose: 1000,\n      rtl: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content d-flex flex-column flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Fbloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 45\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subheader py-3 py-lg-8 subheader-transparent\",\n      id: \"kt_subheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-baseline flex-wrap mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }, \"Fetch admin\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/interview\",\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 45\n      }\n    }, \"Interview\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 45\n      }\n    }, \"Interview update\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header flex-wrap border-0 pt-6 pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 41\n      }\n    }, \"Update Interview\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown dropdown-inline mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleUpdateInterview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 49\n      }\n    }, \"Name job:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      className: errors.jobName ? 'invalid-selected' : '',\n      options: this.state.jobs,\n      value: this.state.jobSelected,\n      onChange: this.handleOnChangeJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 49\n      }\n    }, \"Candidate:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      options: this.state.candidates,\n      className: errors.candidateId ? 'invalid-selected' : '',\n      value: this.state.candidateSelected,\n      onChange: this.handleOnChangeCandidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 57\n      }\n    }, \"Location:\"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      type: \"text\",\n      value: this.state.location,\n      name: \"location\",\n      onChange: this.handleInputChange,\n      className: errors.location ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Please enter location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 57\n      }\n    }, \"Type:\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      options: this.types,\n      className: errors.type ? 'invalid-selected' : '',\n      value: this.state.typeSelected,\n      onChange: this.handleOnChangeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 57\n      }\n    })))), this.state.type === 'online' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 53\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: this.state.typePassword,\n      name: \"password\",\n      onChange: this.handleInputChange,\n      defaultValue: this.state.password,\n      className: errors.password ? \"form-control is-invalid\" : \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.toggleEyes,\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: this.state.typePassword === 'password' ? 'far fa-eye' : 'far fa-eye-slash',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 154\n      }\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 53\n      }\n    }, \"Password zoom need have a maximum of 10 characters.\")))) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 57\n      }\n    }, \" Time Interview:\"), /*#__PURE__*/React.createElement(DatetimePickerTrigger, {\n      moment: this.state.timeInterview,\n      onChange: _moment => this.handleChangeDatePicker(_moment, \"timeInterview\"),\n      showTimePicker: true,\n      className: \"custom-date-picker-interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-date-picker-interview__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      readOnly: true,\n      name: \"timeInterview\",\n      value: this.state.timeInterview.format('DD/MM/YYYY HH:mm'),\n      className: 'form-control',\n      placeholder: \"Enter Time Interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-calendar icon-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 73\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 57\n      }\n    }, \" Time Interview End:\"), /*#__PURE__*/React.createElement(DatetimePickerTrigger, {\n      moment: this.state.timeInterviewEnd,\n      onChange: _moment => this.handleChangeDatePicker(_moment, \"timeInterviewEnd\"),\n      showCalendarPicker: false,\n      showTimePicker: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-date-picker-interview__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      readOnly: true,\n      name: \"timeInterviewEnd\",\n      value: this.state.timeInterviewEnd.format('HH:mm'),\n      className: errors.timeInterviewEnd ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter Time Interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-calendar icon-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 73\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 45\n      }\n    }, \"Link Zoom:\"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      type: \"text\",\n      onChange: this.handleInputChange,\n      value: this.state.linkZoom ? this.state.linkZoom : '',\n      name: \"linkZoom\",\n      className: \"form-control\",\n      placeholder: \"Enter link zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-cus__right text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 45\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/interview`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 49\n      }\n    }, \"Cancel\"))))))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    className_wrap_broad: state.ui.className_wrap_broad,\n    id: ownProps.match.params.id\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateInterview);","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/Interview/UpdateInterview.js"],"names":["React","Component","connect","Link","NavLink","Redirect","Network","Fbloader","Select","_","Validator","rulesUpdateInterview","DatetimePickerTrigger","moment","ToastContainer","toast","Zoom","CustomToast","api","UpdateInterview","constructor","toggleEyes","typePassword","state","typePasswordNew","setState","removeError","key","errors","isLoading","jobSelected","value","candidateSelected","typeSelected","jobName","location","timeInterview","timeInterviewEnd","candidateId","linkZoom","type","password","scrollBehaviour","jobs","candidates","types","label","getInterviewDetail","bind","getDataJob","handleOnChangeJob","getDataCandidateById","handleOnChangeCandidate","handleInputChange","handleUpdateInterview","handleOnChangeType","handleChangeDatePicker","validator","_moment","fields","isEmpty","obj","Object","keys","length","id","props","self","response","get","interview","data","CandidateJob","Job","Location","name","subtract","title","Candidate","fillDataSelectedCandidate","find","candidate","e","target","componentDidMount","preventDefault","console","log","validate","item","format","substring","patch","position","POSITION","TOP_CENTER","autoClose","className","closeButton","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","error","map","email","phone","list","job","render","className_wrap_broad","cursor","mapStateToProps","ownProps","ui","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, Redirect } from 'react-router-dom';\nimport Network from '../../../Service/Network';\nimport Fbloader from '../../libs/PageLoader/fbloader';\nimport Select from \"react-select\";\nimport _ from 'lodash'\nimport Validator from '../../../utils/validator';\nimport { rulesUpdateInterview } from '../../../utils/rule';\nimport { DatetimePickerTrigger } from \"../../libs/rc-datetime-picker\";\nimport moment from 'moment'\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport CustomToast from \"../../common/CustomToast\";\nconst api = new Network();\n\nclass UpdateInterview extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isLoading: false,\n            jobSelected: {\n                key: '',\n                value: ''\n            },\n            candidateSelected: {\n                key: '',\n                value: ''\n            },\n            typeSelected: {\n                key: '',\n                value: ''\n            },\n            jobName: '',\n            location: '',\n            timeInterview: moment(),\n            timeInterviewEnd: moment(),\n            candidateId: '',\n            linkZoom: '',\n            type: '',\n            typePassword: 'password',\n            password : 'fetchtech',\n            scrollBehaviour: \"inside\",\n            jobs: [],\n            candidates: [],\n            errors: {}\n        }\n\n        this.types = [\n            {\n                value: 'offline',\n                label: 'Offline'\n            },\n            {\n                value: 'online',\n                label: 'Online'\n            }\n        ]\n        this.getInterviewDetail = this.getInterviewDetail.bind(this);\n        // this.initData = this.initData.bind(this);\n        this.getDataJob = this.getDataJob.bind(this)\n        this.handleOnChangeJob = this.handleOnChangeJob.bind(this)\n        this.getDataCandidateById = this.getDataCandidateById.bind(this)\n        this.handleOnChangeCandidate = this.handleOnChangeCandidate.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleUpdateInterview = this.handleUpdateInterview.bind(this)\n        this.handleOnChangeType = this.handleOnChangeType.bind(this)\n        this.handleChangeDatePicker = this.handleChangeDatePicker.bind(this)\n        this.validator = new Validator(rulesUpdateInterview);\n    }\n\n    toggleEyes = () => {\n        const { typePassword } = this.state;\n        let typePasswordNew = ''\n        if (typePassword === 'password') {\n            typePasswordNew = 'text';\n        } else {\n            typePasswordNew = 'password';\n        }\n        this.setState({\n            typePassword: typePasswordNew\n        })\n\n    }\n\n    handleChangeDatePicker(_moment, fields) {\n        this.setState({\n            [fields]: moment(_moment),\n        });\n    }\n\n\n    isEmpty(obj) {\n        // check obj empty\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n\n\n    async getInterviewDetail() {\n        const { id } = this.props;\n        let self = this;\n        self.setState({\n            isLoading: true,\n        });\n\n        const response = await api.get(`/api/admin/interview/${id}`);\n        if (response) {\n            const interview = response.data.interview;\n            const data = {\n                isLoading: false,\n                location: interview.CandidateJob.Job.Location.name,\n                timeInterview: moment(interview.timeInterview).subtract('7','hours'),\n                timeInterviewEnd: moment(interview.timeInterviewEnd).subtract('7','hours'),\n                linkZoom: interview.linkZoom,\n                jobName: interview.CandidateJob.Job.title,\n                candidateId: interview.CandidateJob.Candidate.id,\n                type: interview.type,\n                typeSelected: { value: interview.type, label: interview.type }\n            }\n            data.jobSelected = {\n                value : interview.CandidateJob.Job.id,\n                label : interview.CandidateJob.Job.title\n            }\n            if (data.jobSelected) {\n                await this.getDataCandidateById(data.jobSelected.value);\n                const fillDataSelectedCandidate = _.find(this.state.candidates, candidate => candidate.value === interview.CandidateJob.Candidate.id);\n                if (fillDataSelectedCandidate) {\n                    data.candidateSelected = fillDataSelectedCandidate;\n                }\n            }\n            self.setState(data);\n        }\n\n    }\n\n    handleOnChangeCandidate(e) {\n        this.setState({\n            candidateSelected: e,\n            candidateId: e.id,\n            location: e.location\n        })\n    }\n\n    handleOnChangeType(e) {\n        this.setState({\n            typeSelected: e,\n            type: e.value\n        })\n    }\n\n\n    handleInputChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n        this.setState({\n            [name]: value,\n        });\n        this.removeError(name);\n    }\n\n    handleOnChangeJob(e) {\n        const { value, label } = e\n        this.getDataCandidateById(value)\n        this.setState({\n            jobName: label,\n            jobSelected: e,\n            candidateSelected: {\n                key: '',\n                value: ''\n            },\n            candidateId: ''\n        });\n        this.removeError('jobName')\n    }\n\n    removeError = (key) => {\n        const { errors } = this.state;\n        delete errors[key];\n        this.setState({\n            errors: errors\n        })\n    }\n\n\n\n    componentDidMount() {\n        this.getDataJob();\n        this.getInterviewDetail();\n    }\n\n\n    async handleUpdateInterview(e) {\n        e.preventDefault();\n        const data = this.state;\n        console.log(data)\n        const errors = this.validator.validate(this.state);\n        this.setState({\n            errors: errors,\n        });\n\n        if (this.isEmpty(errors)) {\n            const item = {\n                jobName: data.jobName,\n                location: data.location,\n                timeInterview: data.timeInterview.format('MM/DD/YYYY HH:mm'),\n                timeInterviewEnd: `${data.timeInterview.format('MM/DD/YYYY HH:mm').substring(0, 11)}${data.timeInterviewEnd.format('HH:mm')}`,\n                candidateId: data.candidateId,\n                linkZoom: data.linkZoom,\n                type: data.type,\n                password : data.password\n            }\n            try {\n                const response = await api.patch(`/api/admin/interview/${this.props.id}`, item)\n                if (response) {\n                    toast(<CustomToast title={\"Update Success!\"}/>, {\n                        position: toast.POSITION.TOP_CENTER,\n                        autoClose: 3000,\n                        className: \"toast_login\",\n                        closeButton: false,\n                        hideProgressBar: true,\n                        newestOnTop: true,\n                        closeOnClick: true,\n                        rtl: false,\n                        pauseOnFocusLoss: true,\n                        draggable: true,\n                        pauseOnHover: true,\n                        transition: Zoom,\n                      });\n                    this.getInterviewDetail();\n                }\n            } catch (error) {\n                toast(<CustomToast title={\"Update error some times!\"} type={\"error\"}/>, {\n                    position: toast.POSITION.TOP_CENTER,\n                    autoClose: 3000,\n                    className: \"toast_login\",\n                    closeButton: false,\n                    hideProgressBar: true,\n                    newestOnTop: true,\n                    closeOnClick: true,\n                    rtl: false,\n                    pauseOnFocusLoss: true,\n                    draggable: true,\n                    pauseOnHover: true,\n                    transition: Zoom,\n                  });\n            }\n        }\n    }\n\n    async getDataCandidateById(id) {\n        const response = await api.get(`/api/candidate/interview/${id}`);\n        if (response) {\n            const candidates = _.map(response.data.candidate, candidate => {\n                return {\n                    ...candidate,\n                    value: candidate.id,\n                    label: `${candidate.email} (${candidate.phone}) `\n                }\n            });\n            this.setState({\n                candidates: candidates\n            })\n        }\n    }\n\n    async getDataJob() {\n        try {\n            const response = await api.get(`/api/jobs`);\n            if (response) {\n                this.setState({\n                    jobs: _.map(response.data.list, job => {\n                        return {\n                            value: job.id,\n                            label: job.title\n                        }\n                    })\n                })\n            }\n        } catch (error) {\n\n        }\n    }\n\n\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div\n                className={`d-flex flex-column flex-row-fluid wrapper  ${this.props.className_wrap_broad}`}\n            >\n                   <ToastContainer closeOnClick autoClose={1000} rtl={false} />\n                <div className=\"content d-flex flex-column flex-column-fluid\">\n                    {this.state.isLoading ? <Fbloader /> : null}\n\n                    <div\n                        className=\"subheader py-3 py-lg-8 subheader-transparent\"\n                        id=\"kt_subheader\"\n                    >\n                        <div className=\"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\n                            \n                            <div className=\"d-flex align-items-center mr-1\">\n                               \n                                <div className=\"d-flex align-items-baseline flex-wrap mr-5\">\n                                   \n                                    <ul className=\"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\">\n                                        <li className=\"breadcrumb-item\">\n                                            <NavLink to=\"/\" className=\"text-muted\">\n                                                Fetch admin\n                      </NavLink>\n                                        </li>\n                                        <li className=\"breadcrumb-item\">\n                                            <NavLink to=\"/interview\" className=\"text-muted\">\n                                                Interview\n                      </NavLink>\n                                        </li>\n                                        <li className=\"breadcrumb-item\">\n                                            <span\n                                                className=\"text-muted\"\n                                                style={{ cursor: \"pointer\" }}\n                                            >\n                                                Interview update\n                      </span>\n                                        </li>\n                                    </ul>\n                                   \n                                </div>\n                               \n                            </div>\n                           \n                            <div className=\"d-flex align-items-center flex-wrap\"></div>\n                            \n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column-fluid\">\n                        <div className=\"container\">\n                           \n                            <div className=\"card card-custom\">\n                                <div className=\"card-header flex-wrap border-0 pt-6 pb-0\">\n                                    <div className=\"card-title\">\n                                        <h3 className=\"card-label\">\n                                            Update Interview\n                          \n                                        </h3>\n                                    </div>\n                                    <div className=\"card-toolbar\">\n                                       \n                                        <div className=\"dropdown dropdown-inline mr-2\">\n                                           \n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <form className=\"form\" onSubmit={this.handleUpdateInterview}>\n                                        <div className=\"card-body\">\n                                            <div className=\"form-group\">\n                                                <label>Name job:</label>\n                                                <Select\n                                                    name=\"option\"\n                                                    className={errors.jobName ? 'invalid-selected' : ''}\n                                                    options={this.state.jobs}\n                                                    value={this.state.jobSelected}\n                                                    onChange={this.handleOnChangeJob}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <label>Candidate:</label>\n                                                <Select\n                                                    name=\"option\"\n                                                    options={this.state.candidates}\n                                                    className={errors.candidateId ? 'invalid-selected' : ''}\n                                                    value={this.state.candidateSelected}\n                                                    onChange={this.handleOnChangeCandidate}\n                                                />\n                                            </div>\n\n                                            <div className=\"form-group\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <label>Location:</label>\n                                                        <input disabled type=\"text\" value={this.state.location} name=\"location\" onChange={this.handleInputChange} className={\n                                                            errors.location\n                                                                ? \"form-control is-invalid\"\n                                                                : \"form-control\"\n                                                        }\n                                                            placeholder=\"Please enter location\" />\n                                                    </div>\n\n                                                    <div className=\"col-md-6\">\n                                                        <label>Type:</label>\n                                                        <Select\n                                                            name=\"option\"\n                                                            options={this.types}\n                                                            className={errors.type ? 'invalid-selected' : ''}\n                                                            value={this.state.typeSelected}\n                                                            onChange={this.handleOnChangeType}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            {\n                                    this.state.type === 'online' ? (\n                                        <div className=\"form-group\">\n                                            <div className=\"row\">\n                                            <div className=\"col-md-12\">\n                                                    <label>Password</label>\n                                                    <div className=\"input-group\">\n                                                        <input type={this.state.typePassword} name=\"password\" onChange={this.handleInputChange} defaultValue={this.state.password} className={\n                                                            errors.password\n                                                                ? \"form-control is-invalid\"\n                                                                : \"form-control\"\n                                                        } />\n                                                        <div className=\"input-group-append\"><span onClick={this.toggleEyes} className=\"input-group-text\"><i className={this.state.typePassword === 'password' ? 'far fa-eye' : 'far fa-eye-slash'} /></span></div>\n                                                    </div>\n                                                    <span className=\"form-text text-muted\">Password zoom need have a maximum of 10 characters.</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ) : ''\n                                }\n\n                                            <div className=\"form-group\">\n\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6\">\n                                                        <label> Time Interview:</label>\n                                                        <DatetimePickerTrigger\n                                                            moment={this.state.timeInterview}\n                                                            onChange={(_moment) =>\n                                                                this.handleChangeDatePicker(_moment, \"timeInterview\")\n                                                            }\n                                                            showTimePicker={true}\n                                                            className=\"custom-date-picker-interview\"\n                                                        >\n                                                            <div className=\"custom-date-picker-interview__wrap\">\n                                                                <input readOnly name=\"timeInterview\" value={this.state.timeInterview.format('DD/MM/YYYY HH:mm')} className={'form-control'}\n                                                                    placeholder=\"Enter Time Interview\" />\n                                                                <div className=\"input-group-append\">\n                                                                    <span className=\"input-group-text\">\n                                                                        <i className=\"la la-calendar icon-lg\"></i>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </DatetimePickerTrigger>\n                                                    </div>\n                                                    <div className=\"col-md-6\">\n                                                        <label> Time Interview End:</label>\n                                                        <DatetimePickerTrigger\n                                                            moment={this.state.timeInterviewEnd}\n                                                            onChange={(_moment) =>\n                                                                this.handleChangeDatePicker(_moment, \"timeInterviewEnd\")\n                                                            }\n                                                            showCalendarPicker={false}\n                                                            showTimePicker={true}\n                                                        >\n                                                            <div className=\"custom-date-picker-interview__wrap\">\n                                                                <input readOnly name=\"timeInterviewEnd\" value={this.state.timeInterviewEnd.format('HH:mm')} className={\n                                                                    errors.timeInterviewEnd\n                                                                        ? \"form-control is-invalid\"\n                                                                        : \"form-control\"\n                                                                }\n                                                                    placeholder=\"Enter Time Interview\" />\n                                                                <div className=\"input-group-append\">\n                                                                    <span className=\"input-group-text\">\n                                                                        <i className=\"la la-calendar icon-lg\"></i>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </DatetimePickerTrigger>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-group\">\n                                            <label>Link Zoom:</label>\n                                            <input disabled type=\"text\" onChange={this.handleInputChange} value={this.state.linkZoom ? this.state.linkZoom : ''} name=\"linkZoom\" className=\"form-control\"\n                                                placeholder=\"Enter link zoom\" />\n                                        </div>\n                                        </div>\n                                        <div className=\"modal-cus__right text-right\">\n                                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Save</button>\n                                            <Link\n                                                to={`/interview`}\n                                            >\n                                                <button type=\"reset\" className=\"btn btn-secondary\" >Cancel</button>\n                                            </Link>\n                                        </div>\n                                    </form>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        className_wrap_broad: state.ui.className_wrap_broad,\n        id: ownProps.match.params.id\n    };\n};\n\nexport default connect(mapStateToProps)(UpdateInterview);\n"]},"metadata":{},"sourceType":"module"}