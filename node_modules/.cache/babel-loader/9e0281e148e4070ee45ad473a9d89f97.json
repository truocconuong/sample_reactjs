{"ast":null,"code":"import { __makeTemplateObject } from \"tslib\";\n/** @jsx jsx */\n\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\nvar rotate = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  to { transform: rotate(360deg); }\\n\"], [\"\\n  to { transform: rotate(360deg); }\\n\"]))); // There are three parts to the load in animation:\n// 1. Fade in\n// 2. Accelerated spin\n// 3. Stretch the spinner line\n\nvar loadIn = keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"], [\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"])));\n\nfunction getStrokeColor(_a) {\n  var mode = _a.mode,\n      appearance = _a.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? N500 : N0;\n  } // Dark mode: colours provided by Jake Miller\n\n\n  return appearance === 'inherit' ? DN900 : DN500;\n}\n\nexport default React.memo(React.forwardRef(function Spinner(_a, ref) {\n  var testId = _a.testId,\n      _b = _a.appearance,\n      appearance = _b === void 0 ? 'inherit' : _b,\n      _c = _a.delay,\n      delay = _c === void 0 ? 0 : _c,\n      _d = _a.size,\n      providedSize = _d === void 0 ? 'medium' : _d;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  return jsx(GlobalTheme.Consumer, null, function (tokens) {\n    var strokeColor = getStrokeColor({\n      mode: tokens.mode,\n      appearance: appearance\n    }); // The Spinner animation uses a combination of two\n    // css animations on two separate elements.\n\n    return jsx(\"svg\", {\n      focusable: \"false\",\n      height: size,\n      width: size,\n      viewBox: \"0 0 16 16\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"data-testid\": testId,\n      ref: ref,\n      css: css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"], [\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"])), loadIn, delay)\n    }, jsx(\"circle\", {\n      cx: \"8\",\n      cy: \"8\",\n      r: \"7\",\n      css: css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"], [\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"])), strokeColor, rotate, delay)\n    }));\n  });\n}));\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;","map":{"version":3,"sources":["../../src/spinner.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __makeTemplateObject } from \"tslib\";\n/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\nvar rotate = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  to { transform: rotate(360deg); }\\n\"], [\"\\n  to { transform: rotate(360deg); }\\n\"])));\n// There are three parts to the load in animation:\n// 1. Fade in\n// 2. Accelerated spin\n// 3. Stretch the spinner line\nvar loadIn = keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"], [\"\\n  from {\\n    transform: rotate(50deg);\\n    opacity: 0;\\n    stroke-dashoffset: 60;\\n  }\\n  to {\\n    transform: rotate(230deg);\\n    opacity: 1;\\n    stroke-dashoffset: 50;\\n  }\\n\"])));\nfunction getStrokeColor(_a) {\n    var mode = _a.mode, appearance = _a.appearance;\n    if (mode === 'light') {\n        return appearance === 'inherit' ? N500 : N0;\n    }\n    // Dark mode: colours provided by Jake Miller\n    return appearance === 'inherit' ? DN900 : DN500;\n}\nexport default React.memo(React.forwardRef(function Spinner(_a, ref) {\n    var testId = _a.testId, _b = _a.appearance, appearance = _b === void 0 ? 'inherit' : _b, _c = _a.delay, delay = _c === void 0 ? 0 : _c, _d = _a.size, providedSize = _d === void 0 ? 'medium' : _d;\n    var size = typeof providedSize === 'number'\n        ? providedSize\n        : presetSizes[providedSize];\n    return (jsx(GlobalTheme.Consumer, null, function (tokens) {\n        var strokeColor = getStrokeColor({\n            mode: tokens.mode,\n            appearance: appearance,\n        });\n        // The Spinner animation uses a combination of two\n        // css animations on two separate elements.\n        return (jsx(\"svg\", { focusable: \"false\", height: size, width: size, viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\", \"data-testid\": testId, ref: ref, css: css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"], [\"\\n                /* align better inline with text */\\n                vertical-align: middle;\\n                /* We are going to animate this in */\\n                opacity: 0;\\n\\n                animation: \", \" 1s ease-in-out;\\n                /* When the animation completes, stay at the last frame of the animation */\\n                animation-fill-mode: forwards;\\n                animation-delay: \", \"ms;\\n              \"])), loadIn, delay) },\n            jsx(\"circle\", { cx: \"8\", cy: \"8\", r: \"7\", css: css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"], [\"\\n                  fill: none;\\n                  stroke: \", \";\\n                  stroke-width: 1.5;\\n                  stroke-linecap: round;\\n                  stroke-dasharray: 60;\\n                  stroke-dashoffset: inherit;\\n                  transform-origin: center;\\n                  animation: \", \" 0.86s infinite;\\n                  animation-delay: \", \"ms;\\n                  animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\\n                \"])), strokeColor, rotate, delay) })));\n    }));\n}));\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n//# sourceMappingURL=spinner.js.map"]},"metadata":{},"sourceType":"module"}