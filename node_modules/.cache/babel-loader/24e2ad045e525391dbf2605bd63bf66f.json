{"ast":null,"code":"import { __assign, __read, __rest } from \"tslib\";\nimport React, { useCallback, useState } from 'react';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport ButtonBase from '../shared/button-base';\nimport getIsOnlySingleIcon from '../shared/get-is-only-single-icon';\nimport LoadingSpinner from '../shared/loading-spinner';\nimport Theme, { defaultThemeFn, getSpecifiers } from './theme';\n\nfunction getInteractionState(_a) {\n  var _b = _a.isDisabled,\n      isDisabled = _b === void 0 ? false : _b,\n      _c = _a.isActive,\n      isActive = _c === void 0 ? false : _c,\n      _d = _a.isFocus,\n      isFocus = _d === void 0 ? false : _d,\n      _e = _a.isHover,\n      isHover = _e === void 0 ? false : _e,\n      _f = _a.isSelected,\n      isSelected = _f === void 0 ? false : _f,\n      _g = _a.isLoading,\n      isLoading = _g === void 0 ? false : _g;\n\n  if (isDisabled) {\n    return 'disabled';\n  }\n\n  if (isSelected && isFocus) {\n    return 'focusSelected';\n  }\n\n  if (isSelected) {\n    return 'selected';\n  } // not allowing active or focus style changes while loading\n\n\n  if (!isLoading && isActive) {\n    return 'active';\n  }\n\n  if (!isLoading && isHover) {\n    return 'hover';\n  }\n\n  if (isFocus) {\n    return 'focus';\n  }\n\n  return 'default';\n}\n\nvar initial = {\n  isHover: false,\n  isActive: false,\n  isFocus: false\n};\nvar CustomThemeButton = React.memo(React.forwardRef(function CustomThemeButton(_a, ref) {\n  var // Calculate default props for use in custom themes\n  _b = _a.appearance,\n      // Calculate default props for use in custom themes\n  appearance = _b === void 0 ? 'default' : _b,\n      _c = _a.autoFocus,\n      autoFocus = _c === void 0 ? false : _c,\n      _d = _a.isDisabled,\n      isDisabled = _d === void 0 ? false : _d,\n      _e = _a.isSelected,\n      isSelected = _e === void 0 ? false : _e,\n      _f = _a.shouldFitContainer,\n      shouldFitContainer = _f === void 0 ? false : _f,\n      _g = _a.spacing,\n      spacing = _g === void 0 ? 'default' : _g,\n      _h = _a.isLoading,\n      isLoading = _h === void 0 ? false : _h,\n      providedOnMouseEnter = _a.onMouseEnter,\n      providedOnMouseLeave = _a.onMouseLeave,\n      providedOnMouseDown = _a.onMouseDown,\n      providedOnMouseUp = _a.onMouseUp,\n      providedOnFocus = _a.onFocus,\n      providedOnBlur = _a.onBlur,\n      _j = _a.theme,\n      theme = _j === void 0 ? defaultThemeFn : _j,\n      rest = __rest(_a, [\"appearance\", \"autoFocus\", \"isDisabled\", \"isSelected\", \"shouldFitContainer\", \"spacing\", \"isLoading\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\", \"theme\"]); // TODO is there a nicer way to do this?\n  // Add default props back into object for spreading\n\n\n  var restProps = __assign({\n    appearance: appearance,\n    autoFocus: autoFocus,\n    isDisabled: isDisabled,\n    isSelected: isSelected,\n    shouldFitContainer: shouldFitContainer,\n    spacing: spacing\n  }, rest);\n\n  var _k = __read(useState(initial), 2),\n      state = _k[0],\n      setState = _k[1];\n\n  var onMouseEnter = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isHover: true\n      });\n    });\n\n    if (providedOnMouseEnter) {\n      providedOnMouseEnter(event);\n    }\n  }, [providedOnMouseEnter]);\n  var onMouseLeave = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isHover: false,\n        isActive: false\n      });\n    });\n\n    if (providedOnMouseLeave) {\n      providedOnMouseLeave(event);\n    }\n  }, [providedOnMouseLeave]);\n  var onMouseDown = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isActive: true\n      });\n    });\n\n    if (providedOnMouseDown) {\n      providedOnMouseDown(event);\n    }\n  }, [providedOnMouseDown]);\n  var onMouseUp = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isActive: false\n      });\n    });\n\n    if (providedOnMouseUp) {\n      providedOnMouseUp(event);\n    }\n  }, [providedOnMouseUp]);\n  var onFocus = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isFocus: true\n      });\n    });\n\n    if (providedOnFocus) {\n      providedOnFocus(event);\n    }\n  }, [providedOnFocus]);\n  var onBlur = useCallback(function (event) {\n    setState(function (current) {\n      return __assign(__assign({}, current), {\n        isFocus: false\n      });\n    });\n\n    if (providedOnBlur) {\n      providedOnBlur(event);\n    }\n  }, [providedOnBlur]);\n  return React.createElement(Theme.Provider, {\n    value: theme\n  }, React.createElement(GlobalTheme.Consumer, null, function (_a) {\n    var mode = _a.mode;\n    return React.createElement(Theme.Consumer, __assign({\n      mode: mode,\n      state: getInteractionState(__assign(__assign({}, state), {\n        isLoading: isLoading,\n        isSelected: restProps.isSelected,\n        isDisabled: restProps.isDisabled\n      })),\n      iconIsOnlyChild: getIsOnlySingleIcon(restProps),\n      isLoading: isLoading\n    }, restProps), function (_a) {\n      var buttonStyles = _a.buttonStyles;\n      return React.createElement(ButtonBase, __assign({}, restProps, {\n        ref: ref,\n        overlay: isLoading ? React.createElement(LoadingSpinner, __assign({}, restProps)) : null,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        onMouseDown: onMouseDown,\n        onMouseUp: onMouseUp,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        buttonCss: getSpecifiers(buttonStyles)\n      }));\n    });\n  }));\n})); // Tools including enzyme rely on components having a display name\n\nCustomThemeButton.displayName = 'CustomThemeButton';\nexport default CustomThemeButton;","map":{"version":3,"sources":["../../../src/custom-theme-button/custom-theme-button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,WAAhB,EAA6B,QAA7B,QAA6C,OAA7C;AAIA,OAAO,WAAP,MAAwB,4BAAxB;AAGA,OAAO,UAAP,MAAuB,uBAAvB;AACA,OAAO,mBAAP,MAAgC,mCAAhC;AACA,OAAO,cAAP,MAA2B,2BAA3B;AAMA,OAAO,KAAP,IAAgB,cAAhB,EAAgC,aAAhC,QAAqD,SAArD;;AAQA,SAAS,mBAAT,CAA6B,EAA7B,EAOyB;MANvB,EAAA,GAAA,EAAA,CAAA,U;MAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MAClB,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MAChB,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACf,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACf,EAAA,GAAA,EAAA,CAAA,U;MAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MAClB,EAAA,GAAA,EAAA,CAAA,S;MAAA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;;AAEjB,MAAI,UAAJ,EAAgB;AACd,WAAO,UAAP;AACD;;AACD,MAAI,UAAU,IAAI,OAAlB,EAA2B;AACzB,WAAO,eAAP;AACD;;AACD,MAAI,UAAJ,EAAgB;AACd,WAAO,UAAP;AACD,GATsB,CAUvB;;;AACA,MAAI,CAAC,SAAD,IAAc,QAAlB,EAA4B;AAC1B,WAAO,QAAP;AACD;;AACD,MAAI,CAAC,SAAD,IAAc,OAAlB,EAA2B;AACzB,WAAO,OAAP;AACD;;AACD,MAAI,OAAJ,EAAa;AACX,WAAO,OAAP;AACD;;AACD,SAAO,SAAP;AACD;;AAED,IAAM,OAAO,GAAU;AAAE,EAAA,OAAO,EAAE,KAAX;AAAkB,EAAA,QAAQ,EAAE,KAA5B;AAAmC,EAAA,OAAO,EAAE;AAA5C,CAAvB;AAEA,IAAM,iBAAiB,GAAG,KAAK,CAAC,IAAN,CACxB,KAAK,CAAC,UAAN,CAAqC,SAAS,iBAAT,CACnC,EADmC,EAmBnC,GAnBmC,EAmBR;AAhBzB,MADA;AACA,EAAA,EAAA,GAAA,EAAA,CAAA,UAAA;AAAA,MADA;AACA,EAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EAAtB;AAAA,MACA,EAAA,GAAA,EAAA,CAAA,SADA;AAAA,MACA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EADjB;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,UAFA;AAAA,MAEA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAFlB;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,UAHA;AAAA,MAGA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAHlB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,kBAJA;AAAA,MAIA,kBAAkB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAJ1B;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,OALA;AAAA,MAKA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EALnB;AAAA,MAMA,EAAA,GAAA,EAAA,CAAA,SANA;AAAA,MAMA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EANjB;AAAA,MAOc,oBAAoB,GAAA,EAAA,CAAA,YAPlC;AAAA,MAQc,oBAAoB,GAAA,EAAA,CAAA,YARlC;AAAA,MASa,mBAAmB,GAAA,EAAA,CAAA,WAThC;AAAA,MAUW,iBAAiB,GAAA,EAAA,CAAA,SAV5B;AAAA,MAWS,eAAe,GAAA,EAAA,CAAA,OAXxB;AAAA,MAYQ,cAAc,GAAA,EAAA,CAAA,MAZtB;AAAA,MAaA,EAAA,GAAA,EAAA,CAAA,KAbA;AAAA,MAaA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,cAAH,GAAiB,EAbtB;AAAA,MAcG,IAAI,GAAA,MAAA,CAAA,EAAA,EAhBT,CAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,cAAA,EAAA,aAAA,EAAA,WAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,CAgBS,CAdP,CAgByB,CAE3B;AACA;;;AACA,MAAM,SAAS,GAAA,QAAA,CAAA;AACb,IAAA,UAAU,EAAA,UADG;AAEb,IAAA,SAAS,EAAA,SAFI;AAGb,IAAA,UAAU,EAAA,UAHG;AAIb,IAAA,UAAU,EAAA,UAJG;AAKb,IAAA,kBAAkB,EAAA,kBALL;AAMb,IAAA,OAAO,EAAA;AANM,GAAA,EAOV,IAPU,CAAf;;AAUM,MAAA,EAAA,GAAA,MAAA,CAAoB,QAAQ,CAAQ,OAAR,CAA5B,EAA4C,CAA5C,CAAA;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAEN,MAAM,YAAY,GAAG,WAAW,CAC9B,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,OAAN,CAAA,EAAa;AAAE,QAAA,OAAO,EAAtB;AAAa,OAAb,CAAA;AAA+B,KAA3C,CAAR;;AACA,QAAI,oBAAJ,EAA0B;AACxB,MAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GAN6B,EAO9B,CAAC,oBAAD,CAP8B,CAAhC;AASA,MAAM,YAAY,GAAG,WAAW,CAC9B,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACf,OADe,CAAA,EACR;AACV,QAAA,OAAO,EAAE,KADC;AAEV,QAAA,QAAQ,EAHU;AACR,OADQ,CAAA;AAIlB,KAJM,CAAR;;AAKA,QAAI,oBAAJ,EAA0B;AACxB,MAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GAV6B,EAW9B,CAAC,oBAAD,CAX8B,CAAhC;AAaA,MAAM,WAAW,GAAG,WAAW,CAC7B,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,OAAN,CAAA,EAAa;AAAE,QAAA,QAAQ,EAAvB;AAAa,OAAb,CAAA;AAAgC,KAA5C,CAAR;;AACA,QAAI,mBAAJ,EAAyB;AACvB,MAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,GAN4B,EAO7B,CAAC,mBAAD,CAP6B,CAA/B;AASA,MAAM,SAAS,GAAG,WAAW,CAC3B,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,OAAN,CAAA,EAAa;AAAE,QAAA,QAAQ,EAAvB;AAAa,OAAb,CAAA;AAAiC,KAA7C,CAAR;;AACA,QAAI,iBAAJ,EAAuB;AACrB,MAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GAN0B,EAO3B,CAAC,iBAAD,CAP2B,CAA7B;AASA,MAAM,OAAO,GAAG,WAAW,CACzB,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,OAAN,CAAA,EAAa;AAAE,QAAA,OAAO,EAAtB;AAAa,OAAb,CAAA;AAA+B,KAA3C,CAAR;;AACA,QAAI,eAAJ,EAAqB;AACnB,MAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GANwB,EAOzB,CAAC,eAAD,CAPyB,CAA3B;AASA,MAAM,MAAM,GAAG,WAAW,CACxB,UAAC,KAAD,EAAqC;AACnC,IAAA,QAAQ,CAAC,UAAA,OAAA,EAAO;AAAI,aAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,OAAN,CAAA,EAAa;AAAE,QAAA,OAAO,EAAtB;AAAa,OAAb,CAAA;AAAgC,KAA5C,CAAR;;AACA,QAAI,cAAJ,EAAoB;AAClB,MAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GANuB,EAOxB,CAAC,cAAD,CAPwB,CAA1B;AAUA,SACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe;AAAC,IAAA,KAAK,EAAE;AAAR,GAAf,EACE,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAb,EAAqB,IAArB,EACG,UAAC,EAAD,EAA+B;QAA5B,IAAI,GAAA,EAAA,CAAA,I;AAA6B,WACnC,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,QAAA,CAAA;AACb,MAAA,IAAI,EAAE,IADO;AAEb,MAAA,KAAK,EAAE,mBAAmB,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACrB,KADqB,CAAA,EAChB;AACR,QAAA,SAAS,EAAA,SADD;AAER,QAAA,UAAU,EAAE,SAAS,CAAC,UAFd;AAGR,QAAA,UAAU,EAAE,SAAS,CAAC;AAHd,OADgB,CAAA,CAFb;AAQb,MAAA,eAAe,EAAE,mBAAmB,CAAC,SAAD,CARvB;AASb,MAAA,SAAS,EAAE;AATE,KAAA,EAUT,SAVS,CAAf,EAYG,UAAC,EAAD,EAMA;UALC,YAAY,GAAA,EAAA,CAAA,Y;AAKR,aACJ,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA,EAAA,EACL,SADK,EACI;AACb,QAAA,GAAG,EAAE,GADQ;AAEb,QAAA,OAAO,EAAE,SAAS,GAAG,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,QAAA,CAAA,EAAA,EAAK,SAAL,CAAf,CAAH,GAAuC,IAF5C;AAGb,QAAA,YAAY,EAAE,YAHD;AAIb,QAAA,YAAY,EAAE,YAJD;AAKb,QAAA,WAAW,EAAE,WALA;AAMb,QAAA,SAAS,EAAE,SANE;AAOb,QAAA,OAAO,EAAE,OAPI;AAQb,QAAA,MAAM,EAAE,MARK;AASb,QAAA,SAAS,EAAE,aAAa,CAAC,YAAD;AATX,OADJ,CAAX,CADI;AAaL,KA/BH,CADmC;AAkCpC,GAnCH,CADF,CADF;AAyCD,CAvID,CADwB,CAA1B,C,CA2IA;;AACA,iBAAiB,CAAC,WAAlB,GAAgC,mBAAhC;AAEA,eAAe,iBAAf","sourceRoot":"","sourcesContent":["import { __assign, __read, __rest } from \"tslib\";\nimport React, { useCallback, useState } from 'react';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport ButtonBase from '../shared/button-base';\nimport getIsOnlySingleIcon from '../shared/get-is-only-single-icon';\nimport LoadingSpinner from '../shared/loading-spinner';\nimport Theme, { defaultThemeFn, getSpecifiers } from './theme';\nfunction getInteractionState(_a) {\n    var _b = _a.isDisabled, isDisabled = _b === void 0 ? false : _b, _c = _a.isActive, isActive = _c === void 0 ? false : _c, _d = _a.isFocus, isFocus = _d === void 0 ? false : _d, _e = _a.isHover, isHover = _e === void 0 ? false : _e, _f = _a.isSelected, isSelected = _f === void 0 ? false : _f, _g = _a.isLoading, isLoading = _g === void 0 ? false : _g;\n    if (isDisabled) {\n        return 'disabled';\n    }\n    if (isSelected && isFocus) {\n        return 'focusSelected';\n    }\n    if (isSelected) {\n        return 'selected';\n    }\n    // not allowing active or focus style changes while loading\n    if (!isLoading && isActive) {\n        return 'active';\n    }\n    if (!isLoading && isHover) {\n        return 'hover';\n    }\n    if (isFocus) {\n        return 'focus';\n    }\n    return 'default';\n}\nvar initial = { isHover: false, isActive: false, isFocus: false };\nvar CustomThemeButton = React.memo(React.forwardRef(function CustomThemeButton(_a, ref) {\n    var \n    // Calculate default props for use in custom themes\n    _b = _a.appearance, \n    // Calculate default props for use in custom themes\n    appearance = _b === void 0 ? 'default' : _b, _c = _a.autoFocus, autoFocus = _c === void 0 ? false : _c, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, _f = _a.shouldFitContainer, shouldFitContainer = _f === void 0 ? false : _f, _g = _a.spacing, spacing = _g === void 0 ? 'default' : _g, _h = _a.isLoading, isLoading = _h === void 0 ? false : _h, providedOnMouseEnter = _a.onMouseEnter, providedOnMouseLeave = _a.onMouseLeave, providedOnMouseDown = _a.onMouseDown, providedOnMouseUp = _a.onMouseUp, providedOnFocus = _a.onFocus, providedOnBlur = _a.onBlur, _j = _a.theme, theme = _j === void 0 ? defaultThemeFn : _j, rest = __rest(_a, [\"appearance\", \"autoFocus\", \"isDisabled\", \"isSelected\", \"shouldFitContainer\", \"spacing\", \"isLoading\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\", \"theme\"]);\n    // TODO is there a nicer way to do this?\n    // Add default props back into object for spreading\n    var restProps = __assign({ appearance: appearance,\n        autoFocus: autoFocus,\n        isDisabled: isDisabled,\n        isSelected: isSelected,\n        shouldFitContainer: shouldFitContainer,\n        spacing: spacing }, rest);\n    var _k = __read(useState(initial), 2), state = _k[0], setState = _k[1];\n    var onMouseEnter = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isHover: true })); });\n        if (providedOnMouseEnter) {\n            providedOnMouseEnter(event);\n        }\n    }, [providedOnMouseEnter]);\n    var onMouseLeave = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isHover: false, isActive: false })); });\n        if (providedOnMouseLeave) {\n            providedOnMouseLeave(event);\n        }\n    }, [providedOnMouseLeave]);\n    var onMouseDown = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isActive: true })); });\n        if (providedOnMouseDown) {\n            providedOnMouseDown(event);\n        }\n    }, [providedOnMouseDown]);\n    var onMouseUp = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isActive: false })); });\n        if (providedOnMouseUp) {\n            providedOnMouseUp(event);\n        }\n    }, [providedOnMouseUp]);\n    var onFocus = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isFocus: true })); });\n        if (providedOnFocus) {\n            providedOnFocus(event);\n        }\n    }, [providedOnFocus]);\n    var onBlur = useCallback(function (event) {\n        setState(function (current) { return (__assign(__assign({}, current), { isFocus: false })); });\n        if (providedOnBlur) {\n            providedOnBlur(event);\n        }\n    }, [providedOnBlur]);\n    return (React.createElement(Theme.Provider, { value: theme },\n        React.createElement(GlobalTheme.Consumer, null, function (_a) {\n            var mode = _a.mode;\n            return (React.createElement(Theme.Consumer, __assign({ mode: mode, state: getInteractionState(__assign(__assign({}, state), { isLoading: isLoading, isSelected: restProps.isSelected, isDisabled: restProps.isDisabled })), iconIsOnlyChild: getIsOnlySingleIcon(restProps), isLoading: isLoading }, restProps), function (_a) {\n                var buttonStyles = _a.buttonStyles;\n                return (React.createElement(ButtonBase, __assign({}, restProps, { ref: ref, overlay: isLoading ? React.createElement(LoadingSpinner, __assign({}, restProps)) : null, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onMouseDown: onMouseDown, onMouseUp: onMouseUp, onFocus: onFocus, onBlur: onBlur, buttonCss: getSpecifiers(buttonStyles) })));\n            }));\n        })));\n}));\n// Tools including enzyme rely on components having a display name\nCustomThemeButton.displayName = 'CustomThemeButton';\nexport default CustomThemeButton;\n//# sourceMappingURL=custom-theme-button.js.map"]},"metadata":{},"sourceType":"module"}