{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport { createAndFireEvent, withAnalyticsContext, withAnalyticsEvents } from '@atlaskit/analytics-next';\nimport Div from './styled';\nimport { name as packageName, version as packageVersion } from './version.json';\n\nvar Blanket =\n/** @class */\nfunction (_super) {\n  __extends(Blanket, _super);\n\n  function Blanket() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Blanket.prototype.render = function () {\n    var _a = this.props,\n        canClickThrough = _a.canClickThrough,\n        isTinted = _a.isTinted,\n        onBlanketClicked = _a.onBlanketClicked;\n    var onClick = canClickThrough ? undefined : onBlanketClicked;\n    var containerProps = {\n      canClickThrough: canClickThrough,\n      isTinted: isTinted,\n      onClick: onClick\n    };\n    return React.createElement(Div, __assign({}, containerProps));\n  };\n\n  Blanket.defaultProps = {\n    canClickThrough: false,\n    isTinted: false,\n    onBlanketClicked: function () {}\n  };\n  return Blanket;\n}(React.Component);\n\nexport { Blanket as BlanketWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n  componentName: 'blanket',\n  packageName: packageName,\n  packageVersion: packageVersion\n})(withAnalyticsEvents({\n  onBlanketClicked: createAndFireEventOnAtlaskit({\n    action: 'clicked',\n    actionSubject: 'blanket',\n    attributes: {\n      componentName: 'blanket',\n      packageName: packageName,\n      packageVersion: packageVersion\n    }\n  })\n})(Blanket));","map":{"version":3,"sources":["../../src/Blanket.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SACE,kBADF,EAEE,oBAFF,EAGE,mBAHF,QAKO,0BALP;AAOA,OAAO,GAAP,MAAgB,UAAhB;AACA,SAAS,IAAI,IAAI,WAAjB,EAA8B,OAAO,IAAI,cAAzC,QAA+D,gBAA/D;;AAWA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAtB,WAAA,OAAA,GAAA;;AAcC;;AAPC,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAAkD,KAAK,KAAvD;AAAA,QAAE,eAAe,GAAA,EAAA,CAAA,eAAjB;AAAA,QAAmB,QAAQ,GAAA,EAAA,CAAA,QAA3B;AAAA,QAA6B,gBAAgB,GAAA,EAAA,CAAA,gBAA7C;AACN,QAAM,OAAO,GAAG,eAAe,GAAG,SAAH,GAAe,gBAA9C;AACA,QAAM,cAAc,GAAG;AAAE,MAAA,eAAe,EAAA,eAAjB;AAAmB,MAAA,QAAQ,EAAA,QAA3B;AAA6B,MAAA,OAAO,EAAA;AAApC,KAAvB;AAEA,WAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI,QAAA,CAAA,EAAA,EAAK,cAAL,CAAJ,CAAP;AACD,GAND;;AANO,EAAA,OAAA,CAAA,YAAA,GAAe;AACpB,IAAA,eAAe,EAAE,KADG;AAEpB,IAAA,QAAQ,EAAE,KAFU;AAGpB,IAAA,gBAAgB,EAAE,YAAA,CAAQ;AAHN,GAAf;AAaT,SAAA,OAAA;AAAC,CAdD,CAAsB,KAAK,CAAC,SAA5B,CAAA;;AAgBA,SAAS,OAAO,IAAI,uBAApB;AACA,IAAM,4BAA4B,GAAG,kBAAkB,CAAC,UAAD,CAAvD;AAEA,eAAe,oBAAoB,CAAC;AAClC,EAAA,aAAa,EAAE,SADmB;AAElC,EAAA,WAAW,EAAA,WAFuB;AAGlC,EAAA,cAAc,EAAA;AAHoB,CAAD,CAApB,CAKb,mBAAmB,CAAC;AAClB,EAAA,gBAAgB,EAAE,4BAA4B,CAAC;AAC7C,IAAA,MAAM,EAAE,SADqC;AAE7C,IAAA,aAAa,EAAE,SAF8B;AAI7C,IAAA,UAAU,EAAE;AACV,MAAA,aAAa,EAAE,SADL;AAEV,MAAA,WAAW,EAAA,WAFD;AAGV,MAAA,cAAc,EAAA;AAHJ;AAJiC,GAAD;AAD5B,CAAD,CAAnB,CAWG,OAXH,CALa,CAAf","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport { createAndFireEvent, withAnalyticsContext, withAnalyticsEvents, } from '@atlaskit/analytics-next';\nimport Div from './styled';\nimport { name as packageName, version as packageVersion } from './version.json';\nvar Blanket = /** @class */ (function (_super) {\n    __extends(Blanket, _super);\n    function Blanket() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Blanket.prototype.render = function () {\n        var _a = this.props, canClickThrough = _a.canClickThrough, isTinted = _a.isTinted, onBlanketClicked = _a.onBlanketClicked;\n        var onClick = canClickThrough ? undefined : onBlanketClicked;\n        var containerProps = { canClickThrough: canClickThrough, isTinted: isTinted, onClick: onClick };\n        return React.createElement(Div, __assign({}, containerProps));\n    };\n    Blanket.defaultProps = {\n        canClickThrough: false,\n        isTinted: false,\n        onBlanketClicked: function () { },\n    };\n    return Blanket;\n}(React.Component));\nexport { Blanket as BlanketWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n    componentName: 'blanket',\n    packageName: packageName,\n    packageVersion: packageVersion,\n})(withAnalyticsEvents({\n    onBlanketClicked: createAndFireEventOnAtlaskit({\n        action: 'clicked',\n        actionSubject: 'blanket',\n        attributes: {\n            componentName: 'blanket',\n            packageName: packageName,\n            packageVersion: packageVersion,\n        },\n    }),\n})(Blanket));\n//# sourceMappingURL=Blanket.js.map"]},"metadata":{},"sourceType":"module"}