{"ast":null,"code":"import { __extends, __read, __spread } from \"tslib\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { default as AnalyticsReactContext } from '@atlaskit/analytics-next-stable-react-context';\nvar ContextTypes = {\n  getAtlaskitAnalyticsEventHandlers: PropTypes.func,\n  getAtlaskitAnalyticsContext: PropTypes.func\n};\n\nvar noop = function () {\n  return [];\n}; // eslint-disable-next-line @repo/internal/react/no-class-components\n\n\nvar AnalyticsListener =\n/** @class */\nfunction (_super) {\n  __extends(AnalyticsListener, _super);\n\n  function AnalyticsListener(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getChildContext = function () {\n      return {\n        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,\n        getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext\n      };\n    };\n\n    _this.getAnalyticsEventHandlers = function () {\n      var _a = _this.props,\n          channel = _a.channel,\n          onEvent = _a.onEvent;\n      var _b = _this.context.getAtlaskitAnalyticsEventHandlers,\n          getAtlaskitAnalyticsEventHandlers = _b === void 0 ? noop : _b;\n\n      var handler = function (event, eventChannel) {\n        if (channel === '*' || channel === eventChannel) {\n          onEvent(event, eventChannel);\n        }\n      };\n\n      return __spread([handler], getAtlaskitAnalyticsEventHandlers());\n    };\n\n    _this.getAtlaskitAnalyticsContext = function () {\n      var _a = _this.context.getAtlaskitAnalyticsContext,\n          getAtlaskitAnalyticsContext = _a === void 0 ? noop : _a;\n      return getAtlaskitAnalyticsContext();\n    };\n\n    _this.contextValue = {\n      getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,\n      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers\n    };\n    return _this;\n  }\n\n  AnalyticsListener.prototype.render = function () {\n    var children = this.props.children;\n    return React.createElement(AnalyticsReactContext.Provider, {\n      value: this.contextValue\n    }, children);\n  };\n\n  AnalyticsListener.contextTypes = ContextTypes;\n  AnalyticsListener.childContextTypes = ContextTypes;\n  return AnalyticsListener;\n}(Component);\n\nexport default AnalyticsListener;","map":{"version":3,"sources":["../../../../src/components/AnalyticsListener/LegacyAnalyticsListener.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AAEA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,OAAO,IAAI,qBADb,QAGO,+CAHP;AAmBA,IAAM,YAAY,GAAG;AACnB,EAAA,iCAAiC,EAAE,SAAS,CAAC,IAD1B;AAEnB,EAAA,2BAA2B,EAAE,SAAS,CAAC;AAFpB,CAArB;;AAKA,IAAM,IAAI,GAAG,YAAA;AAAM,SAAA,EAAA;AAAE,CAArB,C,CAEA;;;AACA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;;AAM9B,WAAA,iBAAA,CAAY,KAAZ,EAAwB;AAAxB,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AASA,IAAA,KAAA,CAAA,eAAA,GAAkB,YAAA;AAAM,aAAC;AACvB,QAAA,iCAAiC,EAAE,KAAI,CAAC,yBADjB;AAEvB,QAAA,2BAA2B,EAAE,KAAI,CAAC;AAFX,OAAD;AAGtB,KAHF;;AAKA,IAAA,KAAA,CAAA,yBAAA,GAA4B,YAAA;AACpB,UAAA,EAAA,GAAuB,KAAI,CAAC,KAA5B;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,OAAO,GAAA,EAAA,CAAA,OAAlB;AACE,UAAA,EAAA,GAA6C,KAAI,CAAC,OAAL,CAAL,iCAAxC;AAAA,UAAA,iCAAiC,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAxC;;AAER,UAAM,OAAO,GAA4B,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAC3D,YAAI,OAAO,KAAK,GAAZ,IAAmB,OAAO,KAAK,YAAnC,EAAiD;AAC/C,UAAA,OAAO,CAAC,KAAD,EAAQ,YAAR,CAAP;AACD;AACF,OAJD;;AAMA,aAAA,QAAA,CAAA,CAAQ,OAAR,CAAA,EAAoB,iCAAiC,EAArD,CAAA;AACD,KAXD;;AAaA,IAAA,KAAA,CAAA,2BAAA,GAA8B,YAAA;AACpB,UAAA,EAAA,GAAuC,KAAI,CAAC,OAAL,CAAL,2BAAlC;AAAA,UAAA,2BAA2B,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAlC;AACR,aAAO,2BAA2B,EAAlC;AACD,KAHD;;AAxBE,IAAA,KAAI,CAAC,YAAL,GAAoB;AAClB,MAAA,2BAA2B,EAAE,KAAI,CAAC,2BADhB;AAElB,MAAA,iCAAiC,EAAE,KAAI,CAAC;AAFtB,KAApB;;AAID;;AAyBD,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACU,QAAA,QAAQ,GAAK,KAAK,KAAL,CAAL,QAAR;AACR,WACE,KAAA,CAAA,aAAA,CAAC,qBAAqB,CAAC,QAAvB,EAA+B;AAAC,MAAA,KAAK,EAAE,KAAK;AAAb,KAA/B,EACG,QADH,CADF;AAKD,GAPD;;AArCO,EAAA,iBAAA,CAAA,YAAA,GAAe,YAAf;AACA,EAAA,iBAAA,CAAA,iBAAA,GAAoB,YAApB;AA4CT,SAAA,iBAAA;AAAC,CA9CD,CAAgC,SAAhC,CAAA;;AAgDA,eAAe,iBAAf","sourceRoot":"","sourcesContent":["import { __extends, __read, __spread } from \"tslib\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { default as AnalyticsReactContext, } from '@atlaskit/analytics-next-stable-react-context';\nvar ContextTypes = {\n    getAtlaskitAnalyticsEventHandlers: PropTypes.func,\n    getAtlaskitAnalyticsContext: PropTypes.func,\n};\nvar noop = function () { return []; };\n// eslint-disable-next-line @repo/internal/react/no-class-components\nvar AnalyticsListener = /** @class */ (function (_super) {\n    __extends(AnalyticsListener, _super);\n    function AnalyticsListener(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getChildContext = function () { return ({\n            getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,\n            getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,\n        }); };\n        _this.getAnalyticsEventHandlers = function () {\n            var _a = _this.props, channel = _a.channel, onEvent = _a.onEvent;\n            var _b = _this.context.getAtlaskitAnalyticsEventHandlers, getAtlaskitAnalyticsEventHandlers = _b === void 0 ? noop : _b;\n            var handler = function (event, eventChannel) {\n                if (channel === '*' || channel === eventChannel) {\n                    onEvent(event, eventChannel);\n                }\n            };\n            return __spread([handler], getAtlaskitAnalyticsEventHandlers());\n        };\n        _this.getAtlaskitAnalyticsContext = function () {\n            var _a = _this.context.getAtlaskitAnalyticsContext, getAtlaskitAnalyticsContext = _a === void 0 ? noop : _a;\n            return getAtlaskitAnalyticsContext();\n        };\n        _this.contextValue = {\n            getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,\n            getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,\n        };\n        return _this;\n    }\n    AnalyticsListener.prototype.render = function () {\n        var children = this.props.children;\n        return (React.createElement(AnalyticsReactContext.Provider, { value: this.contextValue }, children));\n    };\n    AnalyticsListener.contextTypes = ContextTypes;\n    AnalyticsListener.childContextTypes = ContextTypes;\n    return AnalyticsListener;\n}(Component));\nexport default AnalyticsListener;\n//# sourceMappingURL=LegacyAnalyticsListener.js.map"]},"metadata":{},"sourceType":"module"}