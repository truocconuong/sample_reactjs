{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Dnd/AddCard.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport CreatableSelect from 'react-select/creatable';\nimport { rulesCreateNewCard } from \"../../utils/rule\";\nimport Validator from \"../../utils/validator\";\nimport * as moment from 'moment';\nimport { domainServer } from \"../../utils/config\";\nimport axios from \"axios\";\nimport validator from 'validator';\nimport Network from \"../../Service/Network\";\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast\";\nimport _ from 'lodash';\nconst api = new Network();\nexport default class AddCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangePhone = e => {\n      if (e) {\n        if (e.phone) {\n          this.setState({\n            emailSelected: { ...e,\n              label: e.email\n            },\n            phoneSelected: { ...e\n            },\n            email: e.email,\n            name: e.name,\n            phone: e.phone\n          });\n        }\n      }\n    };\n\n    this.handleInputChangePhone = phone => {\n      if (phone !== '') {\n        const response = api.get(`/api/admin/search/phone/candidate?phone=${phone}`);\n        response.then(result => {\n          const candidates = _.map(result.data.candidate, candidate => {\n            return { ...candidate,\n              value: candidate.id,\n              label: candidate.phone\n            };\n          });\n\n          this.setState({\n            phoneSelected: {\n              value: phone,\n              label: phone\n            },\n            phone: phone,\n            candidatesPhone: candidates\n          });\n        });\n      }\n    };\n\n    this.handleOnChangeEmail = e => {\n      if (e) {\n        if (e.email) {\n          this.setState({\n            phoneSelected: { ...e,\n              label: e.phone\n            },\n            emailSelected: { ...e,\n              label: e.email\n            },\n            email: e.email,\n            name: e.name,\n            phone: e.phone\n          });\n        }\n      }\n    };\n\n    this.handleInputChangeEmail = email => {\n      if (email !== '') {\n        const response = api.get(`/api/admin/candidate/user?email=${email}`);\n        response.then(result => {\n          const candidates = _.map(result.data.candidate, candidate => {\n            return { ...candidate,\n              value: candidate.id,\n              label: candidate.email\n            };\n          });\n\n          this.setState({\n            emailSelected: {\n              value: email,\n              label: email\n            },\n            email: email,\n            candidates: candidates\n          });\n        });\n      }\n    };\n\n    this.defaultState = () => {\n      this.setState({\n        name: '',\n        position: '',\n        clientName: '',\n        phone: '',\n        email: '',\n        location: '',\n        approachDate: moment().format(\"YYYY-MM-DD\"),\n        linkCv: '',\n        nameJob: '',\n        noteApproach: '',\n        laneId: '',\n        jobSelected: {},\n        laneSelected: {},\n        errors: {}\n      });\n    };\n\n    this.removeError = key => {\n      const {\n        errors\n      } = this.state;\n      delete errors[key];\n      this.setState({\n        errors: errors\n      });\n    };\n\n    this.createCard = e => {\n      e.preventDefault();\n      const data = this.state;\n      const errors = this.validator.validate(data);\n\n      if (!this.props.isAddCardNoColumn) {\n        delete data['laneId'];\n        delete errors['laneId'];\n      }\n\n      this.setState({\n        errors: errors\n      });\n\n      if (this.isEmpty(errors)) {\n        delete data['jobSelected'];\n        delete data['laneSelected'];\n        delete data['errors'];\n        delete data['candidates'];\n        delete data['emailSelected'];\n        delete data['phoneSelected'];\n        delete data['candidatesPhone'];\n        this.props.createCardToLane(data);\n        this.defaultState();\n      }\n    };\n\n    this.state = {\n      name: '',\n      position: '',\n      clientName: '',\n      phone: '',\n      email: '',\n      location: '',\n      approachDate: moment().format(\"YYYY-MM-DD\"),\n      linkCv: '',\n      nameJob: '',\n      idJob: '',\n      noteApproach: '',\n      laneId: '',\n      candidates: [],\n      candidatesPhone: [],\n      jobSelected: {},\n      emailSelected: {},\n      laneSelected: {},\n      phoneSelected: {},\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleOnChangeJob = this.handleOnChangeJob.bind(this);\n    this.handleOnChangeLane = this.handleOnChangeLane.bind(this);\n    this.onChangeUploadHandler = this.onChangeUploadHandler.bind(this);\n    this.validator = new Validator(rulesCreateNewCard);\n  }\n\n  handleInputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n\n    if (name === 'email') {\n      const checkEmail = validator.isEmail(value);\n\n      if (!checkEmail) {\n        const errors = this.state.errors;\n        errors[name] = \"not valid\";\n        this.setState({\n          errors\n        });\n      } else {\n        this.removeError(name);\n      }\n    } else if (name === 'phone') {\n      const checkPhone = validator.isMobilePhone(value, ['vi-VN']);\n\n      if (!checkPhone) {\n        const errors = this.state.errors;\n        errors[name] = \"not valid\";\n        this.setState({\n          errors\n        });\n      } else {\n        this.removeError(name);\n      }\n    } else {\n      this.removeError(name);\n    }\n  }\n\n  handleOnChangeLane(e) {\n    this.setState({\n      laneSelected: e,\n      laneId: e.value\n    });\n    this.removeError('laneId');\n  }\n\n  handleOnChangeJob(e) {\n    this.setState({\n      clientName: e.clientName,\n      location: e.locationName,\n      jobSelected: e,\n      nameJob: e.value,\n      idJob: e.id\n    });\n    this.removeError('nameJob');\n  }\n\n  isEmpty(obj) {\n    // check obj empty\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  async onChangeUploadHandler(event) {\n    const {\n      name,\n      nameJob,\n      idJob\n    } = this.state;\n\n    if (name === '' || nameJob === '') {\n      toast( /*#__PURE__*/React.createElement(CustomToast, {\n        title: \"You need to fill in all the information before uploading\",\n        type: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }), {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3000,\n        className: \"toast_login\",\n        closeButton: false,\n        hideProgressBar: true,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n        transition: Zoom\n      });\n    } else {\n      try {\n        let file_size = event.target.files[0].size; // console.log(file_size)\n\n        if (file_size > 3145728) {\n          toast.error(\"Image file size too big!\", {\n            position: toast.POSITION.BOTTOM_RIGHT\n          });\n          return false;\n        }\n\n        var formData = new FormData();\n        formData.append(\"file\", event.target.files[0]);\n        formData.append(\"nameFile\", `${name} ${nameJob}`);\n        formData.append(\"idJob\", `${idJob}`);\n        const request_header = api.getHeaderUpload();\n        const request_server = api.domain;\n        var self = this;\n        const config = {\n          onUploadProgress: function (progressEvent) {\n            var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          }\n        };\n        config.headers = request_header.headers;\n        axios.post(request_server + \"/api/cards/upload/cv\", formData, config).then(res => {\n          if (res) {\n            const fileName = `${res.data.fileName}`;\n            self.setState({\n              linkCv: fileName\n            });\n          } else {\n            toast.error(\"Something went wrong please try again later!\", {\n              position: toast.POSITION.BOTTOM_RIGHT\n            });\n          }\n        }).catch(err => {\n          toast.error(\"Something went wrong please try again later!\", {\n            position: toast.POSITION.BOTTOM_RIGHT\n          });\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      isAddCardNoColumn,\n      lanes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      show: this.props.show,\n      onHide: this.props.onHide,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, \"Add card\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      closeOnClick: true,\n      autoClose: 1000,\n      rtl: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body card-body-update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }\n    }, \"Name \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.name,\n      type: \"text\",\n      onChange: this.handleInputChange.bind(this),\n      name: \"name\",\n      className: errors.name ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    })), isAddCardNoColumn ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, \"Name column \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      className: errors.laneId ? 'invalid-selected' : '',\n      options: lanes,\n      value: this.props.jobSelected,\n      onChange: this.handleOnChangeLane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Name job \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"option\",\n      className: errors.nameJob ? 'invalid-selected' : '',\n      options: this.props.jobs,\n      value: this.props.jobSelected,\n      onChange: this.handleOnChangeJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, \"Location \"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      value: this.state.location,\n      type: \"text\",\n      onChange: this.handleInputChange.bind(this),\n      name: \"location\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }, \"Client Name \"), /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      type: \"text\",\n      value: this.state.clientName,\n      onChange: this.handleInputChange.bind(this),\n      name: \"clientName\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }, \"Email \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(CreatableSelect, {\n      formatCreateLabel: () => `${this.state.email ? this.state.email : ''}`,\n      name: \"option\",\n      className: errors.email ? 'invalid-selected' : '',\n      options: this.state.candidates,\n      isClearable: true,\n      onInputChange: this.handleInputChangeEmail,\n      onChange: this.handleOnChangeEmail,\n      value: this.state.emailSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, \"Phone \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(CreatableSelect, {\n      formatCreateLabel: () => `${this.state.phone ? this.state.phone : ''}`,\n      name: \"option\",\n      className: errors.phone ? 'invalid-selected' : '',\n      options: this.state.candidatesPhone,\n      isClearable: true,\n      onInputChange: this.handleInputChangePhone,\n      onChange: this.handleOnChangePhone,\n      value: this.state.phoneSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, \"Approach Date \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      defaultValue: this.state.approachDate,\n      onChange: this.handleInputChange.bind(this),\n      name: \"approachDate\",\n      className: errors.approachDate ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter approachDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }\n    }, \"Position\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInputChange.bind(this),\n      name: \"position\",\n      className: errors.position ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }, \"Link cv \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.linkCv,\n      onChange: this.handleInputChange.bind(this),\n      name: \"linkCv\",\n      className: errors.linkCv ? \"form-control is-invalid\" : \"form-control\",\n      placeholder: \"Enter link or import cv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"uploadCV\",\n      className: \"custom-label-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append custom-div-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 75\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-cloud-upload-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 110\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChangeUploadHandler,\n      id: \"uploadCV\",\n      type: \"file\",\n      className: \"form-control mb-2 mr-sm-2\",\n      style: {\n        display: 'none'\n      },\n      placeholder: \"Jane Doe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 153\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleTextarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }\n    }, \"Approach Point \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"noteApproach\",\n      onChange: this.handleInputChange,\n      className: errors.noteApproach ? \"form-control is-invalid\" : \"form-control\",\n      rows: 3,\n      defaultValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer add-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-primary mr-2\",\n      onClick: this.createCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-secondary\",\n      onClick: this.props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, \"Cancel\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Dnd/AddCard.js"],"names":["React","Component","Modal","Select","CreatableSelect","rulesCreateNewCard","Validator","moment","domainServer","axios","validator","Network","ToastContainer","toast","Zoom","CustomToast","_","api","AddCard","constructor","props","handleOnChangePhone","e","phone","setState","emailSelected","label","email","phoneSelected","name","handleInputChangePhone","response","get","then","result","candidates","map","data","candidate","value","id","candidatesPhone","handleOnChangeEmail","handleInputChangeEmail","defaultState","position","clientName","location","approachDate","format","linkCv","nameJob","noteApproach","laneId","jobSelected","laneSelected","errors","removeError","key","state","createCard","preventDefault","validate","isAddCardNoColumn","isEmpty","createCardToLane","idJob","handleInputChange","bind","handleOnChangeJob","handleOnChangeLane","onChangeUploadHandler","target","checkEmail","isEmail","checkPhone","isMobilePhone","locationName","obj","Object","keys","length","event","POSITION","TOP_CENTER","autoClose","className","closeButton","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","file_size","files","size","error","BOTTOM_RIGHT","formData","FormData","append","request_header","getHeaderUpload","request_server","domain","self","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","headers","post","res","fileName","catch","err","console","log","render","lanes","show","onHide","color","jobs","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport CreatableSelect from 'react-select/creatable';\nimport { rulesCreateNewCard } from \"../../utils/rule\";\nimport Validator from \"../../utils/validator\";\nimport * as moment from 'moment'\nimport { domainServer } from \"../../utils/config\";\nimport axios from \"axios\";\nimport validator from 'validator'\nimport Network from \"../../Service/Network\";\nimport { ToastContainer, toast, Zoom } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast\";\nimport _ from 'lodash'\n\nconst api = new Network();\nexport default class AddCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      position: '',\n      clientName: '',\n      phone: '',\n      email: '',\n      location: '',\n      approachDate: moment().format(\"YYYY-MM-DD\"),\n      linkCv: '',\n      nameJob: '',\n      idJob: '',\n      noteApproach: '',\n      laneId: '',\n      candidates: [],\n      candidatesPhone: [],\n      jobSelected: {},\n      emailSelected: {},\n      laneSelected: {},\n      phoneSelected: {},\n      errors: {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleOnChangeJob = this.handleOnChangeJob.bind(this)\n    this.handleOnChangeLane = this.handleOnChangeLane.bind(this)\n    this.onChangeUploadHandler = this.onChangeUploadHandler.bind(this);\n    this.validator = new Validator(rulesCreateNewCard);\n  }\n\n  handleOnChangePhone = (e) => {\n    if (e) {\n      if (e.phone) {\n        this.setState({\n          emailSelected: {\n            ...e,\n            label: e.email\n          },\n          phoneSelected: {\n            ...e\n          },\n          email: e.email,\n          name: e.name,\n          phone: e.phone\n        })\n      }\n    }\n  }\n\n  handleInputChangePhone = (phone) => {\n    if (phone !== '') {\n      const response = api.get(`/api/admin/search/phone/candidate?phone=${phone}`)\n      response.then((result) => {\n        const candidates = _.map(result.data.candidate, candidate => {\n          return {\n            ...candidate,\n            value: candidate.id,\n            label: candidate.phone\n          }\n        });\n        this.setState({\n          phoneSelected: {\n            value: phone,\n            label: phone\n          },\n          phone: phone,\n          candidatesPhone: candidates,\n        })\n      })\n    }\n  }\n\n  handleOnChangeEmail = (e) => {\n    if (e) {\n      if (e.email) {\n        this.setState({\n          phoneSelected: {\n            ...e,\n            label: e.phone\n          },\n          emailSelected: {\n            ...e,\n            label: e.email\n          },\n          email: e.email,\n          name: e.name,\n          phone: e.phone\n        })\n      }\n    }\n  }\n\n  handleInputChangeEmail = (email) => {\n    if (email !== '') {\n      const response = api.get(`/api/admin/candidate/user?email=${email}`)\n      response.then((result) => {\n        const candidates = _.map(result.data.candidate, candidate => {\n          return {\n            ...candidate,\n            value: candidate.id,\n            label: candidate.email\n          }\n        });\n        this.setState({\n          emailSelected: {\n            value: email,\n            label: email\n          },\n          email: email,\n          candidates: candidates,\n        })\n      })\n    }\n  }\n\n  defaultState = () => {\n    this.setState({\n      name: '',\n      position: '',\n      clientName: '',\n      phone: '',\n      email: '',\n      location: '',\n      approachDate: moment().format(\"YYYY-MM-DD\"),\n      linkCv: '',\n      nameJob: '',\n      noteApproach: '',\n      laneId: '',\n      jobSelected: {},\n      laneSelected: {},\n      errors: {}\n    })\n  }\n\n  handleInputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n    if (name === 'email') {\n      const checkEmail = validator.isEmail(value);\n      if (!checkEmail) {\n        const errors = this.state.errors;\n        errors[name] = \"not valid\";\n        this.setState({\n          errors\n        })\n      } else {\n        this.removeError(name)\n      }\n    } else if (name === 'phone') {\n      const checkPhone = validator.isMobilePhone(value, ['vi-VN'])\n      if (!checkPhone) {\n        const errors = this.state.errors;\n        errors[name] = \"not valid\";\n        this.setState({\n          errors\n        })\n      } else {\n        this.removeError(name)\n      }\n\n    } else {\n      this.removeError(name)\n    }\n\n  }\n\n  removeError = (key) => {\n    const { errors } = this.state;\n    delete errors[key];\n    this.setState({\n      errors: errors\n    })\n  }\n\n\n  handleOnChangeLane(e) {\n    this.setState({\n      laneSelected: e,\n      laneId: e.value\n    });\n    this.removeError('laneId')\n  }\n\n  handleOnChangeJob(e) {\n    this.setState({\n      clientName: e.clientName,\n      location: e.locationName,\n      jobSelected: e,\n      nameJob: e.value,\n      idJob: e.id\n    });\n\n    this.removeError('nameJob')\n\n  }\n\n  isEmpty(obj) {\n    // check obj empty\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n\n  createCard = (e) => {\n    e.preventDefault();\n    const data = this.state;\n    const errors = this.validator.validate(data);\n    if (!this.props.isAddCardNoColumn) {\n      delete data['laneId']\n      delete errors['laneId']\n    }\n    this.setState({\n      errors: errors,\n    });\n\n    if (this.isEmpty(errors)) {\n      delete data['jobSelected'];\n      delete data['laneSelected'];\n      delete data['errors']\n      delete data['candidates']\n      delete data['emailSelected']\n      delete data['phoneSelected']\n      delete data['candidatesPhone']\n      this.props.createCardToLane(data);\n      this.defaultState();\n    }\n  }\n\n\n  async onChangeUploadHandler(event) {\n    const { name, nameJob , idJob} = this.state;\n    if (name === '' || nameJob === '') {\n\n      toast(<CustomToast title={\"You need to fill in all the information before uploading\"} type={\"error\"} />, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 3000,\n        className: \"toast_login\",\n        closeButton: false,\n        hideProgressBar: true,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n        transition: Zoom,\n      });\n    } else {\n      try {\n        let file_size = event.target.files[0].size;\n        // console.log(file_size)\n        if (file_size > 3145728) {\n          toast.error(\"Image file size too big!\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          return false;\n        }\n        var formData = new FormData();\n        formData.append(\"file\", event.target.files[0]);\n        formData.append(\"nameFile\", `${name} ${nameJob}`)\n        formData.append(\"idJob\", `${idJob}`)\n\n        const request_header = api.getHeaderUpload();\n        const request_server = api.domain;\n        var self = this;\n        const config = {\n          onUploadProgress: function (progressEvent) {\n            var percentCompleted = Math.round(\n              (progressEvent.loaded * 100) / progressEvent.total\n            );\n          },\n        };\n        config.headers = request_header.headers;\n        axios\n          .post(request_server + \"/api/cards/upload/cv\", formData, config)\n          .then((res) => {\n            if (res) {\n              const fileName = `${res.data.fileName}`;\n              self.setState({\n                linkCv: fileName\n              })\n            } else {\n              toast.error(\"Something went wrong please try again later!\", {\n                position: toast.POSITION.BOTTOM_RIGHT,\n              });\n            }\n          })\n          .catch((err) => {\n            toast.error(\"Something went wrong please try again later!\", {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          });\n      } catch (e) {\n        console.log(e);\n      }\n\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { isAddCardNoColumn, lanes } = this.props;\n    return (\n      <Modal size=\"lg\" show={this.props.show} onHide={this.props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Add card</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ToastContainer closeOnClick autoClose={1000} rtl={false} />\n          <form className=\"form\">\n            <div className=\"card-body card-body-update\">\n              <div className=\"form-group\">\n                <label>Name </label>\n                <span style={{ color: \"red\" }}>*</span>\n                <input value={this.state.name} type=\"text\" onChange={this.handleInputChange.bind(this)} name=\"name\" className={\n                  errors.name\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                  placeholder=\"Enter name\" />\n              </div>\n\n              {\n                isAddCardNoColumn ? (\n                  <div className=\"form-group\">\n                    <label>Name column </label>\n                    <span style={{ color: \"red\" }}>*</span>\n                    <Select\n                      name=\"option\"\n                      className={errors.laneId ? 'invalid-selected' : ''}\n                      options={lanes}\n                      value={this.props.jobSelected}\n                      onChange={this.handleOnChangeLane}\n                    />\n                  </div>\n                ) : null\n              }\n\n\n              <div className=\"form-group\">\n                <label>Name job </label>\n                <span style={{ color: \"red\" }}>*</span>\n                <Select\n                  name=\"option\"\n                  className={errors.nameJob ? 'invalid-selected' : ''}\n                  options={this.props.jobs}\n                  value={this.props.jobSelected}\n                  onChange={this.handleOnChangeJob}\n                />\n              </div>\n\n              <div className=\"form-group row\">\n                <div className=\"col-lg-6\">\n                  <label>Location </label>\n                  <input disabled value={this.state.location} type=\"text\" onChange={this.handleInputChange.bind(this)} name=\"location\" className=\"form-control\" />\n                </div>\n                <div className=\"col-lg-6\">\n                  <label>Client Name </label>\n                  <input disabled type=\"text\" value={this.state.clientName} onChange={this.handleInputChange.bind(this)} name=\"clientName\" className=\"form-control\" />\n                </div>\n              </div>\n\n              <div className=\"form-group row\">\n                <div className=\"col-lg-12\">\n                  <label>Email </label>\n                  <span style={{ color: \"red\" }}>*</span>\n                  <CreatableSelect\n                    formatCreateLabel={() => `${this.state.email ? this.state.email : ''}`}\n                    name=\"option\"\n                    className={errors.email ? 'invalid-selected' : ''}\n                    options={this.state.candidates}\n                    isClearable\n                    onInputChange={this.handleInputChangeEmail}\n                    onChange={this.handleOnChangeEmail}\n                    value={this.state.emailSelected}\n\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group row\">\n                <div className=\"col-lg-6\">\n                  <label>Phone </label>\n                  <span style={{ color: \"red\" }}>*</span>\n                  <CreatableSelect\n                    formatCreateLabel={() => `${this.state.phone ? this.state.phone : ''}`}\n                    name=\"option\"\n                    className={errors.phone ? 'invalid-selected' : ''}\n                    options={this.state.candidatesPhone}\n                    isClearable\n                    onInputChange={this.handleInputChangePhone}\n                    onChange={this.handleOnChangePhone}\n                    value={this.state.phoneSelected}\n                  />\n\n\n                </div>\n                <div className=\"col-lg-6\">\n                  <label>Approach Date </label>\n                  <input type=\"date\" defaultValue={this.state.approachDate} onChange={this.handleInputChange.bind(this)} name=\"approachDate\" className={\n                    errors.approachDate\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                    placeholder=\"Enter approachDate\" />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Position</label>\n                <input type=\"text\" onChange={this.handleInputChange.bind(this)} name=\"position\" className={\n                  errors.position\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                }\n                  placeholder=\"Enter position\" />\n              </div>\n              <div className=\"form-group\">\n                <label>Link cv </label>\n                <div className=\"input-group\">\n                  <input type=\"text\" value={this.state.linkCv} onChange={this.handleInputChange.bind(this)} name=\"linkCv\" className={\n                    errors.linkCv\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  } placeholder=\"Enter link or import cv\" />\n                  <label htmlFor=\"uploadCV\" className=\"custom-label-upload\">\n                    <div className=\"input-group-append custom-div-upload\"><span className=\"input-group-text\"><i className=\"fas fa-cloud-upload-alt\"></i><input onChange={this.onChangeUploadHandler} id=\"uploadCV\" type=\"file\" className=\"form-control mb-2 mr-sm-2\" style={{ display: 'none' }} placeholder=\"Jane Doe\" /></span></div>\n                  </label>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleTextarea\">Approach Point </label>\n                <span style={{ color: \"red\" }}>*</span>\n                <textarea name=\"noteApproach\" onChange={this.handleInputChange} className={\n                  errors.noteApproach\n                    ? \"form-control is-invalid\"\n                    : \"form-control\"\n                } rows={3} defaultValue={\"\"} />\n              </div>\n            </div>\n            <div className=\"card-footer add-card\">\n              <button type=\"reset\" className=\"btn btn-primary mr-2\" onClick={this.createCard}>Save</button>\n              <button type=\"reset\" className=\"btn btn-secondary\" onClick={this.props.onHide}>Cancel</button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}