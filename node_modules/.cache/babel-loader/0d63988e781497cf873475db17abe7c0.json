{"ast":null,"code":"import { __extends, __read, __spread } from \"tslib\";\nimport AnalyticsEvent from './AnalyticsEvent';\n\nvar UIAnalyticsEvent =\n/** @class */\nfunction (_super) {\n  __extends(UIAnalyticsEvent, _super);\n\n  function UIAnalyticsEvent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.clone = function () {\n      if (_this.hasFired) {\n        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Cannot clone an event after it's been fired.\");\n        }\n\n        return null;\n      }\n\n      var context = __spread(_this.context);\n\n      var handlers = __spread(_this.handlers);\n      /**\n       * A hacky \"deep clone\" of the object. This is limited in that it wont\n       * support functions, regexs, Maps, Sets, etc, but none of those need to\n       * be represented in our payload.\n       */\n\n\n      var payload = JSON.parse(JSON.stringify(_this.payload));\n      return new UIAnalyticsEvent({\n        context: context,\n        handlers: handlers,\n        payload: payload\n      });\n    };\n\n    _this.fire = function (channel) {\n      if (_this.hasFired) {\n        if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n          // eslint-disable-next-line no-console\n          console.warn('Cannot fire an event twice.');\n        }\n\n        return;\n      }\n\n      _this.handlers.forEach(function (handler) {\n        return handler(_this, channel);\n      });\n\n      _this.hasFired = true;\n    };\n\n    _this.context = props.context || [];\n    _this.handlers = props.handlers || [];\n    _this.hasFired = false;\n    return _this;\n  }\n\n  UIAnalyticsEvent.prototype.update = function (updater) {\n    if (this.hasFired) {\n      if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Cannot update an event after it's been fired.\");\n      }\n\n      return this;\n    }\n\n    return _super.prototype.update.call(this, updater);\n  };\n\n  return UIAnalyticsEvent;\n}(AnalyticsEvent);\n\nexport default UIAnalyticsEvent;","map":{"version":3,"sources":["../../../src/events/UIAnalyticsEvent.ts"],"names":[],"mappings":";AAAA,OAAO,cAAP,MAGO,kBAHP;;AAkBA,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAK5C,WAAA,gBAAA,CAAY,KAAZ,EAAwC;AAAxC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAQA,IAAA,KAAA,CAAA,KAAA,GAAQ,YAAA;AACN,UAAI,KAAI,CAAC,QAAT,EAAmB;AACjB,YAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,CAAC,OAAO,CAAC,GAAR,CAAY,EAA1D,EAA8D;AAC5D;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,8CAAb;AACD;;AAED,eAAO,IAAP;AACD;;AAED,UAAM,OAAO,GAAA,QAAA,CAAO,KAAI,CAAC,OAAZ,CAAb;;AACA,UAAM,QAAQ,GAAA,QAAA,CAAO,KAAI,CAAC,QAAZ,CAAd;AAEA;;;;;;;AAKA,UAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,KAAI,CAAC,OAApB,CAAX,CAAhB;AAEA,aAAO,IAAI,gBAAJ,CAAqB;AAAE,QAAA,OAAO,EAAA,OAAT;AAAW,QAAA,QAAQ,EAAA,QAAnB;AAAqB,QAAA,OAAO,EAAA;AAA5B,OAArB,CAAP;AACD,KArBD;;AAuBA,IAAA,KAAA,CAAA,IAAA,GAAO,UAAC,OAAD,EAAiB;AACtB,UAAI,KAAI,CAAC,QAAT,EAAmB;AACjB,YAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,CAAC,OAAO,CAAC,GAAR,CAAY,EAA1D,EAA8D;AAC5D;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,6BAAb;AACD;;AAED;AACD;;AAED,MAAA,KAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,UAAA,OAAA,EAAO;AAAI,eAAA,OAAO,CAAC,KAAD,EAAP,OAAO,CAAP;AAAsB,OAAvD;;AACA,MAAA,KAAI,CAAC,QAAL,GAAgB,IAAhB;AACD,KAZD;;AA5BE,IAAA,KAAI,CAAC,OAAL,GAAe,KAAK,CAAC,OAAN,IAAiB,EAAhC;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,KAAK,CAAC,QAAN,IAAkB,EAAlC;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,KAAhB;;AACD;;AAuCD,EAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UACE,OADF,EAGiE;AAE/D,QAAI,KAAK,QAAT,EAAmB;AACjB,UAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,CAAC,OAAO,CAAC,GAAR,CAAY,EAA1D,EAA8D;AAC5D;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,+CAAb;AACD;;AAED,aAAO,IAAP;AACD;;AAED,WAAO,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,OAAb,CAAP;AACD,GAfD;;AAgBF,SAAA,gBAAA;AAAC,CAlED,CAA8C,cAA9C,CAAA","sourceRoot":"","sourcesContent":["import { __extends, __read, __spread } from \"tslib\";\nimport AnalyticsEvent from './AnalyticsEvent';\nvar UIAnalyticsEvent = /** @class */ (function (_super) {\n    __extends(UIAnalyticsEvent, _super);\n    function UIAnalyticsEvent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.clone = function () {\n            if (_this.hasFired) {\n                if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n                    // eslint-disable-next-line no-console\n                    console.warn(\"Cannot clone an event after it's been fired.\");\n                }\n                return null;\n            }\n            var context = __spread(_this.context);\n            var handlers = __spread(_this.handlers);\n            /**\n             * A hacky \"deep clone\" of the object. This is limited in that it wont\n             * support functions, regexs, Maps, Sets, etc, but none of those need to\n             * be represented in our payload.\n             */\n            var payload = JSON.parse(JSON.stringify(_this.payload));\n            return new UIAnalyticsEvent({ context: context, handlers: handlers, payload: payload });\n        };\n        _this.fire = function (channel) {\n            if (_this.hasFired) {\n                if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n                    // eslint-disable-next-line no-console\n                    console.warn('Cannot fire an event twice.');\n                }\n                return;\n            }\n            _this.handlers.forEach(function (handler) { return handler(_this, channel); });\n            _this.hasFired = true;\n        };\n        _this.context = props.context || [];\n        _this.handlers = props.handlers || [];\n        _this.hasFired = false;\n        return _this;\n    }\n    UIAnalyticsEvent.prototype.update = function (updater) {\n        if (this.hasFired) {\n            if (process.env.NODE_ENV !== 'production' && !process.env.CI) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Cannot update an event after it's been fired.\");\n            }\n            return this;\n        }\n        return _super.prototype.update.call(this, updater);\n    };\n    return UIAnalyticsEvent;\n}(AnalyticsEvent));\nexport default UIAnalyticsEvent;\n//# sourceMappingURL=UIAnalyticsEvent.js.map"]},"metadata":{},"sourceType":"module"}