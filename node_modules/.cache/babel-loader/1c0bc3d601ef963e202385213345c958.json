{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/PreviewCandidate.js\";\nimport React, { Component } from \"react\";\nimport \"rc-pagination/assets/index.css\";\nimport \"./style.css\";\nimport Fbloader from \"../libs/PageLoader/fbloader.js\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport EditPdf from \"../Modal/PreviewPdf/EditPdf\";\nimport Network from \"../../Service/Network\";\nimport { domainServer } from \"../../utils/config\";\nimport PreviewPdf from \"../Modal/PreviewPdf/PreviewPdf\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast.js\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst api = new Network();\n\nclass PreviewCandidate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePreviewPdf = () => {\n      this.setState({\n        isOpenPreviewPdf: !this.state.isOpenPreviewPdf\n      });\n    };\n\n    this.defaultState = () => {\n      this.setState({\n        isLoading: false,\n        candidateJob: {},\n        isOpen: false,\n        data: {\n          address: \"\",\n          objective: \"\",\n          summary: \"\",\n          technology: \"\",\n          experience: \"\",\n          education: \"\",\n          skills: \"\",\n          language: \"\",\n          courses: \"\",\n          projects: \"\",\n          contacts: \"\",\n          positions: \"\"\n        },\n        showEditPdf: false,\n        setIsOpen: false,\n        numPages: 1,\n        pageNumber: 1\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      data: {\n        name: \"\",\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\"\n      },\n      base64: \"\",\n      showEditPdf: false,\n      setIsOpen: false,\n      isOpenPreviewPdf: false,\n      numPages: 1,\n      pageNumber: 1\n    };\n    this.getCandidateJob = this.getCandidateJob.bind(this);\n    this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n    this.toggleShowFormPdf = this.toggleShowFormPdf.bind(this);\n    this.handleInputDataChange = this.handleInputDataChange.bind(this);\n    this.makePdf = this.makePdf.bind(this);\n  }\n\n  async makePdf() {\n    this.toggleShowFormPdf();\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      const data = {\n        candidateId: this.props.candidateId,\n        jobId: this.props.jobId,\n        ...this.state.data\n      };\n      const response = await api.post(`/api/v1/candidate/make/pdf`, data);\n\n      if (response) {\n        this.defaultState();\n        this.getCandidateJob();\n      }\n    } catch (error) {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  onDocumentLoadSuccess({\n    numPages\n  }) {\n    console.log(numPages);\n    this.setState({\n      numPages: numPages\n    });\n  }\n\n  handleInputDataChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    const dataNow = this.state.data;\n    dataNow[name] = value;\n    this.setState({\n      data: dataNow\n    });\n  }\n\n  toggleShowFormPdf() {\n    this.setState({\n      showEditPdf: !this.state.showEditPdf\n    });\n  }\n\n  async previewPdf(candidateJobId) {\n    try {\n      this.setState({\n        isLoading: true\n      });\n      const response = await api.get(`/api/v1/admin/preview/pdf/refine/candidateJob/${candidateJobId}`);\n\n      if (response) {\n        this.setState({\n          base64: response.data.base64,\n          isLoading: false\n        });\n      }\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        isOpenPreviewPdf: false\n      });\n    }\n  }\n\n  async getCandidateJob() {\n    try {\n      const response = await api.get(`/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`);\n\n      if (response) {\n        const data = response.data.candidateJob;\n        const dataUpdateState = {\n          candidateJob: data\n        };\n\n        if (data.dataParserPdf) {\n          const dataState = { ...this.state.data,\n            ...data.dataParserPdf\n          };\n          dataUpdateState.data = dataState;\n        }\n\n        this.setState(dataUpdateState);\n\n        if (data.isRefinePdf && data.parserPdf) {\n          await this.previewPdf(data.id);\n        }\n      }\n    } catch (error) {\n      toast( /*#__PURE__*/React.createElement(CustomToast, {\n        title: \"Does not have permission to read the file !\",\n        type: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }), {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n        className: \"toast_login\",\n        closeButton: false,\n        hideProgressBar: true,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getCandidateJob();\n  }\n\n  render() {\n    const {\n      candidateJob\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `d-flex flex-column flex-row-fluid wrapper ${this.props.className_wrap_broad}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content d-flex flex-column flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Fbloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 35\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subheader py-3 py-lg-8 subheader-transparent\",\n      id: \"kt_subheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(EditPdf, {\n      show: this.state.showEditPdf,\n      onHide: this.toggleShowFormPdf,\n      data: this.state.data,\n      handleInputDataChange: this.handleInputDataChange,\n      makePdf: this.makePdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PreviewPdf, {\n      show: this.state.isOpenPreviewPdf,\n      base64: this.state.base64,\n      onHide: this.togglePreviewPdf.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-baseline flex-wrap mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, \"Preview candidate\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header flex-wrap border-0 pt-6 pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown dropdown-inline mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }), !this.state.candidateJob.isRefinePdf ? /*#__PURE__*/React.createElement(Link, {\n      to: `/refine/candidate/${this.props.candidateId}/job/${this.props.jobId}`,\n      className: \"btn btn-primary font-weight-bolder style-btn-kitin mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, \"Edit Pdf\") : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, this.state.candidateJob.isRefinePdf && this.state.candidateJob.parserPdf ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column align-items-center cursor-open\",\n      onClick: () => {\n        this.togglePreviewPdf();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      className: \"max-h-65px\",\n      src: \"/img/pdf.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"text-dark-75 font-weight-bold mt-5 font-size-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }, `refine-${this.state.candidateJob.Candidate.name}.pdf`)) : /*#__PURE__*/React.createElement(\"embed\", {\n      className: \"preview-pdf\",\n      src: `${domainServer}${this.state.candidateJob.parserPdf}`,\n      type: \"application/pdf\",\n      width: 500,\n      height: 375,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }))))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    className_wrap_broad: state.ui.className_wrap_broad,\n    candidateId: ownProps.match.params.candidateId,\n    jobId: ownProps.match.params.jobId\n  };\n};\n\nexport default connect(mapStateToProps)(PreviewCandidate);","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Table/PreviewCandidate.js"],"names":["React","Component","Fbloader","connect","Link","Document","Page","pdfjs","EditPdf","Network","domainServer","PreviewPdf","ToastContainer","toast","CustomToast","GlobalWorkerOptions","workerSrc","version","api","PreviewCandidate","constructor","props","togglePreviewPdf","setState","isOpenPreviewPdf","state","defaultState","isLoading","candidateJob","isOpen","data","address","objective","summary","technology","experience","education","skills","language","courses","projects","contacts","positions","showEditPdf","setIsOpen","numPages","pageNumber","name","base64","getCandidateJob","bind","onDocumentLoadSuccess","toggleShowFormPdf","handleInputDataChange","makePdf","candidateId","jobId","response","post","error","console","log","e","target","value","dataNow","previewPdf","candidateJobId","get","dataUpdateState","dataParserPdf","dataState","isRefinePdf","parserPdf","id","position","POSITION","BOTTOM_RIGHT","autoClose","className","closeButton","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","componentDidMount","render","className_wrap_broad","Candidate","mapDispatchToProps","dispatch","mapStateToProps","ownProps","ui","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"rc-pagination/assets/index.css\";\nimport \"./style.css\";\nimport Fbloader from \"../libs/PageLoader/fbloader.js\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport EditPdf from \"../Modal/PreviewPdf/EditPdf\";\nimport Network from \"../../Service/Network\";\nimport { domainServer } from \"../../utils/config\";\nimport PreviewPdf from \"../Modal/PreviewPdf/PreviewPdf\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport CustomToast from \"../common/CustomToast.js\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst api = new Network();\n\nclass PreviewCandidate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      data: {\n        name: \"\",\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\",\n      },\n      base64: \"\",\n      showEditPdf: false,\n      setIsOpen: false,\n      isOpenPreviewPdf: false,\n      numPages: 1,\n      pageNumber: 1,\n    };\n    this.getCandidateJob = this.getCandidateJob.bind(this);\n    this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n    this.toggleShowFormPdf = this.toggleShowFormPdf.bind(this);\n    this.handleInputDataChange = this.handleInputDataChange.bind(this);\n    this.makePdf = this.makePdf.bind(this);\n  }\n\n  togglePreviewPdf = () => {\n    this.setState({\n      isOpenPreviewPdf: !this.state.isOpenPreviewPdf,\n    });\n  };\n\n  defaultState = () => {\n    this.setState({\n      isLoading: false,\n      candidateJob: {},\n      isOpen: false,\n      data: {\n        address: \"\",\n        objective: \"\",\n        summary: \"\",\n        technology: \"\",\n        experience: \"\",\n        education: \"\",\n        skills: \"\",\n        language: \"\",\n        courses: \"\",\n        projects: \"\",\n        contacts: \"\",\n        positions: \"\",\n      },\n      showEditPdf: false,\n      setIsOpen: false,\n      numPages: 1,\n      pageNumber: 1,\n    });\n  };\n\n  async makePdf() {\n    this.toggleShowFormPdf();\n    this.setState({\n      isLoading: true,\n    });\n    try {\n      const data = {\n        candidateId: this.props.candidateId,\n        jobId: this.props.jobId,\n        ...this.state.data,\n      };\n      const response = await api.post(`/api/v1/candidate/make/pdf`, data);\n      if (response) {\n        this.defaultState();\n        this.getCandidateJob();\n      }\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  onDocumentLoadSuccess({ numPages }) {\n    console.log(numPages);\n    this.setState({\n      numPages: numPages,\n    });\n  }\n\n  handleInputDataChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    const dataNow = this.state.data;\n    dataNow[name] = value;\n    this.setState({\n      data: dataNow,\n    });\n  }\n  toggleShowFormPdf() {\n    this.setState({\n      showEditPdf: !this.state.showEditPdf,\n    });\n  }\n\n  async previewPdf(candidateJobId) {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      const response = await api.get(\n        `/api/v1/admin/preview/pdf/refine/candidateJob/${candidateJobId}`\n      );\n      if (response) {\n        this.setState({\n          base64: response.data.base64,\n          isLoading: false,\n        });\n      }\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        isOpenPreviewPdf: false,\n      });\n    }\n  }\n\n  async getCandidateJob() {\n    try {\n      const response = await api.get(\n        `/preview/candidate/${this.props.candidateId}/job/${this.props.jobId}`\n      );\n      if (response) {\n        const data = response.data.candidateJob;\n        const dataUpdateState = {\n          candidateJob: data,\n        };\n\n        if (data.dataParserPdf) {\n          const dataState = { ...this.state.data, ...data.dataParserPdf };\n          dataUpdateState.data = dataState;\n        }\n        this.setState(dataUpdateState);\n        if (data.isRefinePdf && data.parserPdf) {\n          await this.previewPdf(data.id);\n        }\n      }\n    } catch (error) {\n      toast(<CustomToast title={\"Does not have permission to read the file !\"} type=\"error\" />, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 3000,\n        className: \"toast_login\",\n        closeButton: false,\n        hideProgressBar: true,\n        newestOnTop: true,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getCandidateJob();\n  }\n\n  render() {\n    const { candidateJob } = this.state;\n    return (\n      <div\n        className={`d-flex flex-column flex-row-fluid wrapper ${this.props.className_wrap_broad}`}\n      >\n        <div className=\"content d-flex flex-column flex-column-fluid\">\n          {this.state.isLoading ? <Fbloader /> : null}\n          <div\n            className=\"subheader py-3 py-lg-8 subheader-transparent\"\n            id=\"kt_subheader\"\n          >\n            <ToastContainer></ToastContainer>\n            <EditPdf\n              show={this.state.showEditPdf}\n              onHide={this.toggleShowFormPdf}\n              data={this.state.data}\n              handleInputDataChange={this.handleInputDataChange}\n              makePdf={this.makePdf}\n            />\n            <PreviewPdf\n              show={this.state.isOpenPreviewPdf}\n              base64={this.state.base64}\n              onHide={this.togglePreviewPdf.bind(this)}\n            />\n            <div className=\"container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\n              <div className=\"d-flex align-items-center mr-1\">\n                <div className=\"d-flex align-items-baseline flex-wrap mr-5\">\n                  <ul className=\"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold my-2 p-0\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to=\"/\" className=\"text-dark\">\n                        Dashboard\n                      </Link>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <div className=\"text-dark\">Preview candidate</div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"d-flex align-items-center flex-wrap\"></div>\n            </div>\n          </div>\n          <div className=\"d-flex flex-column-fluid\">\n            <div className=\"container\">\n              <div className=\"card card-custom\">\n                <div className=\"card-header flex-wrap border-0 pt-6 pb-0\">\n                  <div className=\"card-title\">\n                    {/* <h3 className=\"card-label\">\n                      List client\n                      \n                    </h3> */}\n                  </div>\n                  <div className=\"card-toolbar\">\n                    <div className=\"dropdown dropdown-inline mr-2\"></div>\n\n                    {!this.state.candidateJob.isRefinePdf ? (\n                      <Link\n                        to={`/refine/candidate/${this.props.candidateId}/job/${this.props.jobId}`}\n                        className=\"btn btn-primary font-weight-bolder style-btn-kitin mr-3\"\n                      >\n                        Edit Pdf\n                      </Link>\n                    ) : ''}\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"preview\">\n                    {this.state.candidateJob.isRefinePdf &&\n                      this.state.candidateJob.parserPdf ? (\n                        <div\n                          className=\"d-flex flex-column align-items-center cursor-open\"\n                          onClick={() => {\n                            this.togglePreviewPdf();\n                          }}\n                        >\n                          <img alt=\"\" className=\"max-h-65px\" src=\"/img/pdf.svg\" />\n                          <a className=\"text-dark-75 font-weight-bold mt-5 font-size-lg\">{`refine-${this.state.candidateJob.Candidate.name}.pdf`}</a>\n                        </div>\n                      ) : (\n                        <embed\n                          className=\"preview-pdf\"\n                          src={`${domainServer}${this.state.candidateJob.parserPdf}`}\n                          type=\"application/pdf\"\n                          width={500}\n                          height={375}\n                        />\n                      )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    className_wrap_broad: state.ui.className_wrap_broad,\n    candidateId: ownProps.match.params.candidateId,\n    jobId: ownProps.match.params.jobId,\n  };\n};\n\nexport default connect(mapStateToProps)(PreviewCandidate);\n"]},"metadata":{},"sourceType":"module"}