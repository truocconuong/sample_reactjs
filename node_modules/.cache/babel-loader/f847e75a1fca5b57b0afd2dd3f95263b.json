{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/** @jsx jsx */\n\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport rafSchedule from 'raf-schd';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\nimport { bodyStyles, Body as DefaultBody, keylineHeight, wrapperStyles } from '../styled/Content';\nimport Footer from './Footer';\nimport Header from './Header';\n\nfunction getInitialState() {\n  return {\n    showFooterKeyline: false,\n    showHeaderKeyline: false,\n    showContentFocus: false,\n    tabbableElements: []\n  };\n}\n\nfunction mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nvar Content =\n/** @class */\nfunction (_super) {\n  __extends(Content, _super);\n\n  function Content() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.escapeIsHeldDown = false;\n    _this._isMounted = false;\n    _this.scrollContainer = null;\n    _this.state = getInitialState();\n    _this.determineKeylines = rafSchedule(function () {\n      if (!_this.scrollContainer) {\n        return;\n      }\n\n      var _a = _this.scrollContainer,\n          scrollTop = _a.scrollTop,\n          scrollHeight = _a.scrollHeight,\n          clientHeight = _a.clientHeight;\n      var scrollableDistance = scrollHeight - clientHeight;\n      var showHeaderKeyline = scrollTop > keylineHeight;\n      var showFooterKeyline = scrollTop <= scrollableDistance - keylineHeight;\n      var showContentFocus = scrollHeight > clientHeight;\n\n      _this.setState({\n        showHeaderKeyline: showHeaderKeyline,\n        showFooterKeyline: showFooterKeyline,\n        showContentFocus: showContentFocus\n      });\n    });\n\n    _this.getScrollContainer = function (ref) {\n      if (!ref) {\n        return;\n      }\n\n      _this.scrollContainer = ref;\n    };\n\n    _this.handleKeyUp = function () {\n      _this.escapeIsHeldDown = false;\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _a = _this.props,\n          onClose = _a.onClose,\n          shouldCloseOnEscapePress = _a.shouldCloseOnEscapePress,\n          _b = _a.stackIndex,\n          stackIndex = _b === void 0 ? 0 : _b;\n      var isEscapeKeyPressed = event.key === 'Escape'; // avoid consumers accidentally closing multiple modals if they hold escape.\n\n      if (_this.escapeIsHeldDown) {\n        return;\n      }\n\n      if (isEscapeKeyPressed) {\n        _this.escapeIsHeldDown = true;\n      } // only the foremost modal should be interactive.\n\n\n      if (!_this._isMounted || stackIndex > 0) {\n        return;\n      }\n\n      if (isEscapeKeyPressed && shouldCloseOnEscapePress) {\n        onClose(event);\n      }\n    };\n\n    _this.handleStackChange = function (stackIndex) {\n      var onStackChange = _this.props.onStackChange;\n\n      if (onStackChange) {\n        onStackChange(stackIndex);\n      }\n    };\n\n    return _this;\n  }\n\n  Content.prototype.componentDidMount = function () {\n    this._isMounted = true;\n    document.addEventListener('keydown', this.handleKeyDown, false);\n    document.addEventListener('keyup', this.handleKeyUp, false);\n\n    if (this.scrollContainer) {\n      var capturedScrollContainer = this.scrollContainer;\n      window.addEventListener('resize', this.determineKeylines, false);\n      capturedScrollContainer.addEventListener('scroll', this.determineKeylines, false);\n      this.determineKeylines();\n    }\n    /* eslint-disable no-console */\n    // Check for deprecated props\n\n\n    if (this.props.header) {\n      console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the header prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    }\n\n    if (this.props.footer) {\n      console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the footer prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    }\n\n    if (this.props.body) {\n      console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the body prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n    } // Check that custom body components have used ForwardRef to attach to a DOM element\n\n\n    if (this.props.components.Body) {\n      if (!(this.scrollContainer instanceof HTMLElement)) {\n        console.warn('@atlaskit/modal-dialog: Warning - Ref must attach to a DOM element; check you are using forwardRef and attaching the ref to an appropriate element. Check the examples for more details.');\n      }\n    }\n    /* eslint-enable no-console */\n\n  };\n\n  Content.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var stackIndex = this.props.stackIndex; // update focus scope and let consumer know when stack index has changed\n\n    if (nextProps.stackIndex && nextProps.stackIndex !== stackIndex) {\n      this.handleStackChange(nextProps.stackIndex);\n    }\n  };\n\n  Content.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n    document.removeEventListener('keyup', this.handleKeyUp, false);\n\n    if (this.scrollContainer) {\n      var capturedScrollContainer = this.scrollContainer;\n      window.removeEventListener('resize', this.determineKeylines, false);\n      capturedScrollContainer.removeEventListener('scroll', this.determineKeylines, false);\n    }\n  };\n\n  Content.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        actions = _a.actions,\n        appearance = _a.appearance,\n        DeprecatedBody = _a.body,\n        children = _a.children,\n        components = _a.components,\n        footer = _a.footer,\n        header = _a.header,\n        heading = _a.heading,\n        isChromeless = _a.isChromeless,\n        isHeadingMultiline = _a.isHeadingMultiline,\n        onClose = _a.onClose,\n        shouldScroll = _a.shouldScroll,\n        testId = _a.testId,\n        headingId = _a.headingId;\n    var _b = this.state,\n        showFooterKeyline = _b.showFooterKeyline,\n        showHeaderKeyline = _b.showHeaderKeyline,\n        showContentFocus = _b.showContentFocus;\n    var _c = components.Container,\n        Container = _c === void 0 ? 'div' : _c,\n        CustomBody = components.Body;\n    var Body = CustomBody || DeprecatedBody || DefaultBody;\n    return jsx(Container, {\n      css: wrapperStyles,\n      \"data-testid\": testId\n    }, isChromeless ? children : jsx(React.Fragment, null, jsx(Header, {\n      id: headingId,\n      appearance: appearance,\n      component: components.Header ? components.Header : header,\n      heading: heading,\n      onClose: onClose,\n      isHeadingMultiline: isHeadingMultiline,\n      showKeyline: showHeaderKeyline,\n      testId: testId\n    }), this.scrollContainer instanceof HTMLElement ? jsx(TouchScrollable, null, function (touchRef) {\n      return jsx(Body, __assign({\n        tabIndex: showContentFocus ? 0 : undefined,\n        css: bodyStyles(shouldScroll)\n      }, !Body.hasOwnProperty('styledComponentId') ? {\n        ref: mergeRefs([touchRef, _this.getScrollContainer])\n      } : {\n        innerRef: mergeRefs([touchRef, _this.getScrollContainer])\n      }), children);\n    }) : jsx(Body, __assign({\n      tabIndex: showContentFocus ? 0 : undefined,\n      css: bodyStyles(shouldScroll)\n    }, !Body.hasOwnProperty('styledComponentId') ? {\n      ref: this.getScrollContainer\n    } : {\n      innerRef: this.getScrollContainer\n    }), children), jsx(Footer, {\n      actions: actions,\n      appearance: appearance,\n      component: components.Footer ? components.Footer : footer,\n      onClose: onClose,\n      showKeyline: showFooterKeyline\n    })), jsx(ScrollLock, null));\n  };\n\n  Content.defaultProps = {\n    autoFocus: false,\n    components: {},\n    isChromeless: false,\n    stackIndex: 0,\n    isHeadingMultiline: true\n  };\n  return Content;\n}(React.Component);\n\nexport default Content;","map":{"version":3,"sources":["../../../src/components/Content.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\n/** @jsx jsx */\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport rafSchedule from 'raf-schd';\nimport ScrollLock, { TouchScrollable } from 'react-scrolllock';\nimport { bodyStyles, Body as DefaultBody, keylineHeight, wrapperStyles, } from '../styled/Content';\nimport Footer from './Footer';\nimport Header from './Header';\nfunction getInitialState() {\n    return {\n        showFooterKeyline: false,\n        showHeaderKeyline: false,\n        showContentFocus: false,\n        tabbableElements: [],\n    };\n}\nfunction mergeRefs(refs) {\n    return function (value) {\n        refs.forEach(function (ref) {\n            if (typeof ref === 'function') {\n                ref(value);\n            }\n            else if (ref != null) {\n                ref.current = value;\n            }\n        });\n    };\n}\nvar Content = /** @class */ (function (_super) {\n    __extends(Content, _super);\n    function Content() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.escapeIsHeldDown = false;\n        _this._isMounted = false;\n        _this.scrollContainer = null;\n        _this.state = getInitialState();\n        _this.determineKeylines = rafSchedule(function () {\n            if (!_this.scrollContainer) {\n                return;\n            }\n            var _a = _this.scrollContainer, scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n            var scrollableDistance = scrollHeight - clientHeight;\n            var showHeaderKeyline = scrollTop > keylineHeight;\n            var showFooterKeyline = scrollTop <= scrollableDistance - keylineHeight;\n            var showContentFocus = scrollHeight > clientHeight;\n            _this.setState({\n                showHeaderKeyline: showHeaderKeyline,\n                showFooterKeyline: showFooterKeyline,\n                showContentFocus: showContentFocus,\n            });\n        });\n        _this.getScrollContainer = function (ref) {\n            if (!ref) {\n                return;\n            }\n            _this.scrollContainer = ref;\n        };\n        _this.handleKeyUp = function () {\n            _this.escapeIsHeldDown = false;\n        };\n        _this.handleKeyDown = function (event) {\n            var _a = _this.props, onClose = _a.onClose, shouldCloseOnEscapePress = _a.shouldCloseOnEscapePress, _b = _a.stackIndex, stackIndex = _b === void 0 ? 0 : _b;\n            var isEscapeKeyPressed = event.key === 'Escape';\n            // avoid consumers accidentally closing multiple modals if they hold escape.\n            if (_this.escapeIsHeldDown) {\n                return;\n            }\n            if (isEscapeKeyPressed) {\n                _this.escapeIsHeldDown = true;\n            }\n            // only the foremost modal should be interactive.\n            if (!_this._isMounted || stackIndex > 0) {\n                return;\n            }\n            if (isEscapeKeyPressed && shouldCloseOnEscapePress) {\n                onClose(event);\n            }\n        };\n        _this.handleStackChange = function (stackIndex) {\n            var onStackChange = _this.props.onStackChange;\n            if (onStackChange) {\n                onStackChange(stackIndex);\n            }\n        };\n        return _this;\n    }\n    Content.prototype.componentDidMount = function () {\n        this._isMounted = true;\n        document.addEventListener('keydown', this.handleKeyDown, false);\n        document.addEventListener('keyup', this.handleKeyUp, false);\n        if (this.scrollContainer) {\n            var capturedScrollContainer = this.scrollContainer;\n            window.addEventListener('resize', this.determineKeylines, false);\n            capturedScrollContainer.addEventListener('scroll', this.determineKeylines, false);\n            this.determineKeylines();\n        }\n        /* eslint-disable no-console */\n        // Check for deprecated props\n        if (this.props.header) {\n            console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the header prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n        }\n        if (this.props.footer) {\n            console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the footer prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n        }\n        if (this.props.body) {\n            console.warn(\"@atlaskit/modal-dialog: Deprecation warning - Use of the body prop in ModalDialog is deprecated. Please compose your ModalDialog using the 'components' prop instead\");\n        }\n        // Check that custom body components have used ForwardRef to attach to a DOM element\n        if (this.props.components.Body) {\n            if (!(this.scrollContainer instanceof HTMLElement)) {\n                console.warn('@atlaskit/modal-dialog: Warning - Ref must attach to a DOM element; check you are using forwardRef and attaching the ref to an appropriate element. Check the examples for more details.');\n            }\n        }\n        /* eslint-enable no-console */\n    };\n    Content.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n        var stackIndex = this.props.stackIndex;\n        // update focus scope and let consumer know when stack index has changed\n        if (nextProps.stackIndex && nextProps.stackIndex !== stackIndex) {\n            this.handleStackChange(nextProps.stackIndex);\n        }\n    };\n    Content.prototype.componentWillUnmount = function () {\n        this._isMounted = false;\n        document.removeEventListener('keydown', this.handleKeyDown, false);\n        document.removeEventListener('keyup', this.handleKeyUp, false);\n        if (this.scrollContainer) {\n            var capturedScrollContainer = this.scrollContainer;\n            window.removeEventListener('resize', this.determineKeylines, false);\n            capturedScrollContainer.removeEventListener('scroll', this.determineKeylines, false);\n        }\n    };\n    Content.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, actions = _a.actions, appearance = _a.appearance, DeprecatedBody = _a.body, children = _a.children, components = _a.components, footer = _a.footer, header = _a.header, heading = _a.heading, isChromeless = _a.isChromeless, isHeadingMultiline = _a.isHeadingMultiline, onClose = _a.onClose, shouldScroll = _a.shouldScroll, testId = _a.testId, headingId = _a.headingId;\n        var _b = this.state, showFooterKeyline = _b.showFooterKeyline, showHeaderKeyline = _b.showHeaderKeyline, showContentFocus = _b.showContentFocus;\n        var _c = components.Container, Container = _c === void 0 ? 'div' : _c, CustomBody = components.Body;\n        var Body = CustomBody || DeprecatedBody || DefaultBody;\n        return (jsx(Container, { css: wrapperStyles, \"data-testid\": testId },\n            isChromeless ? (children) : (jsx(React.Fragment, null,\n                jsx(Header, { id: headingId, appearance: appearance, component: components.Header ? components.Header : header, heading: heading, onClose: onClose, isHeadingMultiline: isHeadingMultiline, showKeyline: showHeaderKeyline, testId: testId }),\n                this.scrollContainer instanceof HTMLElement ? (jsx(TouchScrollable, null, function (touchRef) { return (jsx(Body, __assign({ tabIndex: showContentFocus ? 0 : undefined, css: bodyStyles(shouldScroll) }, (!Body.hasOwnProperty('styledComponentId')\n                    ? {\n                        ref: mergeRefs([touchRef, _this.getScrollContainer]),\n                    }\n                    : {\n                        innerRef: mergeRefs([\n                            touchRef,\n                            _this.getScrollContainer,\n                        ]),\n                    })), children)); })) : (jsx(Body, __assign({ tabIndex: showContentFocus ? 0 : undefined, css: bodyStyles(shouldScroll) }, (!Body.hasOwnProperty('styledComponentId')\n                    ? {\n                        ref: this.getScrollContainer,\n                    }\n                    : {\n                        innerRef: this.getScrollContainer,\n                    })), children)),\n                jsx(Footer, { actions: actions, appearance: appearance, component: components.Footer ? components.Footer : footer, onClose: onClose, showKeyline: showFooterKeyline }))),\n            jsx(ScrollLock, null)));\n    };\n    Content.defaultProps = {\n        autoFocus: false,\n        components: {},\n        isChromeless: false,\n        stackIndex: 0,\n        isHeadingMultiline: true,\n    };\n    return Content;\n}(React.Component));\nexport default Content;\n//# sourceMappingURL=Content.js.map"]},"metadata":{},"sourceType":"module"}