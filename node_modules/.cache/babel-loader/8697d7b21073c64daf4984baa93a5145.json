{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport React from 'react';\nimport Button from '@atlaskit/button/custom-theme-button';\nimport { ActionItem, Actions, Footer } from '../styled/Content';\n\nvar JustifyShim = function (props) {\n  return React.createElement(\"span\", __assign({}, props));\n};\n\nvar ModalFooter =\n/** @class */\nfunction (_super) {\n  __extends(ModalFooter, _super);\n\n  function ModalFooter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ModalFooter.prototype.render = function () {\n    var _a = this.props,\n        actions = _a.actions,\n        appearance = _a.appearance,\n        component = _a.component,\n        onClose = _a.onClose,\n        showKeyline = _a.showKeyline;\n    var warning = 'You can provide `component` OR `actions`, not both.';\n\n    if (!component && !actions) {\n      return null;\n    }\n\n    if (component && actions) {\n      console.warn(warning); // eslint-disable-line no-console\n\n      return null;\n    }\n\n    if (component) {\n      return React.createElement(component, {\n        appearance: appearance,\n        onClose: onClose,\n        showKeyline: showKeyline\n      });\n    }\n\n    return React.createElement(Footer, {\n      showKeyline: showKeyline\n    }, React.createElement(JustifyShim, null), React.createElement(Actions, null, actions ? actions.map(function (_a, index) {\n      var text = _a.text,\n          rest = __rest(_a, [\"text\"]);\n\n      var variant = index !== 0 ? 'subtle' : appearance || 'primary';\n      return React.createElement(ActionItem, {\n        key: index\n      }, React.createElement(Button, __assign({\n        appearance: variant\n      }, rest), text));\n    }) : null));\n  };\n\n  return ModalFooter;\n}(React.Component);\n\nexport default ModalFooter;","map":{"version":3,"sources":["../../../src/components/Footer.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAP,MAAmB,sCAAnB;AAEA,SAAS,UAAT,EAAqB,OAArB,EAA8B,MAA9B,QAA4C,mBAA5C;;AAGA,IAAM,WAAW,GAAG,UAAC,KAAD,EAAW;AAAK,SAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,CAAA,CAAA;AAAmB,CAAvD;;AAgCA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAzC,WAAA,WAAA,GAAA;;AA0CC;;AAzCC,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,QAAA,EAAA,GAA2D,KAAK,KAAhE;AAAA,QAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,QAAW,UAAU,GAAA,EAAA,CAAA,UAArB;AAAA,QAAuB,SAAS,GAAA,EAAA,CAAA,SAAhC;AAAA,QAAkC,OAAO,GAAA,EAAA,CAAA,OAAzC;AAAA,QAA2C,WAAW,GAAA,EAAA,CAAA,WAAtD;AACN,QAAM,OAAO,GAAG,qDAAhB;;AAEA,QAAI,CAAC,SAAD,IAAc,CAAC,OAAnB,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,QAAI,SAAS,IAAI,OAAjB,EAA0B;AACxB,MAAA,OAAO,CAAC,IAAR,CAAa,OAAb,EADwB,CACD;;AACvB,aAAO,IAAP;AACD;;AACD,QAAI,SAAJ,EAAe;AACb,aAAO,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B;AACpC,QAAA,UAAU,EAAA,UAD0B;AAEpC,QAAA,OAAO,EAAA,OAF6B;AAGpC,QAAA,WAAW,EAAA;AAHyB,OAA/B,CAAP;AAKD;;AAED,WACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,MAAA,WAAW,EAAE;AAAd,KAAP,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,IAAZ,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,IAAR,EACG,OAAO,GACJ,OAAO,CAAC,GAAR,CAAY,UAAC,EAAD,EAAoB,KAApB,EAAyB;AAAtB,UAAA,IAAI,GAAA,EAAA,CAAA,IAAJ;AAAA,UAAS,IAAI,GAAA,MAAA,CAAA,EAAA,EAAf,CAAA,MAAA,CAAe,CAAb;;AACb,UAAM,OAAO,GACX,KAAK,KAAK,CAAV,GAAc,QAAd,GAAyB,UAAU,IAAI,SADzC;AAGA,aACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,QAAA,GAAG,EAAE;AAAN,OAAX,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,QAAA,CAAA;AAAC,QAAA,UAAU,EAAE;AAAb,OAAA,EAA0B,IAA1B,CAAP,EACG,IADH,CADF,CADF;AAOD,KAXD,CADI,GAaJ,IAdN,CAFF,CADF;AAqBD,GAxCD;;AAyCF,SAAA,WAAA;AAAC,CA1CD,CAAyC,KAAK,CAAC,SAA/C,CAAA","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport React from 'react';\nimport Button from '@atlaskit/button/custom-theme-button';\nimport { ActionItem, Actions, Footer } from '../styled/Content';\nvar JustifyShim = function (props) { return React.createElement(\"span\", __assign({}, props)); };\nvar ModalFooter = /** @class */ (function (_super) {\n    __extends(ModalFooter, _super);\n    function ModalFooter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ModalFooter.prototype.render = function () {\n        var _a = this.props, actions = _a.actions, appearance = _a.appearance, component = _a.component, onClose = _a.onClose, showKeyline = _a.showKeyline;\n        var warning = 'You can provide `component` OR `actions`, not both.';\n        if (!component && !actions) {\n            return null;\n        }\n        if (component && actions) {\n            console.warn(warning); // eslint-disable-line no-console\n            return null;\n        }\n        if (component) {\n            return React.createElement(component, {\n                appearance: appearance,\n                onClose: onClose,\n                showKeyline: showKeyline,\n            });\n        }\n        return (React.createElement(Footer, { showKeyline: showKeyline },\n            React.createElement(JustifyShim, null),\n            React.createElement(Actions, null, actions\n                ? actions.map(function (_a, index) {\n                    var text = _a.text, rest = __rest(_a, [\"text\"]);\n                    var variant = index !== 0 ? 'subtle' : appearance || 'primary';\n                    return (React.createElement(ActionItem, { key: index },\n                        React.createElement(Button, __assign({ appearance: variant }, rest), text)));\n                })\n                : null)));\n    };\n    return ModalFooter;\n}(React.Component));\nexport default ModalFooter;\n//# sourceMappingURL=Footer.js.map"]},"metadata":{},"sourceType":"module"}