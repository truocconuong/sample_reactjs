{"ast":null,"code":"// If a generic is used here, props can be inferred never and passed up (even with defaults)\nexport function add(fn, addend) {\n  return function (props) {\n    return fn(props) + addend;\n  };\n}\nexport function subtract(fn, subtrahend) {\n  return function (props) {\n    return fn(props) - subtrahend;\n  };\n}\nexport function multiply(fn, factor) {\n  return function (props) {\n    return fn(props) * factor;\n  };\n}\nexport function divide(fn, divisor) {\n  return function (props) {\n    return fn(props) / divisor;\n  };\n}","map":{"version":3,"sources":["../../../src/utils/math.ts"],"names":[],"mappings":"AAAA;AACA,OAAM,SAAU,GAAV,CAAc,EAAd,EAA2C,MAA3C,EAAyD;AAC7D,SAAO,UAAC,KAAD,EAAY;AAAK,WAAA,EAAE,CAAC,KAAD,CAAF,GAAA,MAAA;AAAkB,GAA1C;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,EAAnB,EAAgD,UAAhD,EAAkE;AACtE,SAAO,UAAC,KAAD,EAAY;AAAK,WAAA,EAAE,CAAC,KAAD,CAAF,GAAA,UAAA;AAAsB,GAA9C;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,EAAnB,EAAgD,MAAhD,EAA8D;AAClE,SAAO,UAAC,KAAD,EAAY;AAAK,WAAA,EAAE,CAAC,KAAD,CAAF,GAAA,MAAA;AAAkB,GAA1C;AACD;AAED,OAAM,SAAU,MAAV,CAAiB,EAAjB,EAA8C,OAA9C,EAA6D;AACjE,SAAO,UAAC,KAAD,EAAY;AAAK,WAAA,EAAE,CAAC,KAAD,CAAF,GAAA,OAAA;AAAmB,GAA3C;AACD","sourceRoot":"","sourcesContent":["// If a generic is used here, props can be inferred never and passed up (even with defaults)\nexport function add(fn, addend) {\n    return function (props) { return fn(props) + addend; };\n}\nexport function subtract(fn, subtrahend) {\n    return function (props) { return fn(props) - subtrahend; };\n}\nexport function multiply(fn, factor) {\n    return function (props) { return fn(props) * factor; };\n}\nexport function divide(fn, divisor) {\n    return function (props) { return fn(props) / divisor; };\n}\n//# sourceMappingURL=math.js.map"]},"metadata":{},"sourceType":"module"}