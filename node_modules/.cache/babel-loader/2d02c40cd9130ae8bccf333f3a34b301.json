{"ast":null,"code":"function abort(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar tabKeyCode = 9;\n\nfunction onKey(event) {\n  // Allowing tab so that a user can move focus away\n  if (event.keyCode === tabKeyCode) {\n    return;\n  }\n\n  abort(event);\n}\n\nvar block = {\n  onMouseDownCapture: abort,\n  onMouseUpCapture: abort,\n  // because we have tabIndex = -1 when disabled,\n  // keyboard events can only occur when there is an overlay\n  onKeyDownCapture: onKey,\n  onKeyUpCapture: onKey,\n  onTouchStartCapture: abort,\n  onTouchEndCapture: abort,\n  onPointerDownCapture: abort,\n  onPointerUpCapture: abort,\n  onClickCapture: abort,\n  // Just smashing the existing onClick for good measure\n  onClick: abort\n};\nvar doNotBlock = {};\nexport default function blockEvents(_a) {\n  var isInteractive = _a.isInteractive;\n  return isInteractive ? doNotBlock : block;\n}","map":{"version":3,"sources":["../../../src/shared/block-events.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,CAAe,KAAf,EAA0C;AACxC,EAAA,KAAK,CAAC,cAAN;AACA,EAAA,KAAK,CAAC,eAAN;AACD;;AAED,IAAM,UAAU,GAAW,CAA3B;;AAEA,SAAS,KAAT,CAAe,KAAf,EAAyC;AACvC;AACA,MAAI,KAAK,CAAC,OAAN,KAAkB,UAAtB,EAAkC;AAChC;AACD;;AACD,EAAA,KAAK,CAAC,KAAD,CAAL;AACD;;AAED,IAAM,KAAK,GAAqC;AAC9C,EAAA,kBAAkB,EAAE,KAD0B;AAE9C,EAAA,gBAAgB,EAAE,KAF4B;AAG9C;AACA;AACA,EAAA,gBAAgB,EAAE,KAL4B;AAM9C,EAAA,cAAc,EAAE,KAN8B;AAO9C,EAAA,mBAAmB,EAAE,KAPyB;AAQ9C,EAAA,iBAAiB,EAAE,KAR2B;AAS9C,EAAA,oBAAoB,EAAE,KATwB;AAU9C,EAAA,kBAAkB,EAAE,KAV0B;AAW9C,EAAA,cAAc,EAAE,KAX8B;AAY9C;AACA,EAAA,OAAO,EAAE;AAbqC,CAAhD;AAgBA,IAAM,UAAU,GAAqC,EAArD;AAEA,eAAc,SAAU,WAAV,CAAsB,EAAtB,EAIb;MAHC,aAAa,GAAA,EAAA,CAAA,a;AAIb,SAAO,aAAa,GAAG,UAAH,GAAgB,KAApC;AACD","sourceRoot":"","sourcesContent":["function abort(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\nvar tabKeyCode = 9;\nfunction onKey(event) {\n    // Allowing tab so that a user can move focus away\n    if (event.keyCode === tabKeyCode) {\n        return;\n    }\n    abort(event);\n}\nvar block = {\n    onMouseDownCapture: abort,\n    onMouseUpCapture: abort,\n    // because we have tabIndex = -1 when disabled,\n    // keyboard events can only occur when there is an overlay\n    onKeyDownCapture: onKey,\n    onKeyUpCapture: onKey,\n    onTouchStartCapture: abort,\n    onTouchEndCapture: abort,\n    onPointerDownCapture: abort,\n    onPointerUpCapture: abort,\n    onClickCapture: abort,\n    // Just smashing the existing onClick for good measure\n    onClick: abort,\n};\nvar doNotBlock = {};\nexport default function blockEvents(_a) {\n    var isInteractive = _a.isInteractive;\n    return isInteractive ? doNotBlock : block;\n}\n//# sourceMappingURL=block-events.js.map"]},"metadata":{},"sourceType":"module"}