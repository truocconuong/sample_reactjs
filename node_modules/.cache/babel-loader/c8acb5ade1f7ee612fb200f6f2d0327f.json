{"ast":null,"code":"import { __assign, __read, __rest } from \"tslib\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\n\nfunction noop() {}\n\nvar isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar ButtonWithMode = React.forwardRef(function ButtonWithMode(_a, ref) {\n  var mode = _a.mode,\n      _b = _a.onMouseDown,\n      providedOnMouseDown = _b === void 0 ? noop : _b,\n      _c = _a.onMouseUp,\n      providedOnMouseUp = _c === void 0 ? noop : _c,\n      rest = __rest(_a, [\"mode\", \"onMouseDown\", \"onMouseUp\"]);\n\n  var appearance = rest.appearance || 'default';\n  var spacing = rest.spacing || 'default';\n  var shouldFitContainer = Boolean(rest.shouldFitContainer);\n  var isSelected = Boolean(rest.isSelected);\n  var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n\n  var _d = __read(useState(false), 2),\n      isActive = _d[0],\n      setIsActive = _d[1]; // Wrap onMouseDown / onMouseUp to manually trigger active state\n  //  in Firefox\n\n\n  var onMouseDown = useCallback(function (event) {\n    providedOnMouseDown(event);\n\n    if (isFirefox) {\n      setIsActive(true);\n    }\n  }, [providedOnMouseDown, setIsActive]);\n  var onMouseUp = useCallback(function (event) {\n    providedOnMouseUp(event);\n\n    if (isFirefox) {\n      setIsActive(false);\n    }\n  }, [providedOnMouseUp, setIsActive]);\n  var buttonCss = useMemo(function () {\n    return getCss({\n      appearance: appearance,\n      spacing: spacing,\n      mode: mode,\n      isSelected: isSelected,\n      shouldFitContainer: shouldFitContainer,\n      isOnlySingleIcon: isOnlySingleIcon\n    });\n  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);\n  return React.createElement(ButtonBase, __assign({}, rest, {\n    ref: ref,\n    buttonCss: buttonCss,\n    \"data-firefox-is-active\": isActive ? true : undefined,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }));\n});\nvar Button = React.memo(React.forwardRef(function Button(props, ref) {\n  return React.createElement(GlobalTheme.Consumer, null, function (_a) {\n    var mode = _a.mode;\n    return React.createElement(ButtonWithMode, __assign({}, props, {\n      ref: ref,\n      mode: mode\n    }));\n  });\n})); // Tools including enzyme rely on components having a display name\n\nButton.displayName = 'Button';\nexport default Button;","map":{"version":3,"sources":["../../src/button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,WAAhB,EAA6B,OAA7B,EAAsC,QAAtC,QAAsD,OAAtD;AAIA,OAAO,WAAP,MAAwB,4BAAxB;AAGA,OAAO,UAAP,MAAuB,sBAAvB;AACA,SAAS,MAAT,QAAuB,cAAvB;AACA,OAAO,mBAAP,MAAgC,kCAAhC;;AAGA,SAAS,IAAT,GAAa,CAAK;;AAElB,IAAM,SAAS,GACb,OAAO,SAAP,KAAqB,WAArB,IACA,SAAS,CAAC,SAAV,CAAoB,WAApB,GAAkC,OAAlC,CAA0C,SAA1C,IAAuD,CAAC,CAF1D;AAUA,IAAM,cAAc,GAAG,KAAK,CAAC,UAAN,CAAiB,SAAS,cAAT,CACtC,EADsC,EAOtC,GAPsC,EAOX;AALzB,MAAA,IAAI,GAAA,EAAA,CAAA,IAAJ;AAAA,MACA,EAAA,GAAA,EAAA,CAAA,WADA;AAAA,MACa,mBAAmB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EADvC;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,SAFA;AAAA,MAEW,iBAAiB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAFnC;AAAA,MAGG,IAAI,GAAA,MAAA,CAAA,EAAA,EAJT,CAAA,MAAA,EAAA,aAAA,EAAA,WAAA,CAIS,CAHP;;AAOF,MAAM,UAAU,GAAe,IAAI,CAAC,UAAL,IAAmB,SAAlD;AACA,MAAM,OAAO,GAAY,IAAI,CAAC,OAAL,IAAgB,SAAzC;AACA,MAAM,kBAAkB,GAAY,OAAO,CAAC,IAAI,CAAC,kBAAN,CAA3C;AACA,MAAM,UAAU,GAAY,OAAO,CAAC,IAAI,CAAC,UAAN,CAAnC;AACA,MAAM,gBAAgB,GAAY,mBAAmB,CAAC,IAAD,CAArD;;AAEM,MAAA,EAAA,GAAA,MAAA,CAA0B,QAAQ,CAAU,KAAV,CAAlC,EAAkD,CAAlD,CAAA;AAAA,MAAC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,MAAW,WAAW,GAAA,EAAA,CAAA,CAAA,CAAtB,CARqB,CAU3B;AACA;;;AACA,MAAM,WAAW,GAAG,WAAW,CAC7B,UAAC,KAAD,EAAqC;AACnC,IAAA,mBAAmB,CAAC,KAAD,CAAnB;;AACA,QAAI,SAAJ,EAAe;AACb,MAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAN4B,EAO7B,CAAC,mBAAD,EAAsB,WAAtB,CAP6B,CAA/B;AAUA,MAAM,SAAS,GAAG,WAAW,CAC3B,UAAC,KAAD,EAAqC;AACnC,IAAA,iBAAiB,CAAC,KAAD,CAAjB;;AACA,QAAI,SAAJ,EAAe;AACb,MAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAN0B,EAO3B,CAAC,iBAAD,EAAoB,WAApB,CAP2B,CAA7B;AAUA,MAAM,SAAS,GAAc,OAAO,CAClC,YAAA;AACE,WAAA,MAAM,CAAC;AACL,MAAA,UAAU,EAAA,UADL;AAEL,MAAA,OAAO,EAAA,OAFF;AAGL,MAAA,IAAI,EAAA,IAHC;AAIL,MAAA,UAAU,EAAA,UAJL;AAKL,MAAA,kBAAkB,EAAA,kBALb;AAML,MAAA,gBAAgB,EAAA;AANX,KAAD,CAAN;AAOE,GAT8B,EAUlC,CACE,UADF,EAEE,OAFF,EAGE,IAHF,EAIE,UAJF,EAKE,kBALF,EAME,gBANF,CAVkC,CAApC;AAoBA,SACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA,EAAA,EACL,IADK,EACD;AACR,IAAA,GAAG,EAAE,GADG;AAER,IAAA,SAAS,EAAE,SAFH;AAEY,8BAGI,QAAQ,GAAG,IAAH,GAAU,SALlC;AAMR,IAAA,WAAW,EAAE,WANL;AAOR,IAAA,SAAS,EAAE;AAPH,GADC,CAAX,CADF;AAYD,CAvEsB,CAAvB;AAyEA,IAAM,MAAM,GAAG,KAAK,CAAC,IAAN,CACb,KAAK,CAAC,UAAN,CAAiB,SAAS,MAAT,CACf,KADe,EAEf,GAFe,EAEY;AAE3B,SACE,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAb,EAAqB,IAArB,EACG,UAAC,EAAD,EAA+B;QAA5B,IAAI,GAAA,EAAA,CAAA,I;AACN,WAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,QAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,IAAI,EAAE;AAAlB,KAAV,CAAf,CAAP;AACD,GAHH,CADF;AAOD,CAXD,CADa,CAAf,C,CAeA;;AACA,MAAM,CAAC,WAAP,GAAqB,QAArB;AAEA,eAAe,MAAf","sourceRoot":"","sourcesContent":["import { __assign, __read, __rest } from \"tslib\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\nfunction noop() { }\nvar isFirefox = typeof navigator !== 'undefined' &&\n    navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar ButtonWithMode = React.forwardRef(function ButtonWithMode(_a, ref) {\n    var mode = _a.mode, _b = _a.onMouseDown, providedOnMouseDown = _b === void 0 ? noop : _b, _c = _a.onMouseUp, providedOnMouseUp = _c === void 0 ? noop : _c, rest = __rest(_a, [\"mode\", \"onMouseDown\", \"onMouseUp\"]);\n    var appearance = rest.appearance || 'default';\n    var spacing = rest.spacing || 'default';\n    var shouldFitContainer = Boolean(rest.shouldFitContainer);\n    var isSelected = Boolean(rest.isSelected);\n    var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n    var _d = __read(useState(false), 2), isActive = _d[0], setIsActive = _d[1];\n    // Wrap onMouseDown / onMouseUp to manually trigger active state\n    //  in Firefox\n    var onMouseDown = useCallback(function (event) {\n        providedOnMouseDown(event);\n        if (isFirefox) {\n            setIsActive(true);\n        }\n    }, [providedOnMouseDown, setIsActive]);\n    var onMouseUp = useCallback(function (event) {\n        providedOnMouseUp(event);\n        if (isFirefox) {\n            setIsActive(false);\n        }\n    }, [providedOnMouseUp, setIsActive]);\n    var buttonCss = useMemo(function () {\n        return getCss({\n            appearance: appearance,\n            spacing: spacing,\n            mode: mode,\n            isSelected: isSelected,\n            shouldFitContainer: shouldFitContainer,\n            isOnlySingleIcon: isOnlySingleIcon,\n        });\n    }, [\n        appearance,\n        spacing,\n        mode,\n        isSelected,\n        shouldFitContainer,\n        isOnlySingleIcon,\n    ]);\n    return (React.createElement(ButtonBase, __assign({}, rest, { ref: ref, buttonCss: buttonCss, \"data-firefox-is-active\": isActive ? true : undefined, onMouseDown: onMouseDown, onMouseUp: onMouseUp })));\n});\nvar Button = React.memo(React.forwardRef(function Button(props, ref) {\n    return (React.createElement(GlobalTheme.Consumer, null, function (_a) {\n        var mode = _a.mode;\n        return React.createElement(ButtonWithMode, __assign({}, props, { ref: ref, mode: mode }));\n    }));\n}));\n// Tools including enzyme rely on components having a display name\nButton.displayName = 'Button';\nexport default Button;\n//# sourceMappingURL=button.js.map"]},"metadata":{},"sourceType":"module"}