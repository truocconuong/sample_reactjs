{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Transition } from 'react-transition-group';\nvar duration = 500;\nvar easing = 'cubic-bezier(0.23, 1, 0.32, 1)'; // easeOutQuint\n\nvar verticalOffset = 16;\nexport var Animation = function (_a) {\n  var hasEntered = _a.in,\n      _b = _a.stackIndex,\n      stackIndex = _b === void 0 ? 0 : _b,\n      onExited = _a.onExited,\n      onEntered = _a.onEntered,\n      children = _a.children;\n  return React.createElement(Transition, {\n    in: hasEntered,\n    timeout: {\n      enter: 0,\n      exit: duration\n    },\n    onExited: onExited,\n    onEntered: onEntered,\n    appear: true\n  }, function (unadjustedStatus) {\n    // when we first render, we want to finish the 'entering' state render\n    // then jump to the 'entered' state as quick as possible.\n    var adjustedStatus = hasEntered && unadjustedStatus === 'exited' ? 'entering' : unadjustedStatus; // Fade styles\n\n    var fadeBaseStyles = {\n      transition: \"opacity \" + duration / 2 + \"ms\",\n      opacity: 1\n    };\n    var fadeTransitionStyles = {\n      entering: {\n        opacity: 0\n      },\n      entered: {},\n      exiting: {\n        opacity: 0\n      },\n      exited: {}\n    }; // Slide styles\n\n    var slideBaseStyles = {\n      transition: \"transform \" + duration + \"ms \" + easing,\n      transform: \"translate3d(0, \" + verticalOffset * 2 + \"px, 0)\"\n    };\n    var slideTransitionStyles = {\n      entering: {},\n      entered: {\n        transform: stackIndex > 0 ? \"translate3d(0, \" + stackIndex * (verticalOffset / 2) + \"px, 0)\" : null\n      },\n      exiting: {\n        transform: \"translate3d(0, -\" + verticalOffset * 2 + \"px, 0)\"\n      },\n      exited: {}\n    };\n    return children({\n      fade: __assign(__assign({}, fadeBaseStyles), fadeTransitionStyles[adjustedStatus]),\n      slide: __assign(__assign({}, slideBaseStyles), slideTransitionStyles[adjustedStatus])\n    });\n  });\n};","map":{"version":3,"sources":["../../../src/components/Animation.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,UAAT,QAA2B,wBAA3B;AAEA,IAAM,QAAQ,GAAG,GAAjB;AACA,IAAM,MAAM,GAAG,gCAAf,C,CAAiD;;AACjD,IAAM,cAAc,GAAG,EAAvB;AAuBA,OAAO,IAAM,SAAS,GAAG,UAAC,EAAD,EAMR;MALX,UAAU,GAAA,EAAA,CAAA,E;MACd,EAAA,GAAA,EAAA,CAAA,U;MAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAI,E;MACd,QAAQ,GAAA,EAAA,CAAA,Q;MACR,SAAS,GAAA,EAAA,CAAA,S;MACT,QAAQ,GAAA,EAAA,CAAA,Q;AACY,SACpB,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,EAAE,EAAE,UADK;AAET,IAAA,OAAO,EAAE;AAAE,MAAA,KAAK,EAAE,CAAT;AAAY,MAAA,IAAI,EAAE;AAAlB,KAFA;AAGT,IAAA,QAAQ,EAAE,QAHD;AAIT,IAAA,SAAS,EAAE,SAJF;AAKT,IAAA,MAAM,EAAA;AALG,GAAX,EAOG,UAAC,gBAAD,EAA+B;AAC9B;AACA;AACA,QAAM,cAAc,GAClB,UAAU,IAAI,gBAAgB,KAAK,QAAnC,GACI,UADJ,GAEI,gBAHN,CAH8B,CAO9B;;AACA,QAAM,cAAc,GAAG;AACrB,MAAA,UAAU,EAAE,aAAW,QAAQ,GAAG,CAAtB,GAAuB,IADd;AAErB,MAAA,OAAO,EAAE;AAFY,KAAvB;AAIA,QAAM,oBAAoB,GAAG;AAC3B,MAAA,QAAQ,EAAE;AACR,QAAA,OAAO,EAAE;AADD,OADiB;AAI3B,MAAA,OAAO,EAAE,EAJkB;AAK3B,MAAA,OAAO,EAAE;AACP,QAAA,OAAO,EAAE;AADF,OALkB;AAQ3B,MAAA,MAAM,EAAE;AARmB,KAA7B,CAZ8B,CAsB9B;;AACA,QAAM,eAAe,GAAG;AACtB,MAAA,UAAU,EAAE,eAAa,QAAb,GAAqB,KAArB,GAA2B,MADjB;AAEtB,MAAA,SAAS,EAAE,oBAAkB,cAAc,GAAG,CAAnC,GAAoC;AAFzB,KAAxB;AAIA,QAAM,qBAAqB,GAAG;AAC5B,MAAA,QAAQ,EAAE,EADkB;AAE5B,MAAA,OAAO,EAAE;AACP,QAAA,SAAS,EACP,UAAU,GAAG,CAAb,GACI,oBAAkB,UAAU,IAAI,cAAc,GAAG,CAArB,CAA5B,GAAmD,QADvD,GAEI;AAJC,OAFmB;AAQ5B,MAAA,OAAO,EAAE;AACP,QAAA,SAAS,EAAE,qBAAmB,cAAc,GAAG,CAApC,GAAqC;AADzC,OARmB;AAW5B,MAAA,MAAM,EAAE;AAXoB,KAA9B;AAaA,WAAO,QAAQ,CAAC;AACd,MAAA,IAAI,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,cAAP,CAAA,EAA0B,oBAAoB,CAAC,cAAD,CAA9C,CADU;AAEd,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,eAAP,CAAA,EAA2B,qBAAqB,CAAC,cAAD,CAAhD;AAFS,KAAD,CAAf;AAID,GAnDH,CADoB;AAsDrB,CA5DM","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport React from 'react';\nimport { Transition } from 'react-transition-group';\nvar duration = 500;\nvar easing = 'cubic-bezier(0.23, 1, 0.32, 1)'; // easeOutQuint\nvar verticalOffset = 16;\nexport var Animation = function (_a) {\n    var hasEntered = _a.in, _b = _a.stackIndex, stackIndex = _b === void 0 ? 0 : _b, onExited = _a.onExited, onEntered = _a.onEntered, children = _a.children;\n    return (React.createElement(Transition, { in: hasEntered, timeout: { enter: 0, exit: duration }, onExited: onExited, onEntered: onEntered, appear: true }, function (unadjustedStatus) {\n        // when we first render, we want to finish the 'entering' state render\n        // then jump to the 'entered' state as quick as possible.\n        var adjustedStatus = hasEntered && unadjustedStatus === 'exited'\n            ? 'entering'\n            : unadjustedStatus;\n        // Fade styles\n        var fadeBaseStyles = {\n            transition: \"opacity \" + duration / 2 + \"ms\",\n            opacity: 1,\n        };\n        var fadeTransitionStyles = {\n            entering: {\n                opacity: 0,\n            },\n            entered: {},\n            exiting: {\n                opacity: 0,\n            },\n            exited: {},\n        };\n        // Slide styles\n        var slideBaseStyles = {\n            transition: \"transform \" + duration + \"ms \" + easing,\n            transform: \"translate3d(0, \" + verticalOffset * 2 + \"px, 0)\",\n        };\n        var slideTransitionStyles = {\n            entering: {},\n            entered: {\n                transform: stackIndex > 0\n                    ? \"translate3d(0, \" + stackIndex * (verticalOffset / 2) + \"px, 0)\"\n                    : null,\n            },\n            exiting: {\n                transform: \"translate3d(0, -\" + verticalOffset * 2 + \"px, 0)\",\n            },\n            exited: {},\n        };\n        return children({\n            fade: __assign(__assign({}, fadeBaseStyles), fadeTransitionStyles[adjustedStatus]),\n            slide: __assign(__assign({}, slideBaseStyles), slideTransitionStyles[adjustedStatus]),\n        });\n    }));\n};\n//# sourceMappingURL=Animation.js.map"]},"metadata":{},"sourceType":"module"}