{"ast":null,"code":"var _jsxFileName = \"/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Dnd/Column.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card.js\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport roleName from \"../../utils/const\";\nimport { connect } from \"react-redux\";\nimport Network from \"../../Service/Network.js\";\nconst api = new Network();\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  width: 280px;\n  min-width: 280px;\n  display: flex;\n  flex-direction: column;\n  background-color: #ebecf0;\n  max-height: 100%;\n  overflow-y: auto;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  flex-grow: 1;\n  height: 75vh;\n  overflow-y: auto;\n`;\n\nclass Column extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataColumn = async column => {\n      const response = await api.get(`/api/admin/cards/${column.id}/lane?offset=${column.limit}`);\n\n      if (response) {\n        const data = response.data.list;\n        this.props.updateColumn(data, column);\n        this.setState({\n          loadMore: false\n        });\n      }\n    };\n\n    this.loadMoreLane = column => {\n      this.setState({\n        loadMore: true\n      });\n      this.getDataColumn(column);\n    };\n\n    this.onScroll = e => {\n      // offsetHeight chieu cao cua div TaskList\n      // scrollHeight chieu cao thuc cua scroll div\n      // console.log(e.target.scrollTop + this.scrollCol.offsetHeight);\n      // console.log(this.scrollCol.scrollHeight);\n      if (e.target.scrollTop + this.scrollCol.offsetHeight == this.scrollCol.scrollHeight) {\n        console.log(\"load\");\n        this.loadMoreLane(this.props.column);\n      }\n    };\n\n    this.state = {\n      loadMore: false,\n      heightOfTaskList: 0\n    };\n    this.scrollCol = null;\n  }\n\n  // tracking scroll\n  componentDidMount() {\n    this.scrollCol = document.getElementById(this.props.column.id);\n  }\n\n  componentWillUnmount() {}\n\n  // end tracking scroll\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"board-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: this.props.column.background\n      },\n      className: \"make-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      className: \"board-column-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.props.column.title), this.props.role !== roleName.DIRECTOR ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap_add_icon\",\n      onClick: this.props.open_add_card_form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"add_icon\",\n      src: \"/img/plus.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })) : \"\"), /*#__PURE__*/React.createElement(Droppable, {\n      style: {\n        overflow: \"hidden\"\n      },\n      droppableId: this.props.column.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(TaskList, Object.assign({\n      id: this.props.column.id,\n      onScroll: e => this.onScroll(e)\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), this.props.cards.map((card, index) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        removeMemberToCard: this.props.removeMemberToCard,\n        addMemberToCard: this.props.addMemberToCard,\n        users: this.props.users,\n        index: index,\n        key: index,\n        card: card,\n        open_detail_card: this.props.open_detail_card.bind(this, card.id, this.props.column.title),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      });\n    }), provided.placeholder, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loadmore-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, this.props.cards.length > 4 && !this.props.column.maximum ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn btn-light btn-shadow btn-sm font-weight-bold font-size-sm spinner spinner-primary spinner-left\",\n      style: {\n        cursor: \"wait\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Please wait...\")) : null))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    role: state.auth.role\n  };\n};\n\nexport default connect(mapStateToProps)(Column);","map":{"version":3,"sources":["/Users/asknteach/projects/fetch/portal.fetch.tech.frontend/src/Components/Dnd/Column.js"],"names":["React","Component","styled","Card","Droppable","roleName","connect","Network","api","Container","div","Title","h3","TaskList","Column","constructor","props","getDataColumn","column","response","get","id","limit","data","list","updateColumn","setState","loadMore","loadMoreLane","onScroll","e","target","scrollTop","scrollCol","offsetHeight","scrollHeight","console","log","state","heightOfTaskList","componentDidMount","document","getElementById","componentWillUnmount","render","background","title","role","DIRECTOR","open_add_card_form","overflow","provided","droppableProps","innerRef","cards","map","card","index","removeMemberToCard","addMemberToCard","users","open_detail_card","bind","placeholder","length","maximum","cursor","mapDispatchToProps","dispatch","mapStateToProps","ownProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card.js\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport roleName from \"../../utils/const\";\nimport { connect } from \"react-redux\";\nimport Network from \"../../Service/Network.js\";\n\nconst api = new Network();\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  width: 280px;\n  min-width: 280px;\n  display: flex;\n  flex-direction: column;\n  background-color: #ebecf0;\n  max-height: 100%;\n  overflow-y: auto;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  flex-grow: 1;\n  height: 75vh;\n  overflow-y: auto;\n`;\n\nclass Column extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadMore: false,\n      heightOfTaskList: 0,\n    };\n    this.scrollCol = null;\n  }\n\n  getDataColumn = async (column) => {\n    const response = await api.get(\n      `/api/admin/cards/${column.id}/lane?offset=${column.limit}`\n    );\n    if (response) {\n      const data = response.data.list;\n      this.props.updateColumn(data, column);\n      this.setState({\n        loadMore: false,\n      });\n    }\n  };\n\n  loadMoreLane = (column) => {\n    this.setState({\n      loadMore: true,\n    });\n    this.getDataColumn(column);\n  };\n\n  // tracking scroll\n \n\n  componentDidMount() {\n    this.scrollCol = document.getElementById(this.props.column.id);\n  }\n\n  componentWillUnmount() {}\n\n  onScroll = (e) => {\n    // offsetHeight chieu cao cua div TaskList\n    // scrollHeight chieu cao thuc cua scroll div\n    // console.log(e.target.scrollTop + this.scrollCol.offsetHeight);\n    // console.log(this.scrollCol.scrollHeight);\n    if (\n      e.target.scrollTop + this.scrollCol.offsetHeight ==\n      this.scrollCol.scrollHeight \n    ) {\n      console.log(\"load\")\n      this.loadMoreLane(this.props.column);\n    }\n  };\n  // end tracking scroll\n  render() {\n    return (\n      <Container className=\"board-column\">\n        <div\n          style={{ background: this.props.column.background }}\n          className=\"make-color\"\n        ></div>\n        <Title className=\"board-column-title\">\n          <div>{this.props.column.title}</div>\n          {this.props.role !== roleName.DIRECTOR ? (\n            <div\n              className=\"wrap_add_icon\"\n              onClick={this.props.open_add_card_form}\n            >\n              <img className=\"add_icon\" src=\"/img/plus.png\" />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Title>\n        <Droppable\n          style={{ overflow: \"hidden\" }}\n          droppableId={this.props.column.id}\n        >\n          {(provided) => (\n            <TaskList\n              id={this.props.column.id}\n              onScroll={(e) => this.onScroll(e)}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.props.cards.map((card, index) => {\n                return (\n                  <Card\n                    removeMemberToCard={this.props.removeMemberToCard}\n                    addMemberToCard={this.props.addMemberToCard}\n                    users={this.props.users}\n                    index={index}\n                    key={index}\n                    card={card}\n                    open_detail_card={this.props.open_detail_card.bind(\n                      this,\n                      card.id,\n                      this.props.column.title\n                    )}\n                  />\n                );\n              })}\n              {provided.placeholder}\n              <div className=\"loadmore-card\">\n                {this.props.cards.length > 4 && !this.props.column.maximum ? (\n                  <div>\n                    <div\n                      className=\"btn btn-light btn-shadow btn-sm font-weight-bold font-size-sm spinner spinner-primary spinner-left\"\n                      style={{ cursor: \"wait\" }}\n                    >\n                      Please wait...\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </TaskList>\n          )}\n        </Droppable>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    role: state.auth.role,\n  };\n};\n\nexport default connect(mapStateToProps)(Column);\n"]},"metadata":{},"sourceType":"module"}